digraph udhcp_get_option {  
"1000115" [label = "(<operator>.assignment,v2 = a1 + 240)" ]
"1000117" [label = "(<operator>.addition,a1 + 240)" ]
"1000120" [label = "(<operator>.assignment,v3 = 0)" ]
"1000124" [label = "(<operator>.assignment,i = 388)" ]
"1000127" [label = "(<operator>.assignment,i = 64)" ]
"1000137" [label = "(<operator>.assignment,v6 = *v2)" ]
"1000139" [label = "(<operator>.indirection,*v2)" ]
"1000142" [label = "(<operator>.logicalNot,!*v2)" ]
"1000143" [label = "(<operator>.indirection,*v2)" ]
"1000146" [label = "(<operator>.preDecrement,--i)" ]
"1000148" [label = "(<operator>.preIncrement,++v2)" ]
"1000152" [label = "(<operator>.equals,v6 == 255)" ]
"1000157" [label = "(<operator>.logicalOr,i < 2 || (v7 = v2[1] + 2, i -= v7, i < 0))" ]
"1000158" [label = "(<operator>.lessThan,i < 2)" ]
"1000162" [label = "(<operator>.assignment,v7 = v2[1] + 2)" ]
"1000164" [label = "(<operator>.addition,v2[1] + 2)" ]
"1000165" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000170" [label = "(<operator>.assignmentMinus,i -= v7)" ]
"1000173" [label = "(<operator>.lessThan,i < 0)" ]
"1000178" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000180" [label = "(RETURN,return 0;,return 0;)" ]
"1000183" [label = "(<operator>.equals,v6 == a2)" ]
"1000187" [label = "(log_option,log_option(\"option found\", v2))" ]
"1000190" [label = "(RETURN,return v2 + 2;,return v2 + 2;)" ]
"1000191" [label = "(<operator>.addition,v2 + 2)" ]
"1000195" [label = "(<operator>.logicalAnd,v6 == 52 && v7 >= 3)" ]
"1000196" [label = "(<operator>.equals,v6 == 52)" ]
"1000199" [label = "(<operator>.greaterEqualsThan,v7 >= 3)" ]
"1000202" [label = "(<operators>.assignmentOr,v3 |= v2[2])" ]
"1000204" [label = "(<operator>.indirectIndexAccess,v2[2])" ]
"1000207" [label = "(<operator>.assignmentPlus,v2 += v7)" ]
"1000212" [label = "(<operator>.lessEqualsThan,i <= 0)" ]
"1000217" [label = "(<operator>.notEquals,(v3 & 0x101) != 1)" ]
"1000218" [label = "(<operator>.and,v3 & 0x101)" ]
"1000223" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000226" [label = "(<operator>.assignment,v2 = a1 + 108)" ]
"1000228" [label = "(<operator>.addition,a1 + 108)" ]
"1000231" [label = "(<operator>.assignment,i = 128)" ]
"1000235" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000236" [label = "(<operator>.and,v3 & 0x202)" ]
"1000241" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000244" [label = "(<operator>.assignment,v2 = a1 + 44)" ]
"1000246" [label = "(<operator>.addition,a1 + 44)" ]
"1000250" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 3)" ]
"1000251" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000252" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000255" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000258" [label = "(RETURN,return 0;,return 0;)" ]
"1000106" [label = "(METHOD,udhcp_get_option)" ]
"1000260" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000115" -> "1000120" 
  "1000117" -> "1000115" 
  "1000120" -> "1000124" 
  "1000124" -> "1000139" 
  "1000124" -> "1000218" 
  "1000124" -> "1000236" 
  "1000127" -> "1000139" 
  "1000127" -> "1000218" 
  "1000127" -> "1000236" 
  "1000137" -> "1000143" 
  "1000139" -> "1000137" 
  "1000142" -> "1000146" 
  "1000142" -> "1000152" 
  "1000143" -> "1000142" 
  "1000146" -> "1000148" 
  "1000148" -> "1000212" 
  "1000152" -> "1000252" 
  "1000152" -> "1000218" 
  "1000152" -> "1000236" 
  "1000152" -> "1000158" 
  "1000157" -> "1000178" 
  "1000157" -> "1000183" 
  "1000158" -> "1000157" 
  "1000158" -> "1000165" 
  "1000162" -> "1000170" 
  "1000164" -> "1000162" 
  "1000165" -> "1000164" 
  "1000170" -> "1000173" 
  "1000173" -> "1000157" 
  "1000178" -> "1000180" 
  "1000180" -> "1000260" 
  "1000183" -> "1000187" 
  "1000183" -> "1000196" 
  "1000187" -> "1000191" 
  "1000190" -> "1000260" 
  "1000191" -> "1000190" 
  "1000195" -> "1000204" 
  "1000195" -> "1000207" 
  "1000196" -> "1000195" 
  "1000196" -> "1000199" 
  "1000199" -> "1000195" 
  "1000202" -> "1000207" 
  "1000204" -> "1000202" 
  "1000207" -> "1000212" 
  "1000212" -> "1000139" 
  "1000212" -> "1000218" 
  "1000212" -> "1000178" 
  "1000217" -> "1000252" 
  "1000217" -> "1000236" 
  "1000217" -> "1000223" 
  "1000218" -> "1000217" 
  "1000223" -> "1000228" 
  "1000226" -> "1000231" 
  "1000228" -> "1000226" 
  "1000231" -> "1000139" 
  "1000231" -> "1000218" 
  "1000231" -> "1000236" 
  "1000235" -> "1000252" 
  "1000235" -> "1000241" 
  "1000236" -> "1000235" 
  "1000241" -> "1000246" 
  "1000244" -> "1000127" 
  "1000246" -> "1000244" 
  "1000250" -> "1000255" 
  "1000250" -> "1000258" 
  "1000251" -> "1000250" 
  "1000252" -> "1000251" 
  "1000255" -> "1000258" 
  "1000258" -> "1000260" 
  "1000106" -> "1000117" 
}
