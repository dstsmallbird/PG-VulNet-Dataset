digraph udhcp_get_option {  
"1000113" [label = "(<operator>.assignment,v3 = 0)" ]
"1000116" [label = "(<operator>.assignment,v6 = a1 + 240)" ]
"1000118" [label = "(<operator>.addition,a1 + 240)" ]
"1000122" [label = "(<operator>.assignment,i = 388)" ]
"1000125" [label = "(<operator>.assignment,i = 64)" ]
"1000139" [label = "(<operator>.lessEqualsThan,i <= 0)" ]
"1000144" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000146" [label = "(RETURN,return 0;,return 0;)" ]
"1000149" [label = "(<operator>.indirection,*v6)" ]
"1000152" [label = "(<operator>.preDecrement,--i)" ]
"1000154" [label = "(<operator>.preIncrement,++v6)" ]
"1000157" [label = "(<operator>.equals,*v6 == 255)" ]
"1000158" [label = "(<operator>.indirection,*v6)" ]
"1000163" [label = "(<operator>.lessEqualsThan,i <= 1)" ]
"1000167" [label = "(<operator>.assignment,v5 = v6[1] + 2)" ]
"1000169" [label = "(<operator>.addition,v6[1] + 2)" ]
"1000170" [label = "(<operator>.indirectIndexAccess,v6[1])" ]
"1000174" [label = "(<operator>.assignmentMinus,i -= v5)" ]
"1000178" [label = "(<operator>.lessEqualsThan,i <= -1)" ]
"1000180" [label = "(<operator>.minus,-1)" ]
"1000184" [label = "(<operator>.equals,*v6 == a2)" ]
"1000185" [label = "(<operator>.indirection,*v6)" ]
"1000189" [label = "(log_option,log_option(\"option found\", v6))" ]
"1000192" [label = "(RETURN,return v6 + 2;,return v6 + 2;)" ]
"1000193" [label = "(<operator>.addition,v6 + 2)" ]
"1000197" [label = "(<operator>.logicalAnd,*v6 == 52 && v5 >= 3)" ]
"1000198" [label = "(<operator>.equals,*v6 == 52)" ]
"1000199" [label = "(<operator>.indirection,*v6)" ]
"1000202" [label = "(<operator>.greaterEqualsThan,v5 >= 3)" ]
"1000205" [label = "(<operators>.assignmentOr,v3 |= v6[2])" ]
"1000207" [label = "(<operator>.indirectIndexAccess,v6[2])" ]
"1000210" [label = "(<operator>.assignmentPlus,v6 += v5)" ]
"1000214" [label = "(<operator>.notEquals,(v3 & 0x101) != 1)" ]
"1000215" [label = "(<operator>.and,v3 & 0x101)" ]
"1000220" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000223" [label = "(<operator>.assignment,v6 = a1 + 108)" ]
"1000225" [label = "(<operator>.addition,a1 + 108)" ]
"1000228" [label = "(<operator>.assignment,i = 128)" ]
"1000232" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000233" [label = "(<operator>.and,v3 & 0x202)" ]
"1000238" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000241" [label = "(<operator>.assignment,v6 = a1 + 44)" ]
"1000243" [label = "(<operator>.addition,a1 + 44)" ]
"1000247" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 3)" ]
"1000248" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000249" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000252" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000255" [label = "(RETURN,return 0;,return 0;)" ]
"1000105" [label = "(METHOD,udhcp_get_option)" ]
"1000257" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000113" -> "1000118" 
  "1000116" -> "1000122" 
  "1000118" -> "1000116" 
  "1000122" -> "1000139" 
  "1000122" -> "1000158" 
  "1000122" -> "1000215" 
  "1000122" -> "1000233" 
  "1000125" -> "1000139" 
  "1000125" -> "1000158" 
  "1000125" -> "1000215" 
  "1000125" -> "1000233" 
  "1000139" -> "1000144" 
  "1000139" -> "1000149" 
  "1000144" -> "1000146" 
  "1000146" -> "1000257" 
  "1000149" -> "1000249" 
  "1000149" -> "1000158" 
  "1000149" -> "1000215" 
  "1000149" -> "1000233" 
  "1000149" -> "1000152" 
  "1000152" -> "1000154" 
  "1000154" -> "1000139" 
  "1000154" -> "1000158" 
  "1000157" -> "1000249" 
  "1000157" -> "1000215" 
  "1000157" -> "1000233" 
  "1000157" -> "1000163" 
  "1000158" -> "1000157" 
  "1000163" -> "1000144" 
  "1000163" -> "1000170" 
  "1000167" -> "1000174" 
  "1000169" -> "1000167" 
  "1000170" -> "1000169" 
  "1000174" -> "1000180" 
  "1000178" -> "1000144" 
  "1000178" -> "1000185" 
  "1000180" -> "1000178" 
  "1000184" -> "1000189" 
  "1000184" -> "1000199" 
  "1000185" -> "1000184" 
  "1000189" -> "1000193" 
  "1000192" -> "1000257" 
  "1000193" -> "1000192" 
  "1000197" -> "1000207" 
  "1000197" -> "1000210" 
  "1000198" -> "1000197" 
  "1000198" -> "1000202" 
  "1000199" -> "1000198" 
  "1000202" -> "1000197" 
  "1000205" -> "1000210" 
  "1000207" -> "1000205" 
  "1000210" -> "1000139" 
  "1000210" -> "1000158" 
  "1000210" -> "1000215" 
  "1000214" -> "1000249" 
  "1000214" -> "1000233" 
  "1000214" -> "1000220" 
  "1000215" -> "1000214" 
  "1000220" -> "1000225" 
  "1000223" -> "1000228" 
  "1000225" -> "1000223" 
  "1000228" -> "1000139" 
  "1000228" -> "1000158" 
  "1000228" -> "1000215" 
  "1000228" -> "1000233" 
  "1000232" -> "1000249" 
  "1000232" -> "1000238" 
  "1000233" -> "1000232" 
  "1000238" -> "1000243" 
  "1000241" -> "1000125" 
  "1000243" -> "1000241" 
  "1000247" -> "1000252" 
  "1000247" -> "1000255" 
  "1000248" -> "1000247" 
  "1000249" -> "1000248" 
  "1000252" -> "1000255" 
  "1000255" -> "1000257" 
  "1000105" -> "1000113" 
}
