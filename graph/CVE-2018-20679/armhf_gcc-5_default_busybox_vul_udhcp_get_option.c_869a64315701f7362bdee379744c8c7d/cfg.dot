digraph udhcp_get_option {  
"1000115" [label = "(<operator>.assignment,v2 = a1 + 240)" ]
"1000117" [label = "(<operator>.addition,a1 + 240)" ]
"1000120" [label = "(<operator>.assignment,v3 = 0)" ]
"1000124" [label = "(<operator>.assignment,i = 388)" ]
"1000127" [label = "(<operator>.assignment,i = 64)" ]
"1000137" [label = "(<operator>.assignment,v5 = *v2)" ]
"1000139" [label = "(<operator>.indirection,*v2)" ]
"1000142" [label = "(<operator>.logicalNot,!*v2)" ]
"1000143" [label = "(<operator>.indirection,*v2)" ]
"1000146" [label = "(<operator>.preDecrement,--i)" ]
"1000148" [label = "(<operator>.preIncrement,++v2)" ]
"1000152" [label = "(<operator>.equals,v5 == 255)" ]
"1000157" [label = "(<operator>.logicalOr,i == 1 || (v6 = v2[1] + 2, i -= v6, i < 0))" ]
"1000158" [label = "(<operator>.equals,i == 1)" ]
"1000162" [label = "(<operator>.assignment,v6 = v2[1] + 2)" ]
"1000164" [label = "(<operator>.addition,v2[1] + 2)" ]
"1000165" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000170" [label = "(<operator>.assignmentMinus,i -= v6)" ]
"1000173" [label = "(<operator>.lessThan,i < 0)" ]
"1000178" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\", a2, v3))" ]
"1000182" [label = "(RETURN,return 0;,return 0;)" ]
"1000185" [label = "(<operator>.equals,a2 == v5)" ]
"1000189" [label = "(log_option,log_option(\"option found\", v2, v3))" ]
"1000193" [label = "(RETURN,return v2 + 2;,return v2 + 2;)" ]
"1000194" [label = "(<operator>.addition,v2 + 2)" ]
"1000198" [label = "(<operator>.logicalAnd,v5 == 52 && v2[1])" ]
"1000199" [label = "(<operator>.equals,v5 == 52)" ]
"1000202" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000205" [label = "(<operators>.assignmentOr,v3 |= v2[2])" ]
"1000207" [label = "(<operator>.indirectIndexAccess,v2[2])" ]
"1000210" [label = "(<operator>.assignmentPlus,v2 += v6)" ]
"1000215" [label = "(<operator>.logicalNot,!i)" ]
"1000219" [label = "(<operator>.notEquals,(v3 & 0x101) != 1)" ]
"1000220" [label = "(<operator>.and,v3 & 0x101)" ]
"1000225" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000228" [label = "(<operator>.assignment,v2 = a1 + 108)" ]
"1000230" [label = "(<operator>.addition,a1 + 108)" ]
"1000233" [label = "(<operator>.assignment,i = 128)" ]
"1000237" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000238" [label = "(<operator>.and,v3 & 0x202)" ]
"1000243" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000246" [label = "(<operator>.assignment,v2 = a1 + 44)" ]
"1000248" [label = "(<operator>.addition,a1 + 44)" ]
"1000252" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000253" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000254" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000257" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000260" [label = "(RETURN,return 0;,return 0;)" ]
"1000106" [label = "(METHOD,udhcp_get_option)" ]
"1000262" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000115" -> "1000120" 
  "1000117" -> "1000115" 
  "1000120" -> "1000124" 
  "1000124" -> "1000139" 
  "1000124" -> "1000220" 
  "1000124" -> "1000238" 
  "1000127" -> "1000139" 
  "1000127" -> "1000220" 
  "1000127" -> "1000238" 
  "1000137" -> "1000143" 
  "1000139" -> "1000137" 
  "1000142" -> "1000146" 
  "1000142" -> "1000152" 
  "1000143" -> "1000142" 
  "1000146" -> "1000148" 
  "1000148" -> "1000215" 
  "1000152" -> "1000254" 
  "1000152" -> "1000220" 
  "1000152" -> "1000238" 
  "1000152" -> "1000158" 
  "1000157" -> "1000178" 
  "1000157" -> "1000185" 
  "1000158" -> "1000157" 
  "1000158" -> "1000165" 
  "1000162" -> "1000170" 
  "1000164" -> "1000162" 
  "1000165" -> "1000164" 
  "1000170" -> "1000173" 
  "1000173" -> "1000157" 
  "1000178" -> "1000182" 
  "1000182" -> "1000262" 
  "1000185" -> "1000189" 
  "1000185" -> "1000199" 
  "1000189" -> "1000194" 
  "1000193" -> "1000262" 
  "1000194" -> "1000193" 
  "1000198" -> "1000207" 
  "1000198" -> "1000210" 
  "1000199" -> "1000198" 
  "1000199" -> "1000202" 
  "1000202" -> "1000198" 
  "1000205" -> "1000210" 
  "1000207" -> "1000205" 
  "1000210" -> "1000215" 
  "1000215" -> "1000139" 
  "1000215" -> "1000220" 
  "1000215" -> "1000178" 
  "1000219" -> "1000254" 
  "1000219" -> "1000238" 
  "1000219" -> "1000225" 
  "1000220" -> "1000219" 
  "1000225" -> "1000230" 
  "1000228" -> "1000233" 
  "1000230" -> "1000228" 
  "1000233" -> "1000139" 
  "1000233" -> "1000220" 
  "1000233" -> "1000238" 
  "1000237" -> "1000254" 
  "1000237" -> "1000243" 
  "1000238" -> "1000237" 
  "1000243" -> "1000248" 
  "1000246" -> "1000127" 
  "1000248" -> "1000246" 
  "1000252" -> "1000257" 
  "1000252" -> "1000260" 
  "1000253" -> "1000252" 
  "1000254" -> "1000253" 
  "1000257" -> "1000260" 
  "1000260" -> "1000262" 
  "1000106" -> "1000117" 
}
