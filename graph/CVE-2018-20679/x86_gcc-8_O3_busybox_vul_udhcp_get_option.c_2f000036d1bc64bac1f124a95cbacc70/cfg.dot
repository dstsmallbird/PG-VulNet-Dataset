digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v2 = 388)" ]
"1000120" [label = "(<operator>.assignment,v3 = a1 + 240)" ]
"1000122" [label = "(<operator>.addition,a1 + 240)" ]
"1000126" [label = "(<operator>.assignment,i = (unsigned int)&dword_0)" ]
"1000128" [label = "(<operator>.cast,(unsigned int)&dword_0)" ]
"1000129" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000130" [label = "(<operator>.addressOf,&dword_0)" ]
"1000132" [label = "(<operators>.assignmentOr,i |= 0x202u)" ]
"1000142" [label = "(<operator>.assignment,v5 = *v3)" ]
"1000144" [label = "(<operator>.indirection,*v3)" ]
"1000147" [label = "(<operator>.logicalNot,!*v3)" ]
"1000148" [label = "(<operator>.indirection,*v3)" ]
"1000151" [label = "(<operator>.preDecrement,--v2)" ]
"1000153" [label = "(<operator>.preIncrement,++v3)" ]
"1000157" [label = "(<operator>.equals,v5 == 0xFF)" ]
"1000162" [label = "(<operator>.logicalOr,v2 == 1 || (v6 = v3[1] + 2, v2 -= v6, v2 < 0))" ]
"1000163" [label = "(<operator>.equals,v2 == 1)" ]
"1000167" [label = "(<operator>.assignment,v6 = v3[1] + 2)" ]
"1000169" [label = "(<operator>.addition,v3[1] + 2)" ]
"1000170" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000175" [label = "(<operator>.assignmentMinus,v2 -= v6)" ]
"1000178" [label = "(<operator>.lessThan,v2 < 0)" ]
"1000183" [label = "(bb_error_msg,bb_error_msg(&GLOBAL_OFFSET_TABLE_ - 117148))" ]
"1000184" [label = "(<operator>.subtraction,&GLOBAL_OFFSET_TABLE_ - 117148)" ]
"1000185" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000188" [label = "(RETURN,return 0;,return 0;)" ]
"1000191" [label = "(<operator>.equals,v5 == a2)" ]
"1000196" [label = "(<operator>.greaterThan,(unsigned int)*(&GLOBAL_OFFSET_TABLE_ + 857) > 1)" ]
"1000197" [label = "(<operator>.cast,(unsigned int)*(&GLOBAL_OFFSET_TABLE_ + 857))" ]
"1000198" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000199" [label = "(<operator>.indirection,*(&GLOBAL_OFFSET_TABLE_ + 857))" ]
"1000200" [label = "(<operator>.addition,&GLOBAL_OFFSET_TABLE_ + 857)" ]
"1000201" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000205" [label = "(log_option_part_0,log_option_part_0())" ]
"1000206" [label = "(RETURN,return v3 + 2;,return v3 + 2;)" ]
"1000207" [label = "(<operator>.addition,v3 + 2)" ]
"1000211" [label = "(<operator>.equals,v5 == 52)" ]
"1000216" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000219" [label = "(<operators>.assignmentOr,i |= v3[2])" ]
"1000221" [label = "(<operator>.indirectIndexAccess,v3[2])" ]
"1000224" [label = "(<operator>.assignmentPlus,v3 += v6)" ]
"1000229" [label = "(<operator>.logicalNot,!v2)" ]
"1000233" [label = "(<operator>.notEquals,(i & 0x101) != 1)" ]
"1000234" [label = "(<operator>.and,i & 0x101)" ]
"1000239" [label = "(<operators>.assignmentOr,i |= 0x101u)" ]
"1000242" [label = "(<operator>.assignment,v2 = 128)" ]
"1000245" [label = "(<operator>.assignment,v3 = a1 + 108)" ]
"1000247" [label = "(<operator>.addition,a1 + 108)" ]
"1000251" [label = "(<operator>.notEquals,(i & 0x202) != 2)" ]
"1000252" [label = "(<operator>.and,i & 0x202)" ]
"1000257" [label = "(<operator>.assignment,v2 = 64)" ]
"1000260" [label = "(<operator>.assignment,v3 = a1 + 44)" ]
"1000262" [label = "(<operator>.addition,a1 + 44)" ]
"1000265" [label = "(<operator>.assignment,result = 0)" ]
"1000269" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000270" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000271" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000275" [label = "(bb_error_msg,bb_error_msg((char *)&GLOBAL_OFFSET_TABLE_ - 377517))" ]
"1000276" [label = "(<operator>.subtraction,(char *)&GLOBAL_OFFSET_TABLE_ - 377517)" ]
"1000277" [label = "(<operator>.cast,(char *)&GLOBAL_OFFSET_TABLE_)" ]
"1000278" [label = "(UNKNOWN,char *,char *)" ]
"1000279" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000282" [label = "(<operator>.assignment,result = 0)" ]
"1000285" [label = "(RETURN,return result;,return result;)" ]
"1000107" [label = "(METHOD,udhcp_get_option)" ]
"1000287" [label = "(METHOD_RETURN,__usercall)" ]
  "1000117" -> "1000122" 
  "1000120" -> "1000129" 
  "1000122" -> "1000120" 
  "1000126" -> "1000144" 
  "1000126" -> "1000234" 
  "1000126" -> "1000252" 
  "1000128" -> "1000126" 
  "1000129" -> "1000130" 
  "1000130" -> "1000128" 
  "1000132" -> "1000144" 
  "1000132" -> "1000234" 
  "1000132" -> "1000252" 
  "1000142" -> "1000148" 
  "1000144" -> "1000142" 
  "1000147" -> "1000151" 
  "1000147" -> "1000157" 
  "1000148" -> "1000147" 
  "1000151" -> "1000153" 
  "1000153" -> "1000229" 
  "1000157" -> "1000234" 
  "1000157" -> "1000252" 
  "1000157" -> "1000265" 
  "1000157" -> "1000163" 
  "1000162" -> "1000185" 
  "1000162" -> "1000191" 
  "1000163" -> "1000162" 
  "1000163" -> "1000170" 
  "1000167" -> "1000175" 
  "1000169" -> "1000167" 
  "1000170" -> "1000169" 
  "1000175" -> "1000178" 
  "1000178" -> "1000162" 
  "1000183" -> "1000188" 
  "1000184" -> "1000183" 
  "1000185" -> "1000184" 
  "1000188" -> "1000287" 
  "1000191" -> "1000198" 
  "1000191" -> "1000211" 
  "1000196" -> "1000205" 
  "1000196" -> "1000207" 
  "1000197" -> "1000196" 
  "1000198" -> "1000201" 
  "1000199" -> "1000197" 
  "1000200" -> "1000199" 
  "1000201" -> "1000200" 
  "1000205" -> "1000207" 
  "1000206" -> "1000287" 
  "1000207" -> "1000206" 
  "1000211" -> "1000216" 
  "1000211" -> "1000224" 
  "1000216" -> "1000221" 
  "1000216" -> "1000224" 
  "1000219" -> "1000224" 
  "1000221" -> "1000219" 
  "1000224" -> "1000229" 
  "1000229" -> "1000144" 
  "1000229" -> "1000234" 
  "1000229" -> "1000185" 
  "1000233" -> "1000252" 
  "1000233" -> "1000265" 
  "1000233" -> "1000239" 
  "1000234" -> "1000233" 
  "1000239" -> "1000242" 
  "1000242" -> "1000247" 
  "1000245" -> "1000144" 
  "1000245" -> "1000234" 
  "1000245" -> "1000252" 
  "1000247" -> "1000245" 
  "1000251" -> "1000265" 
  "1000251" -> "1000257" 
  "1000252" -> "1000251" 
  "1000257" -> "1000262" 
  "1000260" -> "1000132" 
  "1000262" -> "1000260" 
  "1000265" -> "1000271" 
  "1000269" -> "1000278" 
  "1000269" -> "1000285" 
  "1000270" -> "1000269" 
  "1000271" -> "1000270" 
  "1000275" -> "1000282" 
  "1000276" -> "1000275" 
  "1000277" -> "1000276" 
  "1000278" -> "1000279" 
  "1000279" -> "1000277" 
  "1000282" -> "1000285" 
  "1000285" -> "1000287" 
  "1000107" -> "1000117" 
}
