digraph udhcp_get_option {  
"1000125" [label = "(<operator>.assignment,v2 = 0)" ]
"1000128" [label = "(<operator>.assignment,v3 = a1 + 240)" ]
"1000130" [label = "(<operator>.addition,a1 + 240)" ]
"1000133" [label = "(<operator>.assignment,v4 = 388)" ]
"1000144" [label = "(<operator>.assignment,v7 = *(unsigned __int8 *)(v3 + v5))" ]
"1000146" [label = "(<operator>.indirection,*(unsigned __int8 *)(v3 + v5))" ]
"1000147" [label = "(<operator>.cast,(unsigned __int8 *)(v3 + v5))" ]
"1000148" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000149" [label = "(<operator>.addition,v3 + v5)" ]
"1000153" [label = "(<operator>.indirection,*(_BYTE *)(v3 + v5))" ]
"1000154" [label = "(<operator>.cast,(_BYTE *)(v3 + v5))" ]
"1000155" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000156" [label = "(<operator>.addition,v3 + v5)" ]
"1000160" [label = "(<operator>.preDecrement,--v6)" ]
"1000162" [label = "(<operator>.preIncrement,++v5)" ]
"1000165" [label = "(<operator>.lessThan,v4 + (int)v6 < 2)" ]
"1000166" [label = "(<operator>.addition,v4 + (int)v6)" ]
"1000168" [label = "(<operator>.cast,(int)v6)" ]
"1000169" [label = "(UNKNOWN,int,int)" ]
"1000174" [label = "(<operator>.equals,v7 == 255)" ]
"1000179" [label = "(<operator>.equals,(v2 & 0x101) == 1)" ]
"1000180" [label = "(<operator>.and,v2 & 0x101)" ]
"1000185" [label = "(<operators>.assignmentOr,v2 |= 0x101u)" ]
"1000188" [label = "(<operator>.assignment,v4 = 128)" ]
"1000191" [label = "(<operator>.assignment,v3 = a1 + 108)" ]
"1000193" [label = "(<operator>.addition,a1 + 108)" ]
"1000199" [label = "(<operator>.notEquals,(v2 & 0x202) != 2)" ]
"1000200" [label = "(<operator>.and,v2 & 0x202)" ]
"1000206" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 3)" ]
"1000207" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000208" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000211" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000215" [label = "(<operators>.assignmentOr,v2 |= 0x202u)" ]
"1000218" [label = "(<operator>.assignment,v4 = 64)" ]
"1000221" [label = "(<operator>.assignment,v3 = a1 + 44)" ]
"1000223" [label = "(<operator>.addition,a1 + 44)" ]
"1000228" [label = "(<operator>.logicalOr,v4 - (int)v5 < 2 || (v8 = *(unsigned __int8 *)(v3 + v5 + 1), v4 = v4 - 2 - v8 - v5, (v4 & 0x80000000) != 0))" ]
"1000229" [label = "(<operator>.lessThan,v4 - (int)v5 < 2)" ]
"1000230" [label = "(<operator>.subtraction,v4 - (int)v5)" ]
"1000232" [label = "(<operator>.cast,(int)v5)" ]
"1000233" [label = "(UNKNOWN,int,int)" ]
"1000237" [label = "(<operator>.assignment,v8 = *(unsigned __int8 *)(v3 + v5 + 1))" ]
"1000239" [label = "(<operator>.indirection,*(unsigned __int8 *)(v3 + v5 + 1))" ]
"1000240" [label = "(<operator>.cast,(unsigned __int8 *)(v3 + v5 + 1))" ]
"1000241" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000242" [label = "(<operator>.addition,v3 + v5 + 1)" ]
"1000244" [label = "(<operator>.addition,v5 + 1)" ]
"1000248" [label = "(<operator>.assignment,v4 = v4 - 2 - v8 - v5)" ]
"1000250" [label = "(<operator>.subtraction,v4 - 2 - v8 - v5)" ]
"1000252" [label = "(<operator>.subtraction,2 - v8 - v5)" ]
"1000254" [label = "(<operator>.subtraction,v8 - v5)" ]
"1000257" [label = "(<operator>.notEquals,(v4 & 0x80000000) != 0)" ]
"1000258" [label = "(<operator>.and,v4 & 0x80000000)" ]
"1000264" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000268" [label = "(<operator>.notEquals,v7 != (_DWORD)a2)" ]
"1000270" [label = "(<operator>.cast,(_DWORD)a2)" ]
"1000271" [label = "(UNKNOWN,_DWORD,_DWORD)" ]
"1000275" [label = "(<operator>.logicalAnd,v7 == 52 && *(_BYTE *)(v3 + v5 + 1))" ]
"1000276" [label = "(<operator>.equals,v7 == 52)" ]
"1000279" [label = "(<operator>.indirection,*(_BYTE *)(v3 + v5 + 1))" ]
"1000280" [label = "(<operator>.cast,(_BYTE *)(v3 + v5 + 1))" ]
"1000281" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000282" [label = "(<operator>.addition,v3 + v5 + 1)" ]
"1000284" [label = "(<operator>.addition,v5 + 1)" ]
"1000287" [label = "(<operators>.assignmentOr,v2 |= *(unsigned __int8 *)(v3 + v5 + 2))" ]
"1000289" [label = "(<operator>.indirection,*(unsigned __int8 *)(v3 + v5 + 2))" ]
"1000290" [label = "(<operator>.cast,(unsigned __int8 *)(v3 + v5 + 2))" ]
"1000291" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000292" [label = "(<operator>.addition,v3 + v5 + 2)" ]
"1000294" [label = "(<operator>.addition,v5 + 2)" ]
"1000297" [label = "(<operator>.assignmentPlus,v3 += v8 + 2 + v5)" ]
"1000299" [label = "(<operator>.addition,v8 + 2 + v5)" ]
"1000301" [label = "(<operator>.addition,2 + v5)" ]
"1000306" [label = "(<operator>.greaterEqualsThan,v4 >= 1)" ]
"1000312" [label = "(<operator>.assignment,v11 = (unsigned __int8 *)(v3 + v5))" ]
"1000314" [label = "(<operator>.cast,(unsigned __int8 *)(v3 + v5))" ]
"1000315" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000316" [label = "(<operator>.addition,v3 + v5)" ]
"1000319" [label = "(<operator>.assignment,v9 = v3 + v5 + 2)" ]
"1000321" [label = "(<operator>.addition,v3 + v5 + 2)" ]
"1000323" [label = "(<operator>.addition,v5 + 2)" ]
"1000327" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 1)" ]
"1000328" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000329" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000333" [label = "(<operator>.assignment,*(_BYTE *)bin2hex(v12, v11 + 2) = 0)" ]
"1000334" [label = "(<operator>.indirection,*(_BYTE *)bin2hex(v12, v11 + 2))" ]
"1000335" [label = "(<operator>.cast,(_BYTE *)bin2hex(v12, v11 + 2))" ]
"1000336" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000337" [label = "(bin2hex,bin2hex(v12, v11 + 2))" ]
"1000339" [label = "(<operator>.addition,v11 + 2)" ]
"1000343" [label = "(bb_error_msg,bb_error_msg(\"%s: 0x%02x %s\", \"option found\", *v11, v12))" ]
"1000346" [label = "(<operator>.indirection,*v11)" ]
"1000349" [label = "(RETURN,return v9;,return v9;)" ]
"1000111" [label = "(METHOD,udhcp_get_option)" ]
"1000351" [label = "(METHOD_RETURN,__int64 __fastcall)" ]
  "1000125" -> "1000130" 
  "1000128" -> "1000133" 
  "1000130" -> "1000128" 
  "1000133" -> "1000148" 
  "1000133" -> "1000174" 
  "1000133" -> "1000315" 
  "1000144" -> "1000155" 
  "1000146" -> "1000144" 
  "1000147" -> "1000146" 
  "1000148" -> "1000149" 
  "1000149" -> "1000147" 
  "1000153" -> "1000174" 
  "1000153" -> "1000315" 
  "1000153" -> "1000160" 
  "1000154" -> "1000153" 
  "1000155" -> "1000156" 
  "1000156" -> "1000154" 
  "1000160" -> "1000162" 
  "1000162" -> "1000169" 
  "1000165" -> "1000148" 
  "1000165" -> "1000174" 
  "1000165" -> "1000264" 
  "1000166" -> "1000165" 
  "1000168" -> "1000166" 
  "1000169" -> "1000168" 
  "1000174" -> "1000180" 
  "1000174" -> "1000233" 
  "1000179" -> "1000185" 
  "1000179" -> "1000200" 
  "1000180" -> "1000179" 
  "1000185" -> "1000188" 
  "1000188" -> "1000193" 
  "1000191" -> "1000306" 
  "1000193" -> "1000191" 
  "1000199" -> "1000208" 
  "1000199" -> "1000215" 
  "1000200" -> "1000199" 
  "1000206" -> "1000211" 
  "1000206" -> "1000215" 
  "1000207" -> "1000206" 
  "1000208" -> "1000207" 
  "1000211" -> "1000215" 
  "1000215" -> "1000218" 
  "1000218" -> "1000223" 
  "1000221" -> "1000306" 
  "1000223" -> "1000221" 
  "1000228" -> "1000264" 
  "1000228" -> "1000271" 
  "1000229" -> "1000228" 
  "1000229" -> "1000241" 
  "1000230" -> "1000229" 
  "1000232" -> "1000230" 
  "1000233" -> "1000232" 
  "1000237" -> "1000254" 
  "1000239" -> "1000237" 
  "1000240" -> "1000239" 
  "1000241" -> "1000244" 
  "1000242" -> "1000240" 
  "1000244" -> "1000242" 
  "1000248" -> "1000258" 
  "1000250" -> "1000248" 
  "1000252" -> "1000250" 
  "1000254" -> "1000252" 
  "1000257" -> "1000228" 
  "1000258" -> "1000257" 
  "1000264" -> "1000271" 
  "1000268" -> "1000276" 
  "1000268" -> "1000315" 
  "1000270" -> "1000268" 
  "1000271" -> "1000270" 
  "1000275" -> "1000291" 
  "1000275" -> "1000301" 
  "1000276" -> "1000281" 
  "1000276" -> "1000275" 
  "1000279" -> "1000275" 
  "1000280" -> "1000279" 
  "1000281" -> "1000284" 
  "1000282" -> "1000280" 
  "1000284" -> "1000282" 
  "1000287" -> "1000301" 
  "1000289" -> "1000287" 
  "1000290" -> "1000289" 
  "1000291" -> "1000294" 
  "1000292" -> "1000290" 
  "1000294" -> "1000292" 
  "1000297" -> "1000306" 
  "1000299" -> "1000297" 
  "1000301" -> "1000299" 
  "1000306" -> "1000148" 
  "1000306" -> "1000174" 
  "1000306" -> "1000315" 
  "1000306" -> "1000264" 
  "1000312" -> "1000323" 
  "1000314" -> "1000312" 
  "1000315" -> "1000316" 
  "1000316" -> "1000314" 
  "1000319" -> "1000329" 
  "1000321" -> "1000319" 
  "1000323" -> "1000321" 
  "1000327" -> "1000336" 
  "1000327" -> "1000349" 
  "1000328" -> "1000327" 
  "1000329" -> "1000328" 
  "1000333" -> "1000346" 
  "1000334" -> "1000333" 
  "1000335" -> "1000334" 
  "1000336" -> "1000339" 
  "1000337" -> "1000335" 
  "1000339" -> "1000337" 
  "1000343" -> "1000349" 
  "1000346" -> "1000343" 
  "1000349" -> "1000351" 
  "1000111" -> "1000125" 
}
