digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v2 = a1 + 240)" ]
"1000119" [label = "(<operator>.addition,a1 + 240)" ]
"1000122" [label = "(<operator>.assignment,v3 = 0)" ]
"1000126" [label = "(<operator>.assignment,i = 388)" ]
"1000129" [label = "(<operator>.assignment,i = 64)" ]
"1000139" [label = "(<operator>.assignment,v5 = *v2)" ]
"1000141" [label = "(<operator>.indirection,*v2)" ]
"1000144" [label = "(<operator>.logicalNot,!*v2)" ]
"1000145" [label = "(<operator>.indirection,*v2)" ]
"1000148" [label = "(<operator>.preDecrement,--i)" ]
"1000150" [label = "(<operator>.preIncrement,++v2)" ]
"1000154" [label = "(<operator>.equals,v5 == 0xFF)" ]
"1000159" [label = "(<operator>.logicalOr,i == 1 || (v6 = v2[1] + 2, i -= v6, i < 0))" ]
"1000160" [label = "(<operator>.equals,i == 1)" ]
"1000164" [label = "(<operator>.assignment,v6 = v2[1] + 2)" ]
"1000166" [label = "(<operator>.addition,v2[1] + 2)" ]
"1000167" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000172" [label = "(<operator>.assignmentMinus,i -= v6)" ]
"1000175" [label = "(<operator>.lessThan,i < 0)" ]
"1000180" [label = "(bb_error_msg,bb_error_msg(&GLOBAL_OFFSET_TABLE_ - 117045))" ]
"1000181" [label = "(<operator>.subtraction,&GLOBAL_OFFSET_TABLE_ - 117045)" ]
"1000182" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000185" [label = "(RETURN,return 0;,return 0;)" ]
"1000188" [label = "(<operator>.equals,v5 == a2)" ]
"1000193" [label = "(<operator>.greaterThan,(unsigned int)*(&GLOBAL_OFFSET_TABLE_ + 857) > 1)" ]
"1000194" [label = "(<operator>.cast,(unsigned int)*(&GLOBAL_OFFSET_TABLE_ + 857))" ]
"1000195" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000196" [label = "(<operator>.indirection,*(&GLOBAL_OFFSET_TABLE_ + 857))" ]
"1000197" [label = "(<operator>.addition,&GLOBAL_OFFSET_TABLE_ + 857)" ]
"1000198" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000202" [label = "(log_option_part_0,log_option_part_0())" ]
"1000203" [label = "(RETURN,return v2 + 2;,return v2 + 2;)" ]
"1000204" [label = "(<operator>.addition,v2 + 2)" ]
"1000208" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000213" [label = "(<operator>.equals,v5 == 52)" ]
"1000216" [label = "(<operators>.assignmentOr,v3 |= v2[2])" ]
"1000218" [label = "(<operator>.indirectIndexAccess,v2[2])" ]
"1000221" [label = "(<operator>.assignmentPlus,v2 += v6)" ]
"1000226" [label = "(<operator>.logicalNot,!i)" ]
"1000230" [label = "(<operator>.notEquals,(v3 & 0x101) != 1)" ]
"1000231" [label = "(<operator>.and,v3 & 0x101)" ]
"1000236" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000239" [label = "(<operator>.assignment,v2 = a1 + 108)" ]
"1000241" [label = "(<operator>.addition,a1 + 108)" ]
"1000244" [label = "(<operator>.assignment,i = 128)" ]
"1000248" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000249" [label = "(<operator>.and,v3 & 0x202)" ]
"1000254" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000257" [label = "(<operator>.assignment,v2 = a1 + 44)" ]
"1000259" [label = "(<operator>.addition,a1 + 44)" ]
"1000262" [label = "(<operator>.assignment,result = 0)" ]
"1000266" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000267" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000268" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000272" [label = "(bb_error_msg,bb_error_msg((char *)&GLOBAL_OFFSET_TABLE_ - 377077))" ]
"1000273" [label = "(<operator>.subtraction,(char *)&GLOBAL_OFFSET_TABLE_ - 377077)" ]
"1000274" [label = "(<operator>.cast,(char *)&GLOBAL_OFFSET_TABLE_)" ]
"1000275" [label = "(UNKNOWN,char *,char *)" ]
"1000276" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000279" [label = "(<operator>.assignment,result = 0)" ]
"1000282" [label = "(RETURN,return result;,return result;)" ]
"1000107" [label = "(METHOD,udhcp_get_option)" ]
"1000284" [label = "(METHOD_RETURN,__usercall)" ]
  "1000117" -> "1000122" 
  "1000119" -> "1000117" 
  "1000122" -> "1000126" 
  "1000126" -> "1000141" 
  "1000126" -> "1000231" 
  "1000126" -> "1000249" 
  "1000129" -> "1000141" 
  "1000129" -> "1000231" 
  "1000129" -> "1000249" 
  "1000139" -> "1000145" 
  "1000141" -> "1000139" 
  "1000144" -> "1000148" 
  "1000144" -> "1000154" 
  "1000145" -> "1000144" 
  "1000148" -> "1000150" 
  "1000150" -> "1000226" 
  "1000154" -> "1000231" 
  "1000154" -> "1000249" 
  "1000154" -> "1000262" 
  "1000154" -> "1000160" 
  "1000159" -> "1000182" 
  "1000159" -> "1000188" 
  "1000160" -> "1000159" 
  "1000160" -> "1000167" 
  "1000164" -> "1000172" 
  "1000166" -> "1000164" 
  "1000167" -> "1000166" 
  "1000172" -> "1000175" 
  "1000175" -> "1000159" 
  "1000180" -> "1000185" 
  "1000181" -> "1000180" 
  "1000182" -> "1000181" 
  "1000185" -> "1000284" 
  "1000188" -> "1000195" 
  "1000188" -> "1000208" 
  "1000193" -> "1000202" 
  "1000193" -> "1000204" 
  "1000194" -> "1000193" 
  "1000195" -> "1000198" 
  "1000196" -> "1000194" 
  "1000197" -> "1000196" 
  "1000198" -> "1000197" 
  "1000202" -> "1000204" 
  "1000203" -> "1000284" 
  "1000204" -> "1000203" 
  "1000208" -> "1000213" 
  "1000208" -> "1000221" 
  "1000213" -> "1000218" 
  "1000213" -> "1000221" 
  "1000216" -> "1000221" 
  "1000218" -> "1000216" 
  "1000221" -> "1000226" 
  "1000226" -> "1000141" 
  "1000226" -> "1000231" 
  "1000226" -> "1000182" 
  "1000230" -> "1000249" 
  "1000230" -> "1000262" 
  "1000230" -> "1000236" 
  "1000231" -> "1000230" 
  "1000236" -> "1000241" 
  "1000239" -> "1000244" 
  "1000241" -> "1000239" 
  "1000244" -> "1000141" 
  "1000244" -> "1000231" 
  "1000244" -> "1000249" 
  "1000248" -> "1000262" 
  "1000248" -> "1000254" 
  "1000249" -> "1000248" 
  "1000254" -> "1000259" 
  "1000257" -> "1000129" 
  "1000259" -> "1000257" 
  "1000262" -> "1000268" 
  "1000266" -> "1000275" 
  "1000266" -> "1000282" 
  "1000267" -> "1000266" 
  "1000268" -> "1000267" 
  "1000272" -> "1000279" 
  "1000273" -> "1000272" 
  "1000274" -> "1000273" 
  "1000275" -> "1000276" 
  "1000276" -> "1000274" 
  "1000279" -> "1000282" 
  "1000282" -> "1000284" 
  "1000107" -> "1000119" 
}
