digraph udhcp_get_option {  
"1000121" [label = "(<operator>.assignment,v2 = 0)" ]
"1000124" [label = "(<operator>.assignment,v3 = 388)" ]
"1000127" [label = "(<operator>.assignment,v4 = a1 + 240)" ]
"1000129" [label = "(<operator>.addition,a1 + 240)" ]
"1000141" [label = "(<operator>.assignment,v5 = *v4)" ]
"1000143" [label = "(<operator>.indirection,*v4)" ]
"1000146" [label = "(<operator>.logicalNot,!*v4)" ]
"1000147" [label = "(<operator>.indirection,*v4)" ]
"1000150" [label = "(<operator>.preDecrement,--v3)" ]
"1000152" [label = "(<operator>.preIncrement,++v4)" ]
"1000156" [label = "(<operator>.equals,v5 == 255)" ]
"1000161" [label = "(<operator>.logicalOr,v3 == 1 || (v9 = v4[1] + 2, v3 -= v9, v3 < 0))" ]
"1000162" [label = "(<operator>.equals,v3 == 1)" ]
"1000166" [label = "(<operator>.assignment,v9 = v4[1] + 2)" ]
"1000168" [label = "(<operator>.addition,v4[1] + 2)" ]
"1000169" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000174" [label = "(<operator>.assignmentMinus,v3 -= v9)" ]
"1000177" [label = "(<operator>.lessThan,v3 < 0)" ]
"1000182" [label = "(<operator>.assignment,v6 = 0)" ]
"1000185" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000187" [label = "(RETURN,return v6;,return v6;)" ]
"1000190" [label = "(<operator>.equals,v5 == a2)" ]
"1000194" [label = "(<operator>.assignment,v10 = v4)" ]
"1000197" [label = "(<operator>.assignment,v6 = v4 + 2)" ]
"1000199" [label = "(<operator>.addition,v4 + 2)" ]
"1000202" [label = "(log_option,log_option(\"option found\", v10))" ]
"1000205" [label = "(RETURN,return v6;,return v6;)" ]
"1000208" [label = "(<operator>.logicalAnd,v5 == 52 && v4[1])" ]
"1000209" [label = "(<operator>.equals,v5 == 52)" ]
"1000212" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000215" [label = "(<operators>.assignmentOr,v2 |= v4[2])" ]
"1000217" [label = "(<operator>.indirectIndexAccess,v4[2])" ]
"1000220" [label = "(<operator>.assignmentPlus,v4 += v9)" ]
"1000225" [label = "(<operator>.logicalNot,!v3)" ]
"1000228" [label = "(<operator>.assignment,v4 = a1 + 108)" ]
"1000230" [label = "(<operator>.addition,a1 + 108)" ]
"1000234" [label = "(<operator>.notEquals,(v2 & 0x101) != 1)" ]
"1000235" [label = "(<operator>.and,v2 & 0x101)" ]
"1000240" [label = "(<operators>.assignmentOr,v2 |= 0x101u)" ]
"1000243" [label = "(<operator>.assignment,v3 = 128)" ]
"1000246" [label = "(<operator>.assignment,v8 = (v2 & 0x202) != 2)" ]
"1000248" [label = "(<operator>.notEquals,(v2 & 0x202) != 2)" ]
"1000249" [label = "(<operator>.and,v2 & 0x202)" ]
"1000253" [label = "(<operators>.assignmentOr,v2 |= 0x202u)" ]
"1000259" [label = "(<operator>.assignment,v4 = a1 + 44)" ]
"1000261" [label = "(<operator>.addition,a1 + 44)" ]
"1000264" [label = "(<operator>.assignment,v3 = 64)" ]
"1000267" [label = "(<operator>.assignment,v6 = 0)" ]
"1000271" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 3)" ]
"1000272" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000273" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000276" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000279" [label = "(RETURN,return v6;,return v6;)" ]
"1000109" [label = "(METHOD,udhcp_get_option)" ]
"1000281" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000121" -> "1000124" 
  "1000124" -> "1000129" 
  "1000127" -> "1000143" 
  "1000127" -> "1000230" 
  "1000127" -> "1000249" 
  "1000127" -> "1000267" 
  "1000129" -> "1000127" 
  "1000141" -> "1000147" 
  "1000143" -> "1000141" 
  "1000146" -> "1000150" 
  "1000146" -> "1000156" 
  "1000147" -> "1000146" 
  "1000150" -> "1000152" 
  "1000152" -> "1000225" 
  "1000156" -> "1000230" 
  "1000156" -> "1000249" 
  "1000156" -> "1000267" 
  "1000156" -> "1000162" 
  "1000161" -> "1000182" 
  "1000161" -> "1000190" 
  "1000162" -> "1000161" 
  "1000162" -> "1000169" 
  "1000166" -> "1000174" 
  "1000168" -> "1000166" 
  "1000169" -> "1000168" 
  "1000174" -> "1000177" 
  "1000177" -> "1000161" 
  "1000182" -> "1000185" 
  "1000185" -> "1000187" 
  "1000187" -> "1000281" 
  "1000190" -> "1000194" 
  "1000190" -> "1000209" 
  "1000194" -> "1000199" 
  "1000197" -> "1000202" 
  "1000199" -> "1000197" 
  "1000202" -> "1000205" 
  "1000205" -> "1000281" 
  "1000208" -> "1000217" 
  "1000208" -> "1000220" 
  "1000209" -> "1000208" 
  "1000209" -> "1000212" 
  "1000212" -> "1000208" 
  "1000215" -> "1000220" 
  "1000217" -> "1000215" 
  "1000220" -> "1000225" 
  "1000225" -> "1000143" 
  "1000225" -> "1000230" 
  "1000225" -> "1000182" 
  "1000228" -> "1000235" 
  "1000230" -> "1000228" 
  "1000234" -> "1000249" 
  "1000234" -> "1000267" 
  "1000234" -> "1000240" 
  "1000235" -> "1000234" 
  "1000240" -> "1000243" 
  "1000243" -> "1000143" 
  "1000243" -> "1000230" 
  "1000243" -> "1000249" 
  "1000246" -> "1000253" 
  "1000248" -> "1000246" 
  "1000249" -> "1000248" 
  "1000253" -> "1000267" 
  "1000253" -> "1000261" 
  "1000259" -> "1000264" 
  "1000261" -> "1000259" 
  "1000264" -> "1000143" 
  "1000264" -> "1000230" 
  "1000264" -> "1000249" 
  "1000264" -> "1000267" 
  "1000267" -> "1000273" 
  "1000271" -> "1000276" 
  "1000271" -> "1000279" 
  "1000272" -> "1000271" 
  "1000273" -> "1000272" 
  "1000276" -> "1000279" 
  "1000279" -> "1000281" 
  "1000109" -> "1000121" 
}
