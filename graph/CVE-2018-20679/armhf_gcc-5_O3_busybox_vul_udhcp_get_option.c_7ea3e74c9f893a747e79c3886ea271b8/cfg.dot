digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v2 = a1 + 240)" ]
"1000119" [label = "(<operator>.addition,a1 + 240)" ]
"1000122" [label = "(<operator>.assignment,v3 = 0)" ]
"1000126" [label = "(<operator>.assignment,i = 388)" ]
"1000129" [label = "(<operator>.assignment,i = 64)" ]
"1000142" [label = "(<operator>.assignment,v5 = *v2)" ]
"1000144" [label = "(<operator>.indirection,*v2)" ]
"1000147" [label = "(<operator>.indirection,*v2)" ]
"1000150" [label = "(<operator>.preDecrement,--i)" ]
"1000152" [label = "(<operator>.preIncrement,++v2)" ]
"1000155" [label = "(<operator>.logicalNot,!i)" ]
"1000159" [label = "(<operator>.equals,v5 == 255)" ]
"1000164" [label = "(<operator>.equals,i == 1)" ]
"1000168" [label = "(<operator>.assignment,v7 = v2[1] + 2)" ]
"1000170" [label = "(<operator>.addition,v2[1] + 2)" ]
"1000171" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000175" [label = "(<operator>.assignmentMinus,i -= v7)" ]
"1000179" [label = "(<operator>.lessThan,i < 0)" ]
"1000184" [label = "(<operator>.equals,a2 == v5)" ]
"1000189" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 1)" ]
"1000190" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000191" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000194" [label = "(log_option_part_0,log_option_part_0(\"option found\", v2))" ]
"1000197" [label = "(RETURN,return v2 + 2;,return v2 + 2;)" ]
"1000198" [label = "(<operator>.addition,v2 + 2)" ]
"1000201" [label = "(<operator>.assignment,v8 = v7 != 2)" ]
"1000203" [label = "(<operator>.notEquals,v7 != 2)" ]
"1000207" [label = "(<operator>.notEquals,v5 != 52)" ]
"1000210" [label = "(<operator>.assignment,v8 = 0)" ]
"1000215" [label = "(<operators>.assignmentOr,v3 |= v2[2])" ]
"1000217" [label = "(<operator>.indirectIndexAccess,v2[2])" ]
"1000220" [label = "(<operator>.assignmentPlus,v2 += v7)" ]
"1000224" [label = "(<operator>.logicalNot,!i)" ]
"1000228" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000230" [label = "(RETURN,return 0;,return 0;)" ]
"1000233" [label = "(<operator>.notEquals,(v3 & 0x101) != 1)" ]
"1000234" [label = "(<operator>.and,v3 & 0x101)" ]
"1000239" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000242" [label = "(<operator>.assignment,v2 = a1 + 108)" ]
"1000244" [label = "(<operator>.addition,a1 + 108)" ]
"1000247" [label = "(<operator>.assignment,i = 128)" ]
"1000251" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000252" [label = "(<operator>.and,v3 & 0x202)" ]
"1000257" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000260" [label = "(<operator>.assignment,v2 = a1 + 44)" ]
"1000262" [label = "(<operator>.addition,a1 + 44)" ]
"1000266" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000267" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000268" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000271" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000274" [label = "(RETURN,return 0;,return 0;)" ]
"1000107" [label = "(METHOD,udhcp_get_option)" ]
"1000276" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000117" -> "1000122" 
  "1000119" -> "1000117" 
  "1000122" -> "1000126" 
  "1000126" -> "1000144" 
  "1000126" -> "1000159" 
  "1000126" -> "1000234" 
  "1000126" -> "1000252" 
  "1000129" -> "1000144" 
  "1000129" -> "1000159" 
  "1000129" -> "1000234" 
  "1000129" -> "1000252" 
  "1000142" -> "1000147" 
  "1000144" -> "1000142" 
  "1000147" -> "1000268" 
  "1000147" -> "1000159" 
  "1000147" -> "1000234" 
  "1000147" -> "1000252" 
  "1000147" -> "1000150" 
  "1000150" -> "1000152" 
  "1000152" -> "1000155" 
  "1000155" -> "1000144" 
  "1000155" -> "1000159" 
  "1000155" -> "1000228" 
  "1000159" -> "1000268" 
  "1000159" -> "1000234" 
  "1000159" -> "1000252" 
  "1000159" -> "1000164" 
  "1000164" -> "1000228" 
  "1000164" -> "1000171" 
  "1000168" -> "1000175" 
  "1000170" -> "1000168" 
  "1000171" -> "1000170" 
  "1000175" -> "1000179" 
  "1000179" -> "1000228" 
  "1000179" -> "1000184" 
  "1000184" -> "1000191" 
  "1000184" -> "1000203" 
  "1000189" -> "1000194" 
  "1000189" -> "1000198" 
  "1000190" -> "1000189" 
  "1000191" -> "1000190" 
  "1000194" -> "1000198" 
  "1000197" -> "1000276" 
  "1000198" -> "1000197" 
  "1000201" -> "1000207" 
  "1000203" -> "1000201" 
  "1000207" -> "1000210" 
  "1000207" -> "1000217" 
  "1000207" -> "1000220" 
  "1000210" -> "1000217" 
  "1000210" -> "1000220" 
  "1000215" -> "1000220" 
  "1000217" -> "1000215" 
  "1000220" -> "1000224" 
  "1000224" -> "1000144" 
  "1000224" -> "1000159" 
  "1000224" -> "1000234" 
  "1000224" -> "1000228" 
  "1000228" -> "1000230" 
  "1000230" -> "1000276" 
  "1000233" -> "1000268" 
  "1000233" -> "1000252" 
  "1000233" -> "1000239" 
  "1000234" -> "1000233" 
  "1000239" -> "1000244" 
  "1000242" -> "1000247" 
  "1000244" -> "1000242" 
  "1000247" -> "1000144" 
  "1000247" -> "1000159" 
  "1000247" -> "1000234" 
  "1000247" -> "1000252" 
  "1000251" -> "1000268" 
  "1000251" -> "1000257" 
  "1000252" -> "1000251" 
  "1000257" -> "1000262" 
  "1000260" -> "1000129" 
  "1000262" -> "1000260" 
  "1000266" -> "1000271" 
  "1000266" -> "1000274" 
  "1000267" -> "1000266" 
  "1000268" -> "1000267" 
  "1000271" -> "1000274" 
  "1000274" -> "1000276" 
  "1000107" -> "1000119" 
}
