digraph udhcp_get_option {  
"1000115" [label = "(<operator>.assignment,v2 = 0)" ]
"1000118" [label = "(<operator>.assignment,v3 = 388)" ]
"1000121" [label = "(<operator>.assignment,v4 = a1 + 240)" ]
"1000123" [label = "(<operator>.addition,a1 + 240)" ]
"1000132" [label = "(<operator>.assignment,v5 = *v4)" ]
"1000134" [label = "(<operator>.indirection,*v4)" ]
"1000137" [label = "(<operator>.indirection,*v4)" ]
"1000140" [label = "(<operator>.preDecrement,--v3)" ]
"1000142" [label = "(<operator>.preIncrement,++v4)" ]
"1000146" [label = "(<operator>.logicalNot,!v3)" ]
"1000150" [label = "(<operator>.notEquals,v5 != 255)" ]
"1000155" [label = "(<operator>.equals,(v2 & 0x101) == 1)" ]
"1000156" [label = "(<operator>.and,v2 & 0x101)" ]
"1000161" [label = "(<operators>.assignmentOr,v2 |= 0x101u)" ]
"1000164" [label = "(<operator>.assignment,v4 = a1 + 108)" ]
"1000166" [label = "(<operator>.addition,a1 + 108)" ]
"1000169" [label = "(<operator>.assignment,v3 = 128)" ]
"1000175" [label = "(<operator>.notEquals,(v2 & 0x202) != 2)" ]
"1000176" [label = "(<operator>.and,v2 & 0x202)" ]
"1000182" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000183" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000184" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000187" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000191" [label = "(<operators>.assignmentOr,v2 |= 0x202u)" ]
"1000194" [label = "(<operator>.assignment,v4 = a1 + 44)" ]
"1000196" [label = "(<operator>.addition,a1 + 44)" ]
"1000199" [label = "(<operator>.assignment,v3 = 64)" ]
"1000203" [label = "(<operator>.logicalOr,v3 == 1 || (v7 = v4[1] + 2, v3 -= v7, v3 < 0))" ]
"1000204" [label = "(<operator>.equals,v3 == 1)" ]
"1000208" [label = "(<operator>.assignment,v7 = v4[1] + 2)" ]
"1000210" [label = "(<operator>.addition,v4[1] + 2)" ]
"1000211" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000216" [label = "(<operator>.assignmentMinus,v3 -= v7)" ]
"1000219" [label = "(<operator>.lessThan,v3 < 0)" ]
"1000224" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\", a2))" ]
"1000229" [label = "(<operator>.notEquals,v5 != (_DWORD)a2)" ]
"1000231" [label = "(<operator>.cast,(_DWORD)a2)" ]
"1000232" [label = "(UNKNOWN,_DWORD,_DWORD)" ]
"1000236" [label = "(<operator>.logicalAnd,v5 == 52 && v4[1])" ]
"1000237" [label = "(<operator>.equals,v5 == 52)" ]
"1000240" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000243" [label = "(<operators>.assignmentOr,v2 |= v4[2])" ]
"1000245" [label = "(<operator>.indirectIndexAccess,v4[2])" ]
"1000248" [label = "(<operator>.assignmentPlus,v4 += v7)" ]
"1000253" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 1)" ]
"1000254" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000255" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000258" [label = "(log_option_part_0,log_option_part_0(\"option found\", v4))" ]
"1000261" [label = "(RETURN,return v4 + 2;,return v4 + 2;)" ]
"1000262" [label = "(<operator>.addition,v4 + 2)" ]
"1000106" [label = "(METHOD,udhcp_get_option)" ]
"1000265" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000115" -> "1000118" 
  "1000118" -> "1000123" 
  "1000121" -> "1000134" 
  "1000121" -> "1000150" 
  "1000121" -> "1000204" 
  "1000123" -> "1000121" 
  "1000132" -> "1000137" 
  "1000134" -> "1000132" 
  "1000137" -> "1000150" 
  "1000137" -> "1000204" 
  "1000137" -> "1000140" 
  "1000140" -> "1000142" 
  "1000142" -> "1000146" 
  "1000146" -> "1000134" 
  "1000146" -> "1000150" 
  "1000146" -> "1000224" 
  "1000150" -> "1000204" 
  "1000150" -> "1000156" 
  "1000155" -> "1000161" 
  "1000155" -> "1000176" 
  "1000156" -> "1000155" 
  "1000161" -> "1000166" 
  "1000164" -> "1000169" 
  "1000166" -> "1000164" 
  "1000169" -> "1000134" 
  "1000169" -> "1000150" 
  "1000169" -> "1000204" 
  "1000175" -> "1000184" 
  "1000175" -> "1000191" 
  "1000176" -> "1000175" 
  "1000182" -> "1000187" 
  "1000182" -> "1000191" 
  "1000183" -> "1000182" 
  "1000184" -> "1000183" 
  "1000187" -> "1000191" 
  "1000191" -> "1000196" 
  "1000194" -> "1000199" 
  "1000196" -> "1000194" 
  "1000199" -> "1000134" 
  "1000199" -> "1000150" 
  "1000199" -> "1000204" 
  "1000203" -> "1000224" 
  "1000203" -> "1000232" 
  "1000204" -> "1000203" 
  "1000204" -> "1000211" 
  "1000208" -> "1000216" 
  "1000210" -> "1000208" 
  "1000211" -> "1000210" 
  "1000216" -> "1000219" 
  "1000219" -> "1000203" 
  "1000224" -> "1000232" 
  "1000229" -> "1000255" 
  "1000229" -> "1000237" 
  "1000231" -> "1000229" 
  "1000232" -> "1000231" 
  "1000236" -> "1000245" 
  "1000236" -> "1000248" 
  "1000237" -> "1000236" 
  "1000237" -> "1000240" 
  "1000240" -> "1000236" 
  "1000243" -> "1000248" 
  "1000245" -> "1000243" 
  "1000248" -> "1000146" 
  "1000253" -> "1000258" 
  "1000253" -> "1000262" 
  "1000254" -> "1000253" 
  "1000255" -> "1000254" 
  "1000258" -> "1000262" 
  "1000261" -> "1000265" 
  "1000262" -> "1000261" 
  "1000106" -> "1000115" 
}
