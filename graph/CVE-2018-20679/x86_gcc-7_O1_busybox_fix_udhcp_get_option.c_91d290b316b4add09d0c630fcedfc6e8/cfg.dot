digraph udhcp_get_option {  
"1000119" [label = "(<operator>.assignment,v2 = a1 + 240)" ]
"1000121" [label = "(<operator>.addition,a1 + 240)" ]
"1000124" [label = "(<operator>.assignment,v3 = 0)" ]
"1000127" [label = "(<operator>.assignment,v4 = 388)" ]
"1000136" [label = "(<operator>.assignment,v6 = *v2)" ]
"1000138" [label = "(<operator>.indirection,*v2)" ]
"1000141" [label = "(<operator>.indirection,*v2)" ]
"1000144" [label = "(<operator>.preDecrement,--v4)" ]
"1000146" [label = "(<operator>.preIncrement,++v2)" ]
"1000150" [label = "(<operator>.lessEqualsThan,v4 <= 0)" ]
"1000155" [label = "(<operator>.notEquals,v6 != 0xFF)" ]
"1000160" [label = "(<operator>.equals,(v3 & 0x101) == 1)" ]
"1000161" [label = "(<operator>.and,v3 & 0x101)" ]
"1000166" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000169" [label = "(<operator>.assignment,v2 = a1 + 108)" ]
"1000171" [label = "(<operator>.addition,a1 + 108)" ]
"1000174" [label = "(<operator>.assignment,v4 = 128)" ]
"1000180" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000181" [label = "(<operator>.and,v3 & 0x202)" ]
"1000186" [label = "(<operator>.assignment,result = 0)" ]
"1000190" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000191" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000192" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000196" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\"))" ]
"1000198" [label = "(<operator>.assignment,result = 0)" ]
"1000201" [label = "(RETURN,return result;,return result;)" ]
"1000203" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000206" [label = "(<operator>.assignment,v2 = a1 + 44)" ]
"1000208" [label = "(<operator>.addition,a1 + 44)" ]
"1000211" [label = "(<operator>.assignment,v4 = 64)" ]
"1000215" [label = "(<operator>.lessEqualsThan,v4 <= 1)" ]
"1000219" [label = "(<operator>.assignment,v9 = v2[1])" ]
"1000221" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000224" [label = "(<operator>.assignment,v7 = v9 + 2)" ]
"1000226" [label = "(<operator>.addition,v9 + 2)" ]
"1000229" [label = "(<operator>.assignmentMinus,v4 -= v7)" ]
"1000233" [label = "(<operator>.lessThan,v4 < 0)" ]
"1000238" [label = "(<operator>.notEquals,v6 != a2)" ]
"1000243" [label = "(<operator>.logicalAnd,v7 > 2 && v6 == 52)" ]
"1000244" [label = "(<operator>.greaterThan,v7 > 2)" ]
"1000247" [label = "(<operator>.equals,v6 == 52)" ]
"1000250" [label = "(<operators>.assignmentOr,v3 |= v2[2])" ]
"1000252" [label = "(<operator>.indirectIndexAccess,v2[2])" ]
"1000255" [label = "(<operator>.assignmentPlus,v2 += v7)" ]
"1000260" [label = "(<operator>.logicalNot,!v9)" ]
"1000264" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000266" [label = "(RETURN,return 0;,return 0;)" ]
"1000268" [label = "(log_option,log_option())" ]
"1000269" [label = "(RETURN,return v2 + 2;,return v2 + 2;)" ]
"1000270" [label = "(<operator>.addition,v2 + 2)" ]
"1000108" [label = "(METHOD,udhcp_get_option)" ]
"1000273" [label = "(METHOD_RETURN,__usercall)" ]
  "1000119" -> "1000124" 
  "1000121" -> "1000119" 
  "1000124" -> "1000127" 
  "1000127" -> "1000138" 
  "1000127" -> "1000155" 
  "1000127" -> "1000215" 
  "1000136" -> "1000141" 
  "1000138" -> "1000136" 
  "1000141" -> "1000155" 
  "1000141" -> "1000215" 
  "1000141" -> "1000144" 
  "1000144" -> "1000146" 
  "1000146" -> "1000150" 
  "1000150" -> "1000138" 
  "1000150" -> "1000155" 
  "1000150" -> "1000264" 
  "1000155" -> "1000215" 
  "1000155" -> "1000161" 
  "1000160" -> "1000166" 
  "1000160" -> "1000181" 
  "1000161" -> "1000160" 
  "1000166" -> "1000171" 
  "1000169" -> "1000174" 
  "1000171" -> "1000169" 
  "1000174" -> "1000138" 
  "1000174" -> "1000155" 
  "1000174" -> "1000215" 
  "1000180" -> "1000186" 
  "1000180" -> "1000203" 
  "1000181" -> "1000180" 
  "1000186" -> "1000192" 
  "1000190" -> "1000196" 
  "1000190" -> "1000201" 
  "1000191" -> "1000190" 
  "1000192" -> "1000191" 
  "1000196" -> "1000198" 
  "1000198" -> "1000201" 
  "1000201" -> "1000273" 
  "1000203" -> "1000208" 
  "1000206" -> "1000211" 
  "1000208" -> "1000206" 
  "1000211" -> "1000138" 
  "1000211" -> "1000155" 
  "1000211" -> "1000215" 
  "1000215" -> "1000264" 
  "1000215" -> "1000221" 
  "1000219" -> "1000226" 
  "1000221" -> "1000219" 
  "1000224" -> "1000229" 
  "1000226" -> "1000224" 
  "1000229" -> "1000233" 
  "1000233" -> "1000264" 
  "1000233" -> "1000238" 
  "1000238" -> "1000244" 
  "1000238" -> "1000260" 
  "1000243" -> "1000252" 
  "1000243" -> "1000255" 
  "1000244" -> "1000243" 
  "1000244" -> "1000247" 
  "1000247" -> "1000243" 
  "1000250" -> "1000255" 
  "1000252" -> "1000250" 
  "1000255" -> "1000150" 
  "1000260" -> "1000268" 
  "1000260" -> "1000264" 
  "1000264" -> "1000266" 
  "1000266" -> "1000273" 
  "1000268" -> "1000270" 
  "1000269" -> "1000273" 
  "1000270" -> "1000269" 
  "1000108" -> "1000121" 
}
