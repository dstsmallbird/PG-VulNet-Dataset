digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v2 = a1 + 240)" ]
"1000119" [label = "(<operator>.addition,a1 + 240)" ]
"1000122" [label = "(<operator>.assignment,v3 = 0)" ]
"1000126" [label = "(<operator>.assignment,i = 388)" ]
"1000129" [label = "(<operator>.assignment,i = 64)" ]
"1000139" [label = "(<operator>.assignment,v5 = *v2)" ]
"1000141" [label = "(<operator>.indirection,*v2)" ]
"1000144" [label = "(<operator>.logicalNot,!*v2)" ]
"1000145" [label = "(<operator>.indirection,*v2)" ]
"1000148" [label = "(<operator>.preDecrement,--i)" ]
"1000150" [label = "(<operator>.preIncrement,++v2)" ]
"1000154" [label = "(<operator>.equals,v5 == 0xFF)" ]
"1000159" [label = "(<operator>.logicalOr,i == 1 || (v6 = v2[1] + 2, i -= v6, i < 0))" ]
"1000160" [label = "(<operator>.equals,i == 1)" ]
"1000164" [label = "(<operator>.assignment,v6 = v2[1] + 2)" ]
"1000166" [label = "(<operator>.addition,v2[1] + 2)" ]
"1000167" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000172" [label = "(<operator>.assignmentMinus,i -= v6)" ]
"1000175" [label = "(<operator>.lessThan,i < 0)" ]
"1000180" [label = "(bb_error_msg,bb_error_msg(&(&GLOBAL_OFFSET_TABLE_)[-14191] + 1))" ]
"1000181" [label = "(<operator>.addition,&(&GLOBAL_OFFSET_TABLE_)[-14191] + 1)" ]
"1000182" [label = "(<operator>.addressOf,&(&GLOBAL_OFFSET_TABLE_)[-14191])" ]
"1000183" [label = "(<operator>.indirectIndexAccess,(&GLOBAL_OFFSET_TABLE_)[-14191])" ]
"1000184" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000186" [label = "(<operator>.minus,-14191)" ]
"1000189" [label = "(RETURN,return 0;,return 0;)" ]
"1000192" [label = "(<operator>.equals,v5 == a2)" ]
"1000197" [label = "(<operator>.greaterThan,(unsigned int)*(&GLOBAL_OFFSET_TABLE_ + 857) > 1)" ]
"1000198" [label = "(<operator>.cast,(unsigned int)*(&GLOBAL_OFFSET_TABLE_ + 857))" ]
"1000199" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000200" [label = "(<operator>.indirection,*(&GLOBAL_OFFSET_TABLE_ + 857))" ]
"1000201" [label = "(<operator>.addition,&GLOBAL_OFFSET_TABLE_ + 857)" ]
"1000202" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000206" [label = "(log_option_part_0,log_option_part_0())" ]
"1000207" [label = "(RETURN,return v2 + 2;,return v2 + 2;)" ]
"1000208" [label = "(<operator>.addition,v2 + 2)" ]
"1000212" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000217" [label = "(<operator>.equals,v5 == 52)" ]
"1000220" [label = "(<operators>.assignmentOr,v3 |= v2[2])" ]
"1000222" [label = "(<operator>.indirectIndexAccess,v2[2])" ]
"1000225" [label = "(<operator>.assignmentPlus,v2 += v6)" ]
"1000230" [label = "(<operator>.logicalNot,!i)" ]
"1000234" [label = "(<operator>.notEquals,(v3 & 0x101) != 1)" ]
"1000235" [label = "(<operator>.and,v3 & 0x101)" ]
"1000240" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000243" [label = "(<operator>.assignment,v2 = a1 + 108)" ]
"1000245" [label = "(<operator>.addition,a1 + 108)" ]
"1000248" [label = "(<operator>.assignment,i = 128)" ]
"1000252" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000253" [label = "(<operator>.and,v3 & 0x202)" ]
"1000258" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000261" [label = "(<operator>.assignment,v2 = a1 + 44)" ]
"1000263" [label = "(<operator>.addition,a1 + 44)" ]
"1000266" [label = "(<operator>.assignment,result = 0)" ]
"1000270" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000271" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000272" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000276" [label = "(bb_error_msg,bb_error_msg((char *)&GLOBAL_OFFSET_TABLE_ - 362795))" ]
"1000277" [label = "(<operator>.subtraction,(char *)&GLOBAL_OFFSET_TABLE_ - 362795)" ]
"1000278" [label = "(<operator>.cast,(char *)&GLOBAL_OFFSET_TABLE_)" ]
"1000279" [label = "(UNKNOWN,char *,char *)" ]
"1000280" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000283" [label = "(<operator>.assignment,result = 0)" ]
"1000286" [label = "(RETURN,return result;,return result;)" ]
"1000107" [label = "(METHOD,udhcp_get_option)" ]
"1000288" [label = "(METHOD_RETURN,__usercall)" ]
  "1000117" -> "1000122" 
  "1000119" -> "1000117" 
  "1000122" -> "1000126" 
  "1000126" -> "1000141" 
  "1000126" -> "1000235" 
  "1000126" -> "1000253" 
  "1000129" -> "1000141" 
  "1000129" -> "1000235" 
  "1000129" -> "1000253" 
  "1000139" -> "1000145" 
  "1000141" -> "1000139" 
  "1000144" -> "1000148" 
  "1000144" -> "1000154" 
  "1000145" -> "1000144" 
  "1000148" -> "1000150" 
  "1000150" -> "1000230" 
  "1000154" -> "1000235" 
  "1000154" -> "1000253" 
  "1000154" -> "1000266" 
  "1000154" -> "1000160" 
  "1000159" -> "1000184" 
  "1000159" -> "1000192" 
  "1000160" -> "1000159" 
  "1000160" -> "1000167" 
  "1000164" -> "1000172" 
  "1000166" -> "1000164" 
  "1000167" -> "1000166" 
  "1000172" -> "1000175" 
  "1000175" -> "1000159" 
  "1000180" -> "1000189" 
  "1000181" -> "1000180" 
  "1000182" -> "1000181" 
  "1000183" -> "1000182" 
  "1000184" -> "1000186" 
  "1000186" -> "1000183" 
  "1000189" -> "1000288" 
  "1000192" -> "1000199" 
  "1000192" -> "1000212" 
  "1000197" -> "1000206" 
  "1000197" -> "1000208" 
  "1000198" -> "1000197" 
  "1000199" -> "1000202" 
  "1000200" -> "1000198" 
  "1000201" -> "1000200" 
  "1000202" -> "1000201" 
  "1000206" -> "1000208" 
  "1000207" -> "1000288" 
  "1000208" -> "1000207" 
  "1000212" -> "1000217" 
  "1000212" -> "1000225" 
  "1000217" -> "1000222" 
  "1000217" -> "1000225" 
  "1000220" -> "1000225" 
  "1000222" -> "1000220" 
  "1000225" -> "1000230" 
  "1000230" -> "1000141" 
  "1000230" -> "1000235" 
  "1000230" -> "1000184" 
  "1000234" -> "1000253" 
  "1000234" -> "1000266" 
  "1000234" -> "1000240" 
  "1000235" -> "1000234" 
  "1000240" -> "1000245" 
  "1000243" -> "1000248" 
  "1000245" -> "1000243" 
  "1000248" -> "1000141" 
  "1000248" -> "1000235" 
  "1000248" -> "1000253" 
  "1000252" -> "1000266" 
  "1000252" -> "1000258" 
  "1000253" -> "1000252" 
  "1000258" -> "1000263" 
  "1000261" -> "1000129" 
  "1000263" -> "1000261" 
  "1000266" -> "1000272" 
  "1000270" -> "1000279" 
  "1000270" -> "1000286" 
  "1000271" -> "1000270" 
  "1000272" -> "1000271" 
  "1000276" -> "1000283" 
  "1000277" -> "1000276" 
  "1000278" -> "1000277" 
  "1000279" -> "1000280" 
  "1000280" -> "1000278" 
  "1000283" -> "1000286" 
  "1000286" -> "1000288" 
  "1000107" -> "1000119" 
}
