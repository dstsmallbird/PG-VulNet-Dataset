digraph udhcp_get_option {  
"1000113" [label = "(<operator>.assignment,v3 = 0)" ]
"1000116" [label = "(<operator>.assignment,v6 = a1 + 240)" ]
"1000118" [label = "(<operator>.addition,a1 + 240)" ]
"1000122" [label = "(<operator>.assignment,i = 388)" ]
"1000125" [label = "(<operator>.assignment,i = 64)" ]
"1000139" [label = "(<operator>.lessEqualsThan,i <= 0)" ]
"1000144" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\", a2))" ]
"1000149" [label = "(<operator>.indirection,*v6)" ]
"1000152" [label = "(<operator>.preDecrement,--i)" ]
"1000154" [label = "(<operator>.preIncrement,++v6)" ]
"1000157" [label = "(<operator>.equals,*v6 == 255)" ]
"1000158" [label = "(<operator>.indirection,*v6)" ]
"1000163" [label = "(<operator>.lessEqualsThan,i <= 1)" ]
"1000167" [label = "(<operator>.assignment,v5 = v6[1] + 2)" ]
"1000169" [label = "(<operator>.addition,v6[1] + 2)" ]
"1000170" [label = "(<operator>.indirectIndexAccess,v6[1])" ]
"1000174" [label = "(<operator>.assignmentMinus,i -= v5)" ]
"1000178" [label = "(<operator>.lessThan,i < 0)" ]
"1000183" [label = "(<operator>.equals,*v6 == (_DWORD)a2)" ]
"1000184" [label = "(<operator>.indirection,*v6)" ]
"1000186" [label = "(<operator>.cast,(_DWORD)a2)" ]
"1000187" [label = "(UNKNOWN,_DWORD,_DWORD)" ]
"1000190" [label = "(log_option,log_option(\"option found\", v6))" ]
"1000193" [label = "(RETURN,return v6 + 2;,return v6 + 2;)" ]
"1000194" [label = "(<operator>.addition,v6 + 2)" ]
"1000198" [label = "(<operator>.logicalAnd,*v6 == 52 && v5 >= 3)" ]
"1000199" [label = "(<operator>.equals,*v6 == 52)" ]
"1000200" [label = "(<operator>.indirection,*v6)" ]
"1000203" [label = "(<operator>.greaterEqualsThan,v5 >= 3)" ]
"1000206" [label = "(<operators>.assignmentOr,v3 |= v6[2])" ]
"1000208" [label = "(<operator>.indirectIndexAccess,v6[2])" ]
"1000211" [label = "(<operator>.assignmentPlus,v6 += v5)" ]
"1000215" [label = "(<operator>.notEquals,(v3 & 0x101) != 1)" ]
"1000216" [label = "(<operator>.and,v3 & 0x101)" ]
"1000221" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000224" [label = "(<operator>.assignment,v6 = a1 + 108)" ]
"1000226" [label = "(<operator>.addition,a1 + 108)" ]
"1000229" [label = "(<operator>.assignment,i = 128)" ]
"1000233" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000234" [label = "(<operator>.and,v3 & 0x202)" ]
"1000239" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000242" [label = "(<operator>.assignment,v6 = a1 + 44)" ]
"1000244" [label = "(<operator>.addition,a1 + 44)" ]
"1000248" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 3)" ]
"1000249" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000250" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000253" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", (unsigned int)a2))" ]
"1000255" [label = "(<operator>.cast,(unsigned int)a2)" ]
"1000256" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000105" [label = "(METHOD,udhcp_get_option)" ]
"1000259" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000113" -> "1000118" 
  "1000116" -> "1000122" 
  "1000118" -> "1000116" 
  "1000122" -> "1000139" 
  "1000122" -> "1000158" 
  "1000122" -> "1000216" 
  "1000122" -> "1000234" 
  "1000125" -> "1000139" 
  "1000125" -> "1000158" 
  "1000125" -> "1000216" 
  "1000125" -> "1000234" 
  "1000139" -> "1000144" 
  "1000139" -> "1000149" 
  "1000144" -> "1000149" 
  "1000149" -> "1000250" 
  "1000149" -> "1000158" 
  "1000149" -> "1000216" 
  "1000149" -> "1000234" 
  "1000149" -> "1000152" 
  "1000152" -> "1000154" 
  "1000154" -> "1000139" 
  "1000154" -> "1000158" 
  "1000157" -> "1000250" 
  "1000157" -> "1000216" 
  "1000157" -> "1000234" 
  "1000157" -> "1000163" 
  "1000158" -> "1000157" 
  "1000163" -> "1000144" 
  "1000163" -> "1000170" 
  "1000167" -> "1000174" 
  "1000169" -> "1000167" 
  "1000170" -> "1000169" 
  "1000174" -> "1000178" 
  "1000178" -> "1000144" 
  "1000178" -> "1000184" 
  "1000183" -> "1000190" 
  "1000183" -> "1000200" 
  "1000184" -> "1000187" 
  "1000186" -> "1000183" 
  "1000187" -> "1000186" 
  "1000190" -> "1000194" 
  "1000193" -> "1000259" 
  "1000194" -> "1000193" 
  "1000198" -> "1000208" 
  "1000198" -> "1000211" 
  "1000199" -> "1000198" 
  "1000199" -> "1000203" 
  "1000200" -> "1000199" 
  "1000203" -> "1000198" 
  "1000206" -> "1000211" 
  "1000208" -> "1000206" 
  "1000211" -> "1000139" 
  "1000211" -> "1000158" 
  "1000211" -> "1000216" 
  "1000215" -> "1000250" 
  "1000215" -> "1000234" 
  "1000215" -> "1000221" 
  "1000216" -> "1000215" 
  "1000221" -> "1000226" 
  "1000224" -> "1000229" 
  "1000226" -> "1000224" 
  "1000229" -> "1000139" 
  "1000229" -> "1000158" 
  "1000229" -> "1000216" 
  "1000229" -> "1000234" 
  "1000233" -> "1000250" 
  "1000233" -> "1000239" 
  "1000234" -> "1000233" 
  "1000239" -> "1000244" 
  "1000242" -> "1000125" 
  "1000244" -> "1000242" 
  "1000248" -> "1000256" 
  "1000248" -> "1000259" 
  "1000249" -> "1000248" 
  "1000250" -> "1000249" 
  "1000253" -> "1000259" 
  "1000255" -> "1000253" 
  "1000256" -> "1000255" 
  "1000105" -> "1000113" 
}
