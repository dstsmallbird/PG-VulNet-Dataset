digraph udhcp_get_option {  
"1000121" [label = "(<operator>.assignment,v2 = a1 + 240)" ]
"1000123" [label = "(<operator>.addition,a1 + 240)" ]
"1000126" [label = "(<operator>.assignment,v3 = 0)" ]
"1000130" [label = "(<operator>.assignment,i = 388)" ]
"1000133" [label = "(<operator>.assignment,i = 64)" ]
"1000143" [label = "(<operator>.assignment,v5 = *v2)" ]
"1000145" [label = "(<operator>.indirection,*v2)" ]
"1000148" [label = "(<operator>.logicalNot,!*v2)" ]
"1000149" [label = "(<operator>.indirection,*v2)" ]
"1000152" [label = "(<operator>.preDecrement,--i)" ]
"1000154" [label = "(<operator>.preIncrement,++v2)" ]
"1000158" [label = "(<operator>.equals,v5 == 255)" ]
"1000163" [label = "(<operator>.logicalOr,i == 1 || (v7 = v2[1] + 2, i -= v7, i < 0))" ]
"1000164" [label = "(<operator>.equals,i == 1)" ]
"1000168" [label = "(<operator>.assignment,v7 = v2[1] + 2)" ]
"1000170" [label = "(<operator>.addition,v2[1] + 2)" ]
"1000171" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000176" [label = "(<operator>.assignmentMinus,i -= v7)" ]
"1000179" [label = "(<operator>.lessThan,i < 0)" ]
"1000185" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\", a2))" ]
"1000188" [label = "(RETURN,return v6;,return v6;)" ]
"1000191" [label = "(<operator>.equals,(_DWORD)a2 == v5)" ]
"1000192" [label = "(<operator>.cast,(_DWORD)a2)" ]
"1000193" [label = "(UNKNOWN,_DWORD,_DWORD)" ]
"1000197" [label = "(<operator>.assignment,v8 = v2)" ]
"1000200" [label = "(<operator>.assignment,v6 = v2 + 2)" ]
"1000202" [label = "(<operator>.addition,v2 + 2)" ]
"1000205" [label = "(log_option,log_option(\"option found\", v8))" ]
"1000208" [label = "(RETURN,return v6;,return v6;)" ]
"1000211" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000214" [label = "(<operator>.assignment,v9 = v5 == 52)" ]
"1000216" [label = "(<operator>.equals,v5 == 52)" ]
"1000220" [label = "(<operator>.assignment,v9 = 0)" ]
"1000225" [label = "(<operators>.assignmentOr,v3 |= v2[2])" ]
"1000227" [label = "(<operator>.indirectIndexAccess,v2[2])" ]
"1000230" [label = "(<operator>.assignmentPlus,v2 += v7)" ]
"1000235" [label = "(<operator>.logicalNot,!i)" ]
"1000239" [label = "(<operator>.notEquals,(v3 & 0x101) != 1)" ]
"1000240" [label = "(<operator>.and,v3 & 0x101)" ]
"1000245" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000248" [label = "(<operator>.assignment,v2 = a1 + 108)" ]
"1000250" [label = "(<operator>.addition,a1 + 108)" ]
"1000253" [label = "(<operator>.assignment,i = 128)" ]
"1000257" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000258" [label = "(<operator>.and,v3 & 0x202)" ]
"1000263" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000266" [label = "(<operator>.assignment,v2 = a1 + 44)" ]
"1000268" [label = "(<operator>.addition,a1 + 44)" ]
"1000273" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000274" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000275" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000278" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000281" [label = "(RETURN,return v6;,return v6;)" ]
"1000109" [label = "(METHOD,udhcp_get_option)" ]
"1000283" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000121" -> "1000126" 
  "1000123" -> "1000121" 
  "1000126" -> "1000130" 
  "1000130" -> "1000145" 
  "1000130" -> "1000240" 
  "1000130" -> "1000258" 
  "1000133" -> "1000145" 
  "1000133" -> "1000240" 
  "1000133" -> "1000258" 
  "1000143" -> "1000149" 
  "1000145" -> "1000143" 
  "1000148" -> "1000152" 
  "1000148" -> "1000158" 
  "1000149" -> "1000148" 
  "1000152" -> "1000154" 
  "1000154" -> "1000235" 
  "1000158" -> "1000240" 
  "1000158" -> "1000258" 
  "1000158" -> "1000275" 
  "1000158" -> "1000164" 
  "1000163" -> "1000193" 
  "1000163" -> "1000185" 
  "1000164" -> "1000163" 
  "1000164" -> "1000171" 
  "1000168" -> "1000176" 
  "1000170" -> "1000168" 
  "1000171" -> "1000170" 
  "1000176" -> "1000179" 
  "1000179" -> "1000163" 
  "1000185" -> "1000188" 
  "1000188" -> "1000283" 
  "1000191" -> "1000197" 
  "1000191" -> "1000211" 
  "1000192" -> "1000191" 
  "1000193" -> "1000192" 
  "1000197" -> "1000202" 
  "1000200" -> "1000205" 
  "1000202" -> "1000200" 
  "1000205" -> "1000208" 
  "1000208" -> "1000283" 
  "1000211" -> "1000216" 
  "1000211" -> "1000220" 
  "1000214" -> "1000227" 
  "1000214" -> "1000230" 
  "1000216" -> "1000214" 
  "1000220" -> "1000227" 
  "1000220" -> "1000230" 
  "1000225" -> "1000230" 
  "1000227" -> "1000225" 
  "1000230" -> "1000235" 
  "1000235" -> "1000145" 
  "1000235" -> "1000240" 
  "1000235" -> "1000185" 
  "1000239" -> "1000258" 
  "1000239" -> "1000275" 
  "1000239" -> "1000245" 
  "1000240" -> "1000239" 
  "1000245" -> "1000250" 
  "1000248" -> "1000253" 
  "1000250" -> "1000248" 
  "1000253" -> "1000145" 
  "1000253" -> "1000240" 
  "1000253" -> "1000258" 
  "1000257" -> "1000275" 
  "1000257" -> "1000263" 
  "1000258" -> "1000257" 
  "1000263" -> "1000268" 
  "1000266" -> "1000133" 
  "1000268" -> "1000266" 
  "1000273" -> "1000278" 
  "1000273" -> "1000281" 
  "1000274" -> "1000273" 
  "1000275" -> "1000274" 
  "1000278" -> "1000281" 
  "1000281" -> "1000283" 
  "1000109" -> "1000123" 
}
