digraph udhcp_get_option {  
"1000113" [label = "(<operator>.assignment,v5 = 0)" ]
"1000116" [label = "(<operator>.assignment,v3 = a1 + 240)" ]
"1000118" [label = "(<operator>.addition,a1 + 240)" ]
"1000122" [label = "(<operator>.assignment,i = 388)" ]
"1000125" [label = "(<operator>.assignment,i = 64)" ]
"1000139" [label = "(<operator>.lessEqualsThan,i <= 0)" ]
"1000144" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000146" [label = "(RETURN,return 0;,return 0;)" ]
"1000149" [label = "(<operator>.indirection,*v3)" ]
"1000152" [label = "(<operator>.preDecrement,--i)" ]
"1000154" [label = "(<operator>.preIncrement,++v3)" ]
"1000157" [label = "(<operator>.equals,*v3 == 0xFF)" ]
"1000158" [label = "(<operator>.indirection,*v3)" ]
"1000163" [label = "(<operator>.lessEqualsThan,i <= 1)" ]
"1000167" [label = "(<operator>.assignment,v6 = v3[1] + 2)" ]
"1000169" [label = "(<operator>.addition,v3[1] + 2)" ]
"1000170" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000174" [label = "(<operator>.assignmentMinus,i -= v6)" ]
"1000178" [label = "(<operator>.lessThan,i < 0)" ]
"1000183" [label = "(<operator>.equals,*v3 == a2)" ]
"1000184" [label = "(<operator>.indirection,*v3)" ]
"1000188" [label = "(log_option,log_option(\"option found\", v3))" ]
"1000191" [label = "(RETURN,return v3 + 2;,return v3 + 2;)" ]
"1000192" [label = "(<operator>.addition,v3 + 2)" ]
"1000196" [label = "(<operator>.logicalAnd,*v3 == 52 && v6 > 2)" ]
"1000197" [label = "(<operator>.equals,*v3 == 52)" ]
"1000198" [label = "(<operator>.indirection,*v3)" ]
"1000201" [label = "(<operator>.greaterThan,v6 > 2)" ]
"1000204" [label = "(<operators>.assignmentOr,v5 |= v3[2])" ]
"1000206" [label = "(<operator>.indirectIndexAccess,v3[2])" ]
"1000209" [label = "(<operator>.assignmentPlus,v3 += v6)" ]
"1000213" [label = "(<operator>.notEquals,(v5 & 0x101) != 1)" ]
"1000214" [label = "(<operator>.and,v5 & 0x101)" ]
"1000219" [label = "(<operators>.assignmentOr,v5 |= 0x101u)" ]
"1000222" [label = "(<operator>.assignment,v3 = a1 + 108)" ]
"1000224" [label = "(<operator>.addition,a1 + 108)" ]
"1000227" [label = "(<operator>.assignment,i = 128)" ]
"1000231" [label = "(<operator>.notEquals,(v5 & 0x202) != 2)" ]
"1000232" [label = "(<operator>.and,v5 & 0x202)" ]
"1000237" [label = "(<operators>.assignmentOr,v5 |= 0x202u)" ]
"1000240" [label = "(<operator>.assignment,v3 = a1 + 44)" ]
"1000242" [label = "(<operator>.addition,a1 + 44)" ]
"1000246" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000247" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000248" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000251" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\"))" ]
"1000253" [label = "(RETURN,return 0;,return 0;)" ]
"1000105" [label = "(METHOD,udhcp_get_option)" ]
"1000255" [label = "(METHOD_RETURN,__usercall)" ]
  "1000113" -> "1000118" 
  "1000116" -> "1000122" 
  "1000118" -> "1000116" 
  "1000122" -> "1000139" 
  "1000122" -> "1000158" 
  "1000122" -> "1000214" 
  "1000122" -> "1000232" 
  "1000125" -> "1000139" 
  "1000125" -> "1000158" 
  "1000125" -> "1000214" 
  "1000125" -> "1000232" 
  "1000139" -> "1000144" 
  "1000139" -> "1000149" 
  "1000144" -> "1000146" 
  "1000146" -> "1000255" 
  "1000149" -> "1000248" 
  "1000149" -> "1000158" 
  "1000149" -> "1000214" 
  "1000149" -> "1000232" 
  "1000149" -> "1000152" 
  "1000152" -> "1000154" 
  "1000154" -> "1000139" 
  "1000154" -> "1000158" 
  "1000157" -> "1000248" 
  "1000157" -> "1000214" 
  "1000157" -> "1000232" 
  "1000157" -> "1000163" 
  "1000158" -> "1000157" 
  "1000163" -> "1000144" 
  "1000163" -> "1000170" 
  "1000167" -> "1000174" 
  "1000169" -> "1000167" 
  "1000170" -> "1000169" 
  "1000174" -> "1000178" 
  "1000178" -> "1000144" 
  "1000178" -> "1000184" 
  "1000183" -> "1000188" 
  "1000183" -> "1000198" 
  "1000184" -> "1000183" 
  "1000188" -> "1000192" 
  "1000191" -> "1000255" 
  "1000192" -> "1000191" 
  "1000196" -> "1000206" 
  "1000196" -> "1000209" 
  "1000197" -> "1000196" 
  "1000197" -> "1000201" 
  "1000198" -> "1000197" 
  "1000201" -> "1000196" 
  "1000204" -> "1000209" 
  "1000206" -> "1000204" 
  "1000209" -> "1000139" 
  "1000209" -> "1000158" 
  "1000209" -> "1000214" 
  "1000213" -> "1000248" 
  "1000213" -> "1000232" 
  "1000213" -> "1000219" 
  "1000214" -> "1000213" 
  "1000219" -> "1000224" 
  "1000222" -> "1000227" 
  "1000224" -> "1000222" 
  "1000227" -> "1000139" 
  "1000227" -> "1000158" 
  "1000227" -> "1000214" 
  "1000227" -> "1000232" 
  "1000231" -> "1000248" 
  "1000231" -> "1000237" 
  "1000232" -> "1000231" 
  "1000237" -> "1000242" 
  "1000240" -> "1000125" 
  "1000242" -> "1000240" 
  "1000246" -> "1000251" 
  "1000246" -> "1000253" 
  "1000247" -> "1000246" 
  "1000248" -> "1000247" 
  "1000251" -> "1000253" 
  "1000253" -> "1000255" 
  "1000105" -> "1000113" 
}
