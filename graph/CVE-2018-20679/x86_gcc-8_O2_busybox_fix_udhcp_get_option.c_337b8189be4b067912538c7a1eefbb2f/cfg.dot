digraph udhcp_get_option {  
"1000119" [label = "(<operator>.assignment,v3 = 388)" ]
"1000122" [label = "(<operator>.assignment,v4 = a1 + 240)" ]
"1000124" [label = "(<operator>.addition,a1 + 240)" ]
"1000127" [label = "(<operator>.assignment,v5 = (unsigned int)&dword_0)" ]
"1000129" [label = "(<operator>.cast,(unsigned int)&dword_0)" ]
"1000130" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000131" [label = "(<operator>.addressOf,&dword_0)" ]
"1000139" [label = "(<operator>.assignment,v6 = *v4)" ]
"1000141" [label = "(<operator>.indirection,*v4)" ]
"1000144" [label = "(<operator>.indirection,*v4)" ]
"1000147" [label = "(<operator>.preDecrement,--v3)" ]
"1000149" [label = "(<operator>.preIncrement,++v4)" ]
"1000153" [label = "(<operator>.logicalNot,!v3)" ]
"1000157" [label = "(<operator>.notEquals,v6 != 0xFF)" ]
"1000162" [label = "(<operator>.equals,(v5 & 0x101) == 1)" ]
"1000163" [label = "(<operator>.and,v5 & 0x101)" ]
"1000168" [label = "(<operators>.assignmentOr,v5 |= 0x101u)" ]
"1000171" [label = "(<operator>.assignment,v3 = 128)" ]
"1000174" [label = "(<operator>.assignment,v4 = a1 + 108)" ]
"1000176" [label = "(<operator>.addition,a1 + 108)" ]
"1000182" [label = "(<operator>.notEquals,(v5 & 0x202) != 2)" ]
"1000183" [label = "(<operator>.and,v5 & 0x202)" ]
"1000188" [label = "(<operator>.assignment,result = 0)" ]
"1000192" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000193" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000194" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000198" [label = "(bb_error_msg,bb_error_msg((char *)&GLOBAL_OFFSET_TABLE_ - 365431))" ]
"1000199" [label = "(<operator>.subtraction,(char *)&GLOBAL_OFFSET_TABLE_ - 365431)" ]
"1000200" [label = "(<operator>.cast,(char *)&GLOBAL_OFFSET_TABLE_)" ]
"1000201" [label = "(UNKNOWN,char *,char *)" ]
"1000202" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000205" [label = "(<operator>.assignment,result = 0)" ]
"1000208" [label = "(RETURN,return result;,return result;)" ]
"1000210" [label = "(<operators>.assignmentOr,v5 |= 0x202u)" ]
"1000213" [label = "(<operator>.assignment,v3 = 64)" ]
"1000216" [label = "(<operator>.assignment,v4 = a1 + 44)" ]
"1000218" [label = "(<operator>.addition,a1 + 44)" ]
"1000222" [label = "(<operator>.equals,v3 == 1)" ]
"1000226" [label = "(<operator>.assignment,v9 = v4[1])" ]
"1000228" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000231" [label = "(<operator>.assignment,v7 = v9 + 2)" ]
"1000233" [label = "(<operator>.addition,v9 + 2)" ]
"1000236" [label = "(<operator>.assignmentMinus,v3 -= v7)" ]
"1000240" [label = "(<operator>.lessThan,v3 < 0)" ]
"1000245" [label = "(<operator>.notEquals,v6 != a2)" ]
"1000250" [label = "(<operator>.equals,v6 == 52)" ]
"1000256" [label = "(<operators>.assignmentOr,v5 |= v4[2])" ]
"1000258" [label = "(<operator>.indirectIndexAccess,v4[2])" ]
"1000261" [label = "(<operator>.assignmentPlus,v4 += v7)" ]
"1000266" [label = "(<operator>.logicalNot,!v9)" ]
"1000270" [label = "(bb_error_msg,bb_error_msg((char *)&GLOBAL_OFFSET_TABLE_ - 456796))" ]
"1000271" [label = "(<operator>.subtraction,(char *)&GLOBAL_OFFSET_TABLE_ - 456796)" ]
"1000272" [label = "(<operator>.cast,(char *)&GLOBAL_OFFSET_TABLE_)" ]
"1000273" [label = "(UNKNOWN,char *,char *)" ]
"1000274" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000277" [label = "(RETURN,return 0;,return 0;)" ]
"1000280" [label = "(<operator>.greaterThan,*((_DWORD *)&GLOBAL_OFFSET_TABLE_ + 857) > 1u)" ]
"1000281" [label = "(<operator>.indirection,*((_DWORD *)&GLOBAL_OFFSET_TABLE_ + 857))" ]
"1000282" [label = "(<operator>.addition,(_DWORD *)&GLOBAL_OFFSET_TABLE_ + 857)" ]
"1000283" [label = "(<operator>.cast,(_DWORD *)&GLOBAL_OFFSET_TABLE_)" ]
"1000284" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000285" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000289" [label = "(log_option_part_0,log_option_part_0())" ]
"1000290" [label = "(RETURN,return v4 + 2;,return v4 + 2;)" ]
"1000291" [label = "(<operator>.addition,v4 + 2)" ]
"1000108" [label = "(METHOD,udhcp_get_option)" ]
"1000294" [label = "(METHOD_RETURN,__usercall)" ]
  "1000119" -> "1000124" 
  "1000122" -> "1000130" 
  "1000124" -> "1000122" 
  "1000127" -> "1000141" 
  "1000127" -> "1000157" 
  "1000127" -> "1000222" 
  "1000129" -> "1000127" 
  "1000130" -> "1000131" 
  "1000131" -> "1000129" 
  "1000139" -> "1000144" 
  "1000141" -> "1000139" 
  "1000144" -> "1000157" 
  "1000144" -> "1000222" 
  "1000144" -> "1000147" 
  "1000147" -> "1000149" 
  "1000149" -> "1000153" 
  "1000153" -> "1000141" 
  "1000153" -> "1000157" 
  "1000153" -> "1000273" 
  "1000157" -> "1000222" 
  "1000157" -> "1000163" 
  "1000162" -> "1000168" 
  "1000162" -> "1000183" 
  "1000163" -> "1000162" 
  "1000168" -> "1000171" 
  "1000171" -> "1000176" 
  "1000174" -> "1000141" 
  "1000174" -> "1000157" 
  "1000174" -> "1000222" 
  "1000176" -> "1000174" 
  "1000182" -> "1000188" 
  "1000182" -> "1000210" 
  "1000183" -> "1000182" 
  "1000188" -> "1000194" 
  "1000192" -> "1000201" 
  "1000192" -> "1000208" 
  "1000193" -> "1000192" 
  "1000194" -> "1000193" 
  "1000198" -> "1000205" 
  "1000199" -> "1000198" 
  "1000200" -> "1000199" 
  "1000201" -> "1000202" 
  "1000202" -> "1000200" 
  "1000205" -> "1000208" 
  "1000208" -> "1000294" 
  "1000210" -> "1000213" 
  "1000213" -> "1000218" 
  "1000216" -> "1000141" 
  "1000216" -> "1000157" 
  "1000216" -> "1000222" 
  "1000218" -> "1000216" 
  "1000222" -> "1000273" 
  "1000222" -> "1000228" 
  "1000226" -> "1000233" 
  "1000228" -> "1000226" 
  "1000231" -> "1000236" 
  "1000233" -> "1000231" 
  "1000236" -> "1000240" 
  "1000240" -> "1000273" 
  "1000240" -> "1000245" 
  "1000245" -> "1000250" 
  "1000245" -> "1000266" 
  "1000250" -> "1000258" 
  "1000250" -> "1000261" 
  "1000250" -> "1000261" 
  "1000256" -> "1000261" 
  "1000258" -> "1000256" 
  "1000261" -> "1000153" 
  "1000266" -> "1000284" 
  "1000266" -> "1000273" 
  "1000270" -> "1000277" 
  "1000271" -> "1000270" 
  "1000272" -> "1000271" 
  "1000273" -> "1000274" 
  "1000274" -> "1000272" 
  "1000277" -> "1000294" 
  "1000280" -> "1000289" 
  "1000280" -> "1000291" 
  "1000281" -> "1000280" 
  "1000282" -> "1000281" 
  "1000283" -> "1000282" 
  "1000284" -> "1000285" 
  "1000285" -> "1000283" 
  "1000289" -> "1000291" 
  "1000290" -> "1000294" 
  "1000291" -> "1000290" 
  "1000108" -> "1000119" 
}
