digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v2 = 0)" ]
"1000120" [label = "(<operator>.assignment,v3 = a1 + 240)" ]
"1000122" [label = "(<operator>.addition,a1 + 240)" ]
"1000125" [label = "(<operator>.assignment,v4 = 388)" ]
"1000137" [label = "(<operator>.assignment,v5 = *v3)" ]
"1000139" [label = "(<operator>.indirection,*v3)" ]
"1000142" [label = "(<operator>.indirection,*v3)" ]
"1000145" [label = "(<operator>.preDecrement,--v4)" ]
"1000147" [label = "(<operator>.preIncrement,++v3)" ]
"1000150" [label = "(<operator>.logicalNot,!v4)" ]
"1000154" [label = "(<operator>.notEquals,v5 != 0xFF)" ]
"1000159" [label = "(<operator>.equals,(v2 & 0x101) == 1)" ]
"1000160" [label = "(<operator>.and,v2 & 0x101)" ]
"1000165" [label = "(<operators>.assignmentOr,v2 |= 0x101u)" ]
"1000168" [label = "(<operator>.assignment,v3 = a1 + 108)" ]
"1000170" [label = "(<operator>.addition,a1 + 108)" ]
"1000173" [label = "(<operator>.assignment,v4 = 128)" ]
"1000179" [label = "(<operator>.notEquals,(v2 & 0x202) != 2)" ]
"1000180" [label = "(<operator>.and,v2 & 0x202)" ]
"1000185" [label = "(<operator>.assignment,result = 0)" ]
"1000189" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000190" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000191" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000195" [label = "(bb_error_msg,bb_error_msg((char *)&GLOBAL_OFFSET_TABLE_ - 377493))" ]
"1000196" [label = "(<operator>.subtraction,(char *)&GLOBAL_OFFSET_TABLE_ - 377493)" ]
"1000197" [label = "(<operator>.cast,(char *)&GLOBAL_OFFSET_TABLE_)" ]
"1000198" [label = "(UNKNOWN,char *,char *)" ]
"1000199" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000202" [label = "(<operator>.assignment,result = 0)" ]
"1000205" [label = "(RETURN,return result;,return result;)" ]
"1000207" [label = "(<operators>.assignmentOr,v2 |= 0x202u)" ]
"1000210" [label = "(<operator>.assignment,v3 = a1 + 44)" ]
"1000212" [label = "(<operator>.addition,a1 + 44)" ]
"1000215" [label = "(<operator>.assignment,v4 = 64)" ]
"1000219" [label = "(<operator>.equals,v4 == 1)" ]
"1000223" [label = "(<operator>.assignment,v6 = v3[1])" ]
"1000225" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000228" [label = "(<operator>.assignmentMinus,v4 -= v6 + 2)" ]
"1000230" [label = "(<operator>.addition,v6 + 2)" ]
"1000234" [label = "(<operator>.lessThan,v4 < 0)" ]
"1000239" [label = "(<operator>.equals,a2 == v5)" ]
"1000244" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000249" [label = "(<operator>.equals,v5 == 52)" ]
"1000252" [label = "(<operators>.assignmentOr,v2 |= v3[2])" ]
"1000254" [label = "(<operator>.indirectIndexAccess,v3[2])" ]
"1000257" [label = "(<operator>.assignmentPlus,v3 += v6 + 2)" ]
"1000259" [label = "(<operator>.addition,v6 + 2)" ]
"1000263" [label = "(<operator>.logicalNot,!v4)" ]
"1000267" [label = "(<operator>.logicalNot,!(_BYTE)v6)" ]
"1000268" [label = "(<operator>.cast,(_BYTE)v6)" ]
"1000269" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000273" [label = "(bb_error_msg,bb_error_msg(&GLOBAL_OFFSET_TABLE_ - 117070))" ]
"1000274" [label = "(<operator>.subtraction,&GLOBAL_OFFSET_TABLE_ - 117070)" ]
"1000275" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000278" [label = "(RETURN,return 0;,return 0;)" ]
"1000281" [label = "(<operator>.greaterThan,(unsigned int)*(&GLOBAL_OFFSET_TABLE_ + 857) > 1)" ]
"1000282" [label = "(<operator>.cast,(unsigned int)*(&GLOBAL_OFFSET_TABLE_ + 857))" ]
"1000283" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000284" [label = "(<operator>.indirection,*(&GLOBAL_OFFSET_TABLE_ + 857))" ]
"1000285" [label = "(<operator>.addition,&GLOBAL_OFFSET_TABLE_ + 857)" ]
"1000286" [label = "(<operator>.addressOf,&GLOBAL_OFFSET_TABLE_)" ]
"1000290" [label = "(log_option_part_0,log_option_part_0())" ]
"1000291" [label = "(RETURN,return v3 + 2;,return v3 + 2;)" ]
"1000292" [label = "(<operator>.addition,v3 + 2)" ]
"1000107" [label = "(METHOD,udhcp_get_option)" ]
"1000295" [label = "(METHOD_RETURN,__usercall)" ]
  "1000117" -> "1000122" 
  "1000120" -> "1000125" 
  "1000122" -> "1000120" 
  "1000125" -> "1000269" 
  "1000125" -> "1000139" 
  "1000125" -> "1000154" 
  "1000125" -> "1000219" 
  "1000137" -> "1000142" 
  "1000139" -> "1000137" 
  "1000142" -> "1000269" 
  "1000142" -> "1000154" 
  "1000142" -> "1000219" 
  "1000142" -> "1000145" 
  "1000145" -> "1000147" 
  "1000147" -> "1000150" 
  "1000150" -> "1000139" 
  "1000150" -> "1000154" 
  "1000150" -> "1000275" 
  "1000154" -> "1000269" 
  "1000154" -> "1000219" 
  "1000154" -> "1000160" 
  "1000159" -> "1000165" 
  "1000159" -> "1000180" 
  "1000160" -> "1000159" 
  "1000165" -> "1000170" 
  "1000168" -> "1000173" 
  "1000170" -> "1000168" 
  "1000173" -> "1000139" 
  "1000173" -> "1000154" 
  "1000173" -> "1000219" 
  "1000179" -> "1000185" 
  "1000179" -> "1000207" 
  "1000180" -> "1000179" 
  "1000185" -> "1000191" 
  "1000189" -> "1000198" 
  "1000189" -> "1000205" 
  "1000190" -> "1000189" 
  "1000191" -> "1000190" 
  "1000195" -> "1000202" 
  "1000196" -> "1000195" 
  "1000197" -> "1000196" 
  "1000198" -> "1000199" 
  "1000199" -> "1000197" 
  "1000202" -> "1000205" 
  "1000205" -> "1000295" 
  "1000207" -> "1000212" 
  "1000210" -> "1000215" 
  "1000212" -> "1000210" 
  "1000215" -> "1000139" 
  "1000215" -> "1000154" 
  "1000215" -> "1000219" 
  "1000219" -> "1000275" 
  "1000219" -> "1000225" 
  "1000223" -> "1000230" 
  "1000225" -> "1000223" 
  "1000228" -> "1000234" 
  "1000230" -> "1000228" 
  "1000234" -> "1000275" 
  "1000234" -> "1000239" 
  "1000239" -> "1000269" 
  "1000239" -> "1000244" 
  "1000244" -> "1000249" 
  "1000244" -> "1000259" 
  "1000249" -> "1000254" 
  "1000249" -> "1000259" 
  "1000252" -> "1000259" 
  "1000254" -> "1000252" 
  "1000257" -> "1000263" 
  "1000259" -> "1000257" 
  "1000263" -> "1000269" 
  "1000263" -> "1000139" 
  "1000263" -> "1000154" 
  "1000263" -> "1000219" 
  "1000263" -> "1000275" 
  "1000267" -> "1000283" 
  "1000267" -> "1000275" 
  "1000268" -> "1000267" 
  "1000269" -> "1000268" 
  "1000273" -> "1000278" 
  "1000274" -> "1000273" 
  "1000275" -> "1000274" 
  "1000278" -> "1000295" 
  "1000281" -> "1000290" 
  "1000281" -> "1000292" 
  "1000282" -> "1000281" 
  "1000283" -> "1000286" 
  "1000284" -> "1000282" 
  "1000285" -> "1000284" 
  "1000286" -> "1000285" 
  "1000290" -> "1000292" 
  "1000291" -> "1000295" 
  "1000292" -> "1000291" 
  "1000107" -> "1000117" 
}
