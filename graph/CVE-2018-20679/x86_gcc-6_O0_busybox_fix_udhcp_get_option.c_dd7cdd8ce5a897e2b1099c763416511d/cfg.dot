digraph udhcp_get_option {  
"1000113" [label = "(<operator>.assignment,v5 = 0)" ]
"1000116" [label = "(<operator>.assignment,v3 = a1 + 240)" ]
"1000118" [label = "(<operator>.addition,a1 + 240)" ]
"1000121" [label = "(<operator>.assignment,v4 = 388)" ]
"1000134" [label = "(<operator>.lessEqualsThan,v4 <= 0)" ]
"1000139" [label = "(<operator>.indirection,*v3)" ]
"1000142" [label = "(<operator>.preDecrement,--v4)" ]
"1000144" [label = "(<operator>.preIncrement,++v3)" ]
"1000147" [label = "(<operator>.notEquals,*v3 != 0xFF)" ]
"1000148" [label = "(<operator>.indirection,*v3)" ]
"1000153" [label = "(<operator>.equals,(v5 & 0x101) == 1)" ]
"1000154" [label = "(<operator>.and,v5 & 0x101)" ]
"1000159" [label = "(<operators>.assignmentOr,v5 |= 0x101u)" ]
"1000162" [label = "(<operator>.assignment,v3 = a1 + 108)" ]
"1000164" [label = "(<operator>.addition,a1 + 108)" ]
"1000167" [label = "(<operator>.assignment,v4 = 128)" ]
"1000173" [label = "(<operator>.notEquals,(v5 & 0x202) != 2)" ]
"1000174" [label = "(<operator>.and,v5 & 0x202)" ]
"1000180" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000181" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000182" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000185" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\"))" ]
"1000187" [label = "(RETURN,return 0;,return 0;)" ]
"1000189" [label = "(<operators>.assignmentOr,v5 |= 0x202u)" ]
"1000192" [label = "(<operator>.assignment,v3 = a1 + 44)" ]
"1000194" [label = "(<operator>.addition,a1 + 44)" ]
"1000197" [label = "(<operator>.assignment,v4 = 64)" ]
"1000201" [label = "(<operator>.lessEqualsThan,v4 <= 1)" ]
"1000205" [label = "(<operator>.assignment,v6 = v3[1] + 2)" ]
"1000207" [label = "(<operator>.addition,v3[1] + 2)" ]
"1000208" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000212" [label = "(<operator>.assignmentMinus,v4 -= v6)" ]
"1000216" [label = "(<operator>.lessThan,v4 < 0)" ]
"1000221" [label = "(<operator>.equals,*v3 == a2)" ]
"1000222" [label = "(<operator>.indirection,*v3)" ]
"1000227" [label = "(<operator>.logicalAnd,*v3 == 52 && v6 > 2)" ]
"1000228" [label = "(<operator>.equals,*v3 == 52)" ]
"1000229" [label = "(<operator>.indirection,*v3)" ]
"1000232" [label = "(<operator>.greaterThan,v6 > 2)" ]
"1000235" [label = "(<operators>.assignmentOr,v5 |= v3[2])" ]
"1000237" [label = "(<operator>.indirectIndexAccess,v3[2])" ]
"1000240" [label = "(<operator>.assignmentPlus,v3 += v6)" ]
"1000244" [label = "(<operator>.logicalNot,!v3[1])" ]
"1000245" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000250" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000252" [label = "(RETURN,return 0;,return 0;)" ]
"1000254" [label = "(log_option,log_option(\"option found\", v3))" ]
"1000257" [label = "(RETURN,return v3 + 2;,return v3 + 2;)" ]
"1000258" [label = "(<operator>.addition,v3 + 2)" ]
"1000105" [label = "(METHOD,udhcp_get_option)" ]
"1000261" [label = "(METHOD_RETURN,__usercall)" ]
  "1000113" -> "1000118" 
  "1000116" -> "1000121" 
  "1000118" -> "1000116" 
  "1000121" -> "1000134" 
  "1000121" -> "1000148" 
  "1000121" -> "1000201" 
  "1000121" -> "1000245" 
  "1000134" -> "1000250" 
  "1000134" -> "1000139" 
  "1000139" -> "1000148" 
  "1000139" -> "1000201" 
  "1000139" -> "1000245" 
  "1000139" -> "1000142" 
  "1000142" -> "1000144" 
  "1000144" -> "1000134" 
  "1000144" -> "1000148" 
  "1000147" -> "1000201" 
  "1000147" -> "1000245" 
  "1000147" -> "1000154" 
  "1000148" -> "1000147" 
  "1000153" -> "1000159" 
  "1000153" -> "1000174" 
  "1000154" -> "1000153" 
  "1000159" -> "1000164" 
  "1000162" -> "1000167" 
  "1000164" -> "1000162" 
  "1000167" -> "1000134" 
  "1000167" -> "1000148" 
  "1000167" -> "1000201" 
  "1000173" -> "1000182" 
  "1000173" -> "1000189" 
  "1000174" -> "1000173" 
  "1000180" -> "1000185" 
  "1000180" -> "1000187" 
  "1000181" -> "1000180" 
  "1000182" -> "1000181" 
  "1000185" -> "1000187" 
  "1000187" -> "1000261" 
  "1000189" -> "1000194" 
  "1000192" -> "1000197" 
  "1000194" -> "1000192" 
  "1000197" -> "1000134" 
  "1000197" -> "1000148" 
  "1000197" -> "1000201" 
  "1000201" -> "1000250" 
  "1000201" -> "1000208" 
  "1000205" -> "1000212" 
  "1000207" -> "1000205" 
  "1000208" -> "1000207" 
  "1000212" -> "1000216" 
  "1000216" -> "1000250" 
  "1000216" -> "1000222" 
  "1000221" -> "1000245" 
  "1000221" -> "1000229" 
  "1000222" -> "1000221" 
  "1000227" -> "1000237" 
  "1000227" -> "1000240" 
  "1000228" -> "1000227" 
  "1000228" -> "1000232" 
  "1000229" -> "1000228" 
  "1000232" -> "1000227" 
  "1000235" -> "1000240" 
  "1000237" -> "1000235" 
  "1000240" -> "1000134" 
  "1000240" -> "1000148" 
  "1000240" -> "1000201" 
  "1000240" -> "1000245" 
  "1000244" -> "1000250" 
  "1000244" -> "1000254" 
  "1000245" -> "1000244" 
  "1000250" -> "1000252" 
  "1000252" -> "1000261" 
  "1000254" -> "1000258" 
  "1000257" -> "1000261" 
  "1000258" -> "1000257" 
  "1000105" -> "1000113" 
}
