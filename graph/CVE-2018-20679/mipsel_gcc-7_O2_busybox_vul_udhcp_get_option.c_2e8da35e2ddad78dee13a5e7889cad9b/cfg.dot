digraph udhcp_get_option {  
"1000116" [label = "(<operator>.assignment,v3 = 0)" ]
"1000119" [label = "(<operator>.assignment,v4 = 388)" ]
"1000122" [label = "(<operator>.assignment,v5 = a1 + 240)" ]
"1000124" [label = "(<operator>.addition,a1 + 240)" ]
"1000136" [label = "(<operator>.assignment,v6 = *v5)" ]
"1000138" [label = "(<operator>.indirection,*v5)" ]
"1000141" [label = "(<operator>.logicalNot,!*v5)" ]
"1000142" [label = "(<operator>.indirection,*v5)" ]
"1000145" [label = "(<operator>.preDecrement,--v4)" ]
"1000147" [label = "(<operator>.preIncrement,++v5)" ]
"1000151" [label = "(<operator>.equals,v6 == 255)" ]
"1000156" [label = "(<operator>.logicalOr,v4 == 1 || (a3 = v5[1] + 2, v4 -= a3, v4 < 0))" ]
"1000157" [label = "(<operator>.equals,v4 == 1)" ]
"1000161" [label = "(<operator>.assignment,a3 = v5[1] + 2)" ]
"1000163" [label = "(<operator>.addition,v5[1] + 2)" ]
"1000164" [label = "(<operator>.indirectIndexAccess,v5[1])" ]
"1000169" [label = "(<operator>.assignmentMinus,v4 -= a3)" ]
"1000172" [label = "(<operator>.lessThan,v4 < 0)" ]
"1000177" [label = "(warn,warn(\"bad packet, malformed option field\", a2, a3, v3))" ]
"1000182" [label = "(RETURN,return 0;,return 0;)" ]
"1000185" [label = "(<operator>.equals,v6 == a2)" ]
"1000190" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 2)" ]
"1000191" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000192" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000195" [label = "(log_option_part_0,log_option_part_0(\"option found\", v5))" ]
"1000198" [label = "(RETURN,return v5 + 2;,return v5 + 2;)" ]
"1000199" [label = "(<operator>.addition,v5 + 2)" ]
"1000203" [label = "(<operator>.equals,v6 == 52)" ]
"1000208" [label = "(<operator>.indirectIndexAccess,v5[1])" ]
"1000211" [label = "(<operators>.assignmentOr,v3 |= v5[2])" ]
"1000213" [label = "(<operator>.indirectIndexAccess,v5[2])" ]
"1000216" [label = "(<operator>.assignmentPlus,v5 += a3)" ]
"1000221" [label = "(<operator>.logicalNot,!v4)" ]
"1000225" [label = "(<operator>.notEquals,(v3 & 0x101) != 1)" ]
"1000226" [label = "(<operator>.and,v3 & 0x101)" ]
"1000231" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000234" [label = "(<operator>.assignment,v5 = a1 + 108)" ]
"1000236" [label = "(<operator>.addition,a1 + 108)" ]
"1000239" [label = "(<operator>.assignment,v4 = 128)" ]
"1000243" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000244" [label = "(<operator>.and,v3 & 0x202)" ]
"1000249" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000252" [label = "(<operator>.assignment,v5 = a1 + 44)" ]
"1000254" [label = "(<operator>.addition,a1 + 44)" ]
"1000257" [label = "(<operator>.assignment,v4 = 64)" ]
"1000260" [label = "(<operator>.assignment,result = 0)" ]
"1000264" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 3)" ]
"1000265" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000266" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000270" [label = "(warn,warn(\"option 0x%02x not found\", a2))" ]
"1000273" [label = "(<operator>.assignment,result = 0)" ]
"1000276" [label = "(RETURN,return result;,return result;)" ]
"1000106" [label = "(METHOD,udhcp_get_option)" ]
"1000278" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000116" -> "1000119" 
  "1000119" -> "1000124" 
  "1000122" -> "1000138" 
  "1000122" -> "1000226" 
  "1000122" -> "1000244" 
  "1000122" -> "1000260" 
  "1000124" -> "1000122" 
  "1000136" -> "1000142" 
  "1000138" -> "1000136" 
  "1000141" -> "1000145" 
  "1000141" -> "1000151" 
  "1000142" -> "1000141" 
  "1000145" -> "1000147" 
  "1000147" -> "1000221" 
  "1000151" -> "1000226" 
  "1000151" -> "1000244" 
  "1000151" -> "1000260" 
  "1000151" -> "1000157" 
  "1000156" -> "1000177" 
  "1000156" -> "1000185" 
  "1000157" -> "1000156" 
  "1000157" -> "1000164" 
  "1000161" -> "1000169" 
  "1000163" -> "1000161" 
  "1000164" -> "1000163" 
  "1000169" -> "1000172" 
  "1000172" -> "1000156" 
  "1000177" -> "1000182" 
  "1000182" -> "1000278" 
  "1000185" -> "1000192" 
  "1000185" -> "1000203" 
  "1000190" -> "1000195" 
  "1000190" -> "1000199" 
  "1000191" -> "1000190" 
  "1000192" -> "1000191" 
  "1000195" -> "1000199" 
  "1000198" -> "1000278" 
  "1000199" -> "1000198" 
  "1000203" -> "1000208" 
  "1000203" -> "1000216" 
  "1000208" -> "1000213" 
  "1000208" -> "1000216" 
  "1000211" -> "1000216" 
  "1000213" -> "1000211" 
  "1000216" -> "1000221" 
  "1000221" -> "1000138" 
  "1000221" -> "1000226" 
  "1000221" -> "1000177" 
  "1000225" -> "1000244" 
  "1000225" -> "1000260" 
  "1000225" -> "1000231" 
  "1000226" -> "1000225" 
  "1000231" -> "1000236" 
  "1000234" -> "1000239" 
  "1000236" -> "1000234" 
  "1000239" -> "1000138" 
  "1000239" -> "1000226" 
  "1000239" -> "1000244" 
  "1000243" -> "1000260" 
  "1000243" -> "1000249" 
  "1000244" -> "1000243" 
  "1000249" -> "1000254" 
  "1000252" -> "1000257" 
  "1000254" -> "1000252" 
  "1000257" -> "1000138" 
  "1000257" -> "1000226" 
  "1000257" -> "1000244" 
  "1000257" -> "1000260" 
  "1000260" -> "1000266" 
  "1000264" -> "1000270" 
  "1000264" -> "1000276" 
  "1000265" -> "1000264" 
  "1000266" -> "1000265" 
  "1000270" -> "1000273" 
  "1000273" -> "1000276" 
  "1000276" -> "1000278" 
  "1000106" -> "1000116" 
}
