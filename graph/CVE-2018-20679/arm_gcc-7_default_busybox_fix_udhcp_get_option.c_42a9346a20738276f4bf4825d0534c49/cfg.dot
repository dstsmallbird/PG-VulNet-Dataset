digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v2 = 0)" ]
"1000120" [label = "(<operator>.assignment,v3 = 388)" ]
"1000123" [label = "(<operator>.assignment,v4 = a1 + 240)" ]
"1000125" [label = "(<operator>.addition,a1 + 240)" ]
"1000137" [label = "(<operator>.assignment,v5 = *v4)" ]
"1000139" [label = "(<operator>.indirection,*v4)" ]
"1000142" [label = "(<operator>.logicalNot,!*v4)" ]
"1000143" [label = "(<operator>.indirection,*v4)" ]
"1000146" [label = "(<operator>.preDecrement,--v3)" ]
"1000148" [label = "(<operator>.preIncrement,++v4)" ]
"1000152" [label = "(<operator>.equals,v5 == 255)" ]
"1000157" [label = "(<operator>.equals,v3 == 1)" ]
"1000161" [label = "(<operator>.assignment,v6 = v4[1] + 2)" ]
"1000163" [label = "(<operator>.addition,v4[1] + 2)" ]
"1000164" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000168" [label = "(<operator>.assignmentMinus,v3 -= v6)" ]
"1000172" [label = "(<operator>.lessThan,v3 < 0)" ]
"1000177" [label = "(<operator>.equals,v5 == a2)" ]
"1000182" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000186" [label = "(log_option,log_option(\"option found\", v4, v2))" ]
"1000190" [label = "(RETURN,return v4 + 2;,return v4 + 2;)" ]
"1000191" [label = "(<operator>.addition,v4 + 2)" ]
"1000195" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\", a2, v2))" ]
"1000199" [label = "(RETURN,return 0;,return 0;)" ]
"1000201" [label = "(<operator>.assignment,v8 = v6 != 2)" ]
"1000203" [label = "(<operator>.notEquals,v6 != 2)" ]
"1000207" [label = "(<operator>.notEquals,v5 != 52)" ]
"1000210" [label = "(<operator>.assignment,v8 = 0)" ]
"1000215" [label = "(<operator>.assignment,v5 = v4[2])" ]
"1000217" [label = "(<operator>.indirectIndexAccess,v4[2])" ]
"1000220" [label = "(<operator>.assignmentPlus,v4 += v6)" ]
"1000225" [label = "(<operators>.assignmentOr,v2 |= v5)" ]
"1000230" [label = "(<operator>.logicalNot,!v3)" ]
"1000234" [label = "(<operator>.notEquals,(v2 & 0x101) != 1)" ]
"1000235" [label = "(<operator>.and,v2 & 0x101)" ]
"1000240" [label = "(<operators>.assignmentOr,v2 |= 0x101u)" ]
"1000243" [label = "(<operator>.assignment,v4 = a1 + 108)" ]
"1000245" [label = "(<operator>.addition,a1 + 108)" ]
"1000248" [label = "(<operator>.assignment,v3 = 128)" ]
"1000252" [label = "(<operator>.notEquals,(v2 & 0x202) != 2)" ]
"1000253" [label = "(<operator>.and,v2 & 0x202)" ]
"1000258" [label = "(<operators>.assignmentOr,v2 |= 0x202u)" ]
"1000261" [label = "(<operator>.assignment,v4 = a1 + 44)" ]
"1000263" [label = "(<operator>.addition,a1 + 44)" ]
"1000266" [label = "(<operator>.assignment,v3 = 64)" ]
"1000270" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000271" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000272" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000275" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000278" [label = "(RETURN,return 0;,return 0;)" ]
"1000107" [label = "(METHOD,udhcp_get_option)" ]
"1000280" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000117" -> "1000120" 
  "1000120" -> "1000125" 
  "1000123" -> "1000272" 
  "1000123" -> "1000139" 
  "1000123" -> "1000235" 
  "1000123" -> "1000253" 
  "1000125" -> "1000123" 
  "1000137" -> "1000143" 
  "1000139" -> "1000137" 
  "1000142" -> "1000146" 
  "1000142" -> "1000152" 
  "1000143" -> "1000142" 
  "1000146" -> "1000148" 
  "1000148" -> "1000230" 
  "1000152" -> "1000272" 
  "1000152" -> "1000235" 
  "1000152" -> "1000253" 
  "1000152" -> "1000157" 
  "1000157" -> "1000195" 
  "1000157" -> "1000164" 
  "1000161" -> "1000168" 
  "1000163" -> "1000161" 
  "1000164" -> "1000163" 
  "1000168" -> "1000172" 
  "1000172" -> "1000195" 
  "1000172" -> "1000177" 
  "1000177" -> "1000182" 
  "1000177" -> "1000203" 
  "1000182" -> "1000186" 
  "1000182" -> "1000195" 
  "1000186" -> "1000191" 
  "1000190" -> "1000280" 
  "1000191" -> "1000190" 
  "1000195" -> "1000199" 
  "1000199" -> "1000280" 
  "1000201" -> "1000207" 
  "1000203" -> "1000201" 
  "1000207" -> "1000210" 
  "1000207" -> "1000217" 
  "1000207" -> "1000220" 
  "1000210" -> "1000217" 
  "1000210" -> "1000220" 
  "1000215" -> "1000220" 
  "1000217" -> "1000215" 
  "1000220" -> "1000225" 
  "1000220" -> "1000230" 
  "1000225" -> "1000230" 
  "1000230" -> "1000139" 
  "1000230" -> "1000235" 
  "1000230" -> "1000195" 
  "1000234" -> "1000272" 
  "1000234" -> "1000253" 
  "1000234" -> "1000240" 
  "1000235" -> "1000234" 
  "1000240" -> "1000245" 
  "1000243" -> "1000248" 
  "1000245" -> "1000243" 
  "1000248" -> "1000139" 
  "1000248" -> "1000235" 
  "1000248" -> "1000253" 
  "1000252" -> "1000272" 
  "1000252" -> "1000258" 
  "1000253" -> "1000252" 
  "1000258" -> "1000263" 
  "1000261" -> "1000266" 
  "1000263" -> "1000261" 
  "1000266" -> "1000272" 
  "1000266" -> "1000139" 
  "1000266" -> "1000235" 
  "1000266" -> "1000253" 
  "1000270" -> "1000275" 
  "1000270" -> "1000278" 
  "1000271" -> "1000270" 
  "1000272" -> "1000271" 
  "1000275" -> "1000278" 
  "1000278" -> "1000280" 
  "1000107" -> "1000117" 
}
