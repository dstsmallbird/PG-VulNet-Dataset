digraph udhcp_get_option {  
"1000121" [label = "(<operator>.assignment,v2 = 0)" ]
"1000124" [label = "(<operator>.assignment,v3 = 388)" ]
"1000127" [label = "(<operator>.assignment,v4 = a1 + 240)" ]
"1000129" [label = "(<operator>.addition,a1 + 240)" ]
"1000144" [label = "(<operator>.assignment,v5 = *v4)" ]
"1000146" [label = "(<operator>.indirection,*v4)" ]
"1000149" [label = "(<operator>.indirection,*v4)" ]
"1000152" [label = "(<operator>.preDecrement,--v3)" ]
"1000154" [label = "(<operator>.preIncrement,++v4)" ]
"1000157" [label = "(<operator>.logicalNot,!v3)" ]
"1000161" [label = "(<operator>.equals,v5 == 255)" ]
"1000166" [label = "(<operator>.equals,v3 == 1)" ]
"1000170" [label = "(<operator>.assignment,v6 = v4[1] + 2)" ]
"1000172" [label = "(<operator>.addition,v4[1] + 2)" ]
"1000173" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000177" [label = "(<operator>.assignmentMinus,v3 -= v6)" ]
"1000181" [label = "(<operator>.lessThan,v3 < 0)" ]
"1000186" [label = "(<operator>.equals,v5 == (_DWORD)a2)" ]
"1000188" [label = "(<operator>.cast,(_DWORD)a2)" ]
"1000189" [label = "(UNKNOWN,_DWORD,_DWORD)" ]
"1000193" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000198" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 1)" ]
"1000199" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000200" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000203" [label = "(log_option_part_0,log_option_part_0(\"option found\", v4))" ]
"1000206" [label = "(<operator>.assignment,v8 = v4 + 2)" ]
"1000208" [label = "(<operator>.addition,v4 + 2)" ]
"1000215" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000217" [label = "(RETURN,return v8;,return v8;)" ]
"1000220" [label = "(<operator>.equals,v5 == 52)" ]
"1000223" [label = "(<operator>.assignment,v7 = v6 == 2)" ]
"1000225" [label = "(<operator>.equals,v6 == 2)" ]
"1000229" [label = "(<operator>.assignment,v7 = 1)" ]
"1000235" [label = "(<operator>.assignmentPlus,v4 += v6)" ]
"1000240" [label = "(<operator>.assignment,v10 = v4[2])" ]
"1000242" [label = "(<operator>.indirectIndexAccess,v4[2])" ]
"1000245" [label = "(<operator>.assignmentPlus,v4 += v6)" ]
"1000248" [label = "(<operators>.assignmentOr,v2 |= v10)" ]
"1000252" [label = "(<operator>.logicalNot,!v3)" ]
"1000256" [label = "(<operator>.notEquals,(v2 & 0x101) != 1)" ]
"1000257" [label = "(<operator>.and,v2 & 0x101)" ]
"1000262" [label = "(<operators>.assignmentOr,v2 |= 0x101u)" ]
"1000265" [label = "(<operator>.assignment,v4 = a1 + 108)" ]
"1000267" [label = "(<operator>.addition,a1 + 108)" ]
"1000270" [label = "(<operator>.assignment,v3 = 128)" ]
"1000274" [label = "(<operator>.notEquals,(v2 & 0x202) != 2)" ]
"1000275" [label = "(<operator>.and,v2 & 0x202)" ]
"1000280" [label = "(<operators>.assignmentOr,v2 |= 0x202u)" ]
"1000283" [label = "(<operator>.assignment,v4 = a1 + 44)" ]
"1000285" [label = "(<operator>.addition,a1 + 44)" ]
"1000288" [label = "(<operator>.assignment,v3 = 64)" ]
"1000293" [label = "(<operator>.lessEqualsThan,(unsigned int)dhcp_verbose <= 2)" ]
"1000294" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000295" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000298" [label = "(RETURN,return v8;,return v8;)" ]
"1000300" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000109" [label = "(METHOD,udhcp_get_option)" ]
"1000304" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000121" -> "1000124" 
  "1000124" -> "1000129" 
  "1000127" -> "1000146" 
  "1000127" -> "1000161" 
  "1000127" -> "1000257" 
  "1000127" -> "1000275" 
  "1000127" -> "1000295" 
  "1000129" -> "1000127" 
  "1000144" -> "1000149" 
  "1000146" -> "1000144" 
  "1000149" -> "1000161" 
  "1000149" -> "1000257" 
  "1000149" -> "1000275" 
  "1000149" -> "1000295" 
  "1000149" -> "1000152" 
  "1000152" -> "1000154" 
  "1000154" -> "1000157" 
  "1000157" -> "1000146" 
  "1000157" -> "1000161" 
  "1000157" -> "1000215" 
  "1000161" -> "1000257" 
  "1000161" -> "1000275" 
  "1000161" -> "1000295" 
  "1000161" -> "1000166" 
  "1000166" -> "1000215" 
  "1000166" -> "1000173" 
  "1000170" -> "1000177" 
  "1000172" -> "1000170" 
  "1000173" -> "1000172" 
  "1000177" -> "1000181" 
  "1000181" -> "1000215" 
  "1000181" -> "1000189" 
  "1000186" -> "1000193" 
  "1000186" -> "1000220" 
  "1000188" -> "1000186" 
  "1000189" -> "1000188" 
  "1000193" -> "1000200" 
  "1000193" -> "1000215" 
  "1000198" -> "1000203" 
  "1000198" -> "1000208" 
  "1000199" -> "1000198" 
  "1000200" -> "1000199" 
  "1000203" -> "1000208" 
  "1000206" -> "1000217" 
  "1000208" -> "1000206" 
  "1000215" -> "1000217" 
  "1000217" -> "1000304" 
  "1000220" -> "1000225" 
  "1000220" -> "1000229" 
  "1000223" -> "1000235" 
  "1000223" -> "1000242" 
  "1000225" -> "1000223" 
  "1000229" -> "1000235" 
  "1000229" -> "1000242" 
  "1000235" -> "1000252" 
  "1000240" -> "1000245" 
  "1000242" -> "1000240" 
  "1000245" -> "1000248" 
  "1000248" -> "1000252" 
  "1000252" -> "1000146" 
  "1000252" -> "1000161" 
  "1000252" -> "1000257" 
  "1000252" -> "1000215" 
  "1000256" -> "1000275" 
  "1000256" -> "1000295" 
  "1000256" -> "1000262" 
  "1000257" -> "1000256" 
  "1000262" -> "1000267" 
  "1000265" -> "1000270" 
  "1000267" -> "1000265" 
  "1000270" -> "1000146" 
  "1000270" -> "1000161" 
  "1000270" -> "1000257" 
  "1000270" -> "1000275" 
  "1000274" -> "1000295" 
  "1000274" -> "1000280" 
  "1000275" -> "1000274" 
  "1000280" -> "1000285" 
  "1000283" -> "1000288" 
  "1000285" -> "1000283" 
  "1000288" -> "1000146" 
  "1000288" -> "1000161" 
  "1000288" -> "1000257" 
  "1000288" -> "1000275" 
  "1000288" -> "1000295" 
  "1000293" -> "1000298" 
  "1000293" -> "1000300" 
  "1000294" -> "1000293" 
  "1000295" -> "1000294" 
  "1000298" -> "1000304" 
  "1000300" -> "1000304" 
  "1000109" -> "1000121" 
}
