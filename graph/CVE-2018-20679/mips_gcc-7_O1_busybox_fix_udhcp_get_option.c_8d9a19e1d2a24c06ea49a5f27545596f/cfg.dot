digraph udhcp_get_option {  
"1000115" [label = "(<operator>.assignment,v2 = a1 + 240)" ]
"1000117" [label = "(<operator>.addition,a1 + 240)" ]
"1000120" [label = "(<operator>.assignment,v3 = 0)" ]
"1000123" [label = "(<operator>.assignment,v4 = 388)" ]
"1000132" [label = "(<operator>.assignment,v6 = *v2)" ]
"1000134" [label = "(<operator>.indirection,*v2)" ]
"1000137" [label = "(<operator>.indirection,*v2)" ]
"1000140" [label = "(<operator>.preDecrement,--v4)" ]
"1000142" [label = "(<operator>.preIncrement,++v2)" ]
"1000146" [label = "(<operator>.lessEqualsThan,v4 <= 0)" ]
"1000151" [label = "(<operator>.notEquals,v6 != 255)" ]
"1000156" [label = "(<operator>.equals,(v3 & 0x101) == 1)" ]
"1000157" [label = "(<operator>.and,v3 & 0x101)" ]
"1000162" [label = "(<operators>.assignmentOr,v3 |= 0x101u)" ]
"1000165" [label = "(<operator>.assignment,v2 = a1 + 108)" ]
"1000167" [label = "(<operator>.addition,a1 + 108)" ]
"1000170" [label = "(<operator>.assignment,v4 = 128)" ]
"1000176" [label = "(<operator>.notEquals,(v3 & 0x202) != 2)" ]
"1000177" [label = "(<operator>.and,v3 & 0x202)" ]
"1000183" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 3)" ]
"1000184" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000185" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000188" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000191" [label = "(RETURN,return 0;,return 0;)" ]
"1000193" [label = "(<operators>.assignmentOr,v3 |= 0x202u)" ]
"1000196" [label = "(<operator>.assignment,v2 = a1 + 44)" ]
"1000198" [label = "(<operator>.addition,a1 + 44)" ]
"1000201" [label = "(<operator>.assignment,v4 = 64)" ]
"1000205" [label = "(<operator>.lessThan,v4 < 2)" ]
"1000209" [label = "(<operator>.assignment,v7 = v2[1] + 2)" ]
"1000211" [label = "(<operator>.addition,v2[1] + 2)" ]
"1000212" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000216" [label = "(<operator>.assignmentMinus,v4 -= v7)" ]
"1000220" [label = "(<operator>.lessThan,v4 < 0)" ]
"1000225" [label = "(<operator>.notEquals,v6 != a2)" ]
"1000230" [label = "(<operator>.logicalAnd,v6 == 52 && v7 >= 3)" ]
"1000231" [label = "(<operator>.equals,v6 == 52)" ]
"1000234" [label = "(<operator>.greaterEqualsThan,v7 >= 3)" ]
"1000237" [label = "(<operators>.assignmentOr,v3 |= v2[2])" ]
"1000239" [label = "(<operator>.indirectIndexAccess,v2[2])" ]
"1000242" [label = "(<operator>.assignmentPlus,v2 += v7)" ]
"1000247" [label = "(<operator>.logicalNot,!v2[1])" ]
"1000248" [label = "(<operator>.indirectIndexAccess,v2[1])" ]
"1000253" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000255" [label = "(RETURN,return 0;,return 0;)" ]
"1000257" [label = "(log_option,log_option(\"option found\", v2))" ]
"1000260" [label = "(RETURN,return v2 + 2;,return v2 + 2;)" ]
"1000261" [label = "(<operator>.addition,v2 + 2)" ]
"1000106" [label = "(METHOD,udhcp_get_option)" ]
"1000264" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000115" -> "1000120" 
  "1000117" -> "1000115" 
  "1000120" -> "1000123" 
  "1000123" -> "1000134" 
  "1000123" -> "1000151" 
  "1000123" -> "1000205" 
  "1000132" -> "1000137" 
  "1000134" -> "1000132" 
  "1000137" -> "1000151" 
  "1000137" -> "1000205" 
  "1000137" -> "1000140" 
  "1000140" -> "1000142" 
  "1000142" -> "1000146" 
  "1000146" -> "1000134" 
  "1000146" -> "1000151" 
  "1000146" -> "1000253" 
  "1000151" -> "1000205" 
  "1000151" -> "1000157" 
  "1000156" -> "1000162" 
  "1000156" -> "1000177" 
  "1000157" -> "1000156" 
  "1000162" -> "1000167" 
  "1000165" -> "1000170" 
  "1000167" -> "1000165" 
  "1000170" -> "1000134" 
  "1000170" -> "1000151" 
  "1000170" -> "1000205" 
  "1000176" -> "1000185" 
  "1000176" -> "1000193" 
  "1000177" -> "1000176" 
  "1000183" -> "1000188" 
  "1000183" -> "1000191" 
  "1000184" -> "1000183" 
  "1000185" -> "1000184" 
  "1000188" -> "1000191" 
  "1000191" -> "1000264" 
  "1000193" -> "1000198" 
  "1000196" -> "1000201" 
  "1000198" -> "1000196" 
  "1000201" -> "1000134" 
  "1000201" -> "1000151" 
  "1000201" -> "1000205" 
  "1000205" -> "1000253" 
  "1000205" -> "1000212" 
  "1000209" -> "1000216" 
  "1000211" -> "1000209" 
  "1000212" -> "1000211" 
  "1000216" -> "1000220" 
  "1000220" -> "1000253" 
  "1000220" -> "1000225" 
  "1000225" -> "1000231" 
  "1000225" -> "1000248" 
  "1000230" -> "1000239" 
  "1000230" -> "1000242" 
  "1000231" -> "1000230" 
  "1000231" -> "1000234" 
  "1000234" -> "1000230" 
  "1000237" -> "1000242" 
  "1000239" -> "1000237" 
  "1000242" -> "1000146" 
  "1000247" -> "1000253" 
  "1000247" -> "1000257" 
  "1000248" -> "1000247" 
  "1000253" -> "1000255" 
  "1000255" -> "1000264" 
  "1000257" -> "1000261" 
  "1000260" -> "1000264" 
  "1000261" -> "1000260" 
  "1000106" -> "1000117" 
}
