digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v2 = 388)" ]
"1000120" [label = "(<operator>.assignment,v3 = a1 + 240)" ]
"1000122" [label = "(<operator>.addition,a1 + 240)" ]
"1000125" [label = "(<operator>.assignment,v4 = 0)" ]
"1000134" [label = "(<operator>.assignment,v7 = *v3)" ]
"1000136" [label = "(<operator>.indirection,*v3)" ]
"1000139" [label = "(<operator>.indirection,*v3)" ]
"1000142" [label = "(<operator>.preDecrement,--v2)" ]
"1000144" [label = "(<operator>.preIncrement,++v3)" ]
"1000148" [label = "(<operator>.logicalNot,!v2)" ]
"1000152" [label = "(<operator>.notEquals,v7 != 255)" ]
"1000157" [label = "(<operator>.equals,(v4 & 0x101) == 1)" ]
"1000158" [label = "(<operator>.and,v4 & 0x101)" ]
"1000163" [label = "(<operators>.assignmentOr,v4 |= 0x101u)" ]
"1000166" [label = "(<operator>.assignment,v3 = a1 + 108)" ]
"1000168" [label = "(<operator>.addition,a1 + 108)" ]
"1000171" [label = "(<operator>.assignment,v2 = 128)" ]
"1000177" [label = "(<operator>.notEquals,(v4 & 0x202) != 2)" ]
"1000178" [label = "(<operator>.and,v4 & 0x202)" ]
"1000184" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000185" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000186" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000189" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000192" [label = "(RETURN,return 0;,return 0;)" ]
"1000194" [label = "(<operators>.assignmentOr,v4 |= 0x202u)" ]
"1000197" [label = "(<operator>.assignment,v3 = a1 + 44)" ]
"1000199" [label = "(<operator>.addition,a1 + 44)" ]
"1000202" [label = "(<operator>.assignment,v2 = 64)" ]
"1000206" [label = "(<operator>.logicalOr,v2 == 1 || (v5 = v3[1] + 2, v2 -= v5, v2 < 0))" ]
"1000207" [label = "(<operator>.equals,v2 == 1)" ]
"1000211" [label = "(<operator>.assignment,v5 = v3[1] + 2)" ]
"1000213" [label = "(<operator>.addition,v3[1] + 2)" ]
"1000214" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000219" [label = "(<operator>.assignmentMinus,v2 -= v5)" ]
"1000222" [label = "(<operator>.lessThan,v2 < 0)" ]
"1000227" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000229" [label = "(RETURN,return 0;,return 0;)" ]
"1000232" [label = "(<operator>.notEquals,a2 != v7)" ]
"1000236" [label = "(<operator>.assignment,v6 = v5 != 2)" ]
"1000238" [label = "(<operator>.notEquals,v5 != 2)" ]
"1000242" [label = "(<operator>.notEquals,v7 != 52)" ]
"1000245" [label = "(<operator>.assignment,v6 = 0)" ]
"1000250" [label = "(<operator>.assignment,v7 = v3[2])" ]
"1000252" [label = "(<operator>.indirectIndexAccess,v3[2])" ]
"1000255" [label = "(<operator>.assignmentPlus,v3 += v5)" ]
"1000260" [label = "(<operators>.assignmentOr,v4 |= v7)" ]
"1000265" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 1)" ]
"1000266" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000267" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000270" [label = "(log_option_part_0,log_option_part_0(\"option found\", v3))" ]
"1000273" [label = "(RETURN,return v3 + 2;,return v3 + 2;)" ]
"1000274" [label = "(<operator>.addition,v3 + 2)" ]
"1000107" [label = "(METHOD,udhcp_get_option)" ]
"1000277" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000117" -> "1000122" 
  "1000120" -> "1000125" 
  "1000122" -> "1000120" 
  "1000125" -> "1000136" 
  "1000125" -> "1000152" 
  "1000125" -> "1000207" 
  "1000134" -> "1000139" 
  "1000136" -> "1000134" 
  "1000139" -> "1000152" 
  "1000139" -> "1000207" 
  "1000139" -> "1000142" 
  "1000142" -> "1000144" 
  "1000144" -> "1000148" 
  "1000148" -> "1000136" 
  "1000148" -> "1000152" 
  "1000148" -> "1000227" 
  "1000152" -> "1000207" 
  "1000152" -> "1000158" 
  "1000157" -> "1000163" 
  "1000157" -> "1000178" 
  "1000158" -> "1000157" 
  "1000163" -> "1000168" 
  "1000166" -> "1000171" 
  "1000168" -> "1000166" 
  "1000171" -> "1000136" 
  "1000171" -> "1000152" 
  "1000171" -> "1000207" 
  "1000177" -> "1000186" 
  "1000177" -> "1000194" 
  "1000178" -> "1000177" 
  "1000184" -> "1000189" 
  "1000184" -> "1000192" 
  "1000185" -> "1000184" 
  "1000186" -> "1000185" 
  "1000189" -> "1000192" 
  "1000192" -> "1000277" 
  "1000194" -> "1000199" 
  "1000197" -> "1000202" 
  "1000199" -> "1000197" 
  "1000202" -> "1000136" 
  "1000202" -> "1000152" 
  "1000202" -> "1000207" 
  "1000206" -> "1000227" 
  "1000206" -> "1000232" 
  "1000207" -> "1000206" 
  "1000207" -> "1000214" 
  "1000211" -> "1000219" 
  "1000213" -> "1000211" 
  "1000214" -> "1000213" 
  "1000219" -> "1000222" 
  "1000222" -> "1000206" 
  "1000227" -> "1000229" 
  "1000229" -> "1000277" 
  "1000232" -> "1000267" 
  "1000232" -> "1000238" 
  "1000236" -> "1000242" 
  "1000238" -> "1000236" 
  "1000242" -> "1000245" 
  "1000242" -> "1000252" 
  "1000242" -> "1000255" 
  "1000245" -> "1000252" 
  "1000245" -> "1000255" 
  "1000250" -> "1000255" 
  "1000252" -> "1000250" 
  "1000255" -> "1000260" 
  "1000255" -> "1000148" 
  "1000260" -> "1000148" 
  "1000265" -> "1000270" 
  "1000265" -> "1000274" 
  "1000266" -> "1000265" 
  "1000267" -> "1000266" 
  "1000270" -> "1000274" 
  "1000273" -> "1000277" 
  "1000274" -> "1000273" 
  "1000107" -> "1000117" 
}
