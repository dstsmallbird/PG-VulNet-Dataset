digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v8 = 0)" ]
"1000120" [label = "(<operator>.assignment,v10 = a1 + 240)" ]
"1000122" [label = "(<operator>.addition,a1 + 240)" ]
"1000126" [label = "(<operator>.assignment,i = 388)" ]
"1000129" [label = "(<operator>.assignment,i = 64)" ]
"1000143" [label = "(<operator>.lessEqualsThan,i <= 0)" ]
"1000148" [label = "(bb_error_msg,bb_error_msg((unsigned int)\"bad packet, malformed option field\", a2, a3, a4, a5, a6))" ]
"1000149" [label = "(<operator>.cast,(unsigned int)\"bad packet, malformed option field\")" ]
"1000150" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000159" [label = "(<operator>.indirection,*v10)" ]
"1000162" [label = "(<operator>.preDecrement,--i)" ]
"1000164" [label = "(<operator>.preIncrement,++v10)" ]
"1000167" [label = "(<operator>.equals,*v10 == 0xFF)" ]
"1000168" [label = "(<operator>.indirection,*v10)" ]
"1000173" [label = "(<operator>.lessEqualsThan,i <= 1)" ]
"1000177" [label = "(<operator>.assignment,v9 = v10[1] + 2)" ]
"1000179" [label = "(<operator>.addition,v10[1] + 2)" ]
"1000180" [label = "(<operator>.indirectIndexAccess,v10[1])" ]
"1000184" [label = "(<operator>.assignmentMinus,i -= v9)" ]
"1000188" [label = "(<operator>.lessThan,i < 0)" ]
"1000193" [label = "(<operator>.equals,*v10 == a2)" ]
"1000194" [label = "(<operator>.indirection,*v10)" ]
"1000198" [label = "(log_option,log_option(\"option found\", v10))" ]
"1000201" [label = "(RETURN,return v10 + 2;,return v10 + 2;)" ]
"1000202" [label = "(<operator>.addition,v10 + 2)" ]
"1000206" [label = "(<operator>.logicalAnd,*v10 == 52 && v9 > 2)" ]
"1000207" [label = "(<operator>.equals,*v10 == 52)" ]
"1000208" [label = "(<operator>.indirection,*v10)" ]
"1000211" [label = "(<operator>.greaterThan,v9 > 2)" ]
"1000214" [label = "(<operators>.assignmentOr,v8 |= v10[2])" ]
"1000216" [label = "(<operator>.indirectIndexAccess,v10[2])" ]
"1000219" [label = "(<operator>.assignmentPlus,v10 += v9)" ]
"1000223" [label = "(<operator>.notEquals,(v8 & 0x101) != 1)" ]
"1000224" [label = "(<operator>.and,v8 & 0x101)" ]
"1000229" [label = "(<operators>.assignmentOr,v8 |= 0x101u)" ]
"1000232" [label = "(<operator>.assignment,v10 = a1 + 108)" ]
"1000234" [label = "(<operator>.addition,a1 + 108)" ]
"1000237" [label = "(<operator>.assignment,i = 128)" ]
"1000241" [label = "(<operator>.notEquals,(v8 & 0x202) != 2)" ]
"1000242" [label = "(<operator>.and,v8 & 0x202)" ]
"1000247" [label = "(<operators>.assignmentOr,v8 |= 0x202u)" ]
"1000250" [label = "(<operator>.assignment,v10 = a1 + 44)" ]
"1000252" [label = "(<operator>.addition,a1 + 44)" ]
"1000256" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000257" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000258" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000261" [label = "(bb_error_msg,bb_error_msg((unsigned int)\"option 0x%02x not found\", a2, a3, a4, a5, a6))" ]
"1000262" [label = "(<operator>.cast,(unsigned int)\"option 0x%02x not found\")" ]
"1000263" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000105" [label = "(METHOD,udhcp_get_option)" ]
"1000271" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000117" -> "1000122" 
  "1000120" -> "1000126" 
  "1000122" -> "1000120" 
  "1000126" -> "1000143" 
  "1000126" -> "1000168" 
  "1000126" -> "1000224" 
  "1000126" -> "1000242" 
  "1000129" -> "1000143" 
  "1000129" -> "1000168" 
  "1000129" -> "1000224" 
  "1000129" -> "1000242" 
  "1000143" -> "1000150" 
  "1000143" -> "1000159" 
  "1000148" -> "1000159" 
  "1000149" -> "1000148" 
  "1000150" -> "1000149" 
  "1000159" -> "1000258" 
  "1000159" -> "1000168" 
  "1000159" -> "1000224" 
  "1000159" -> "1000242" 
  "1000159" -> "1000162" 
  "1000162" -> "1000164" 
  "1000164" -> "1000143" 
  "1000164" -> "1000168" 
  "1000167" -> "1000258" 
  "1000167" -> "1000224" 
  "1000167" -> "1000242" 
  "1000167" -> "1000173" 
  "1000168" -> "1000167" 
  "1000173" -> "1000150" 
  "1000173" -> "1000180" 
  "1000177" -> "1000184" 
  "1000179" -> "1000177" 
  "1000180" -> "1000179" 
  "1000184" -> "1000188" 
  "1000188" -> "1000150" 
  "1000188" -> "1000194" 
  "1000193" -> "1000198" 
  "1000193" -> "1000208" 
  "1000194" -> "1000193" 
  "1000198" -> "1000202" 
  "1000201" -> "1000271" 
  "1000202" -> "1000201" 
  "1000206" -> "1000216" 
  "1000206" -> "1000219" 
  "1000207" -> "1000206" 
  "1000207" -> "1000211" 
  "1000208" -> "1000207" 
  "1000211" -> "1000206" 
  "1000214" -> "1000219" 
  "1000216" -> "1000214" 
  "1000219" -> "1000143" 
  "1000219" -> "1000168" 
  "1000219" -> "1000224" 
  "1000223" -> "1000258" 
  "1000223" -> "1000242" 
  "1000223" -> "1000229" 
  "1000224" -> "1000223" 
  "1000229" -> "1000234" 
  "1000232" -> "1000237" 
  "1000234" -> "1000232" 
  "1000237" -> "1000143" 
  "1000237" -> "1000168" 
  "1000237" -> "1000224" 
  "1000237" -> "1000242" 
  "1000241" -> "1000258" 
  "1000241" -> "1000247" 
  "1000242" -> "1000241" 
  "1000247" -> "1000252" 
  "1000250" -> "1000129" 
  "1000252" -> "1000250" 
  "1000256" -> "1000263" 
  "1000256" -> "1000271" 
  "1000257" -> "1000256" 
  "1000258" -> "1000257" 
  "1000261" -> "1000271" 
  "1000262" -> "1000261" 
  "1000263" -> "1000262" 
  "1000105" -> "1000117" 
}
