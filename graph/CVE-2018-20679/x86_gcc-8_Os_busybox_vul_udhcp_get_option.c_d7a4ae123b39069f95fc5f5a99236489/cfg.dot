digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v2 = 0)" ]
"1000120" [label = "(<operator>.assignment,v3 = a1 + 240)" ]
"1000122" [label = "(<operator>.addition,a1 + 240)" ]
"1000125" [label = "(<operator>.assignment,v4 = 388)" ]
"1000134" [label = "(<operator>.assignment,v10 = *v3)" ]
"1000136" [label = "(<operator>.indirection,*v3)" ]
"1000139" [label = "(<operator>.indirection,*v3)" ]
"1000142" [label = "(<operator>.preDecrement,--v4)" ]
"1000144" [label = "(<operator>.preIncrement,++v3)" ]
"1000148" [label = "(<operator>.logicalNot,!v4)" ]
"1000152" [label = "(<operator>.notEquals,v10 != 0xFF)" ]
"1000157" [label = "(<operator>.equals,(v2 & 0x101) == 1)" ]
"1000158" [label = "(<operator>.and,v2 & 0x101)" ]
"1000163" [label = "(<operators>.assignmentOr,v2 |= 0x101u)" ]
"1000166" [label = "(<operator>.assignment,v4 = 128)" ]
"1000169" [label = "(<operator>.assignment,v3 = a1 + 108)" ]
"1000171" [label = "(<operator>.addition,a1 + 108)" ]
"1000177" [label = "(<operator>.notEquals,(v2 & 0x202) != 2)" ]
"1000178" [label = "(<operator>.and,v2 & 0x202)" ]
"1000183" [label = "(<operator>.assignment,v5 = 0)" ]
"1000187" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 2)" ]
"1000188" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000189" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000192" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\"))" ]
"1000194" [label = "(RETURN,return (unsigned __int8 *)v5;,return (unsigned __int8 *)v5;)" ]
"1000195" [label = "(<operator>.cast,(unsigned __int8 *)v5)" ]
"1000196" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000198" [label = "(<operators>.assignmentOr,v2 |= 0x202u)" ]
"1000201" [label = "(<operator>.assignment,v4 = 64)" ]
"1000204" [label = "(<operator>.assignment,v3 = a1 + 44)" ]
"1000206" [label = "(<operator>.addition,a1 + 44)" ]
"1000210" [label = "(<operator>.logicalOr,v4 == 1 || (v6 = v3[1] + 2, v4 -= v6, v4 < 0))" ]
"1000211" [label = "(<operator>.equals,v4 == 1)" ]
"1000215" [label = "(<operator>.assignment,v6 = v3[1] + 2)" ]
"1000217" [label = "(<operator>.addition,v3[1] + 2)" ]
"1000218" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000223" [label = "(<operator>.assignmentMinus,v4 -= v6)" ]
"1000226" [label = "(<operator>.lessThan,v4 < 0)" ]
"1000231" [label = "(<operator>.assignment,v5 = 0)" ]
"1000234" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000236" [label = "(RETURN,return (unsigned __int8 *)v5;,return (unsigned __int8 *)v5;)" ]
"1000237" [label = "(<operator>.cast,(unsigned __int8 *)v5)" ]
"1000238" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000241" [label = "(<operator>.notEquals,v10 != a2)" ]
"1000246" [label = "(<operator>.logicalAnd,v3[1] && v10 == 52)" ]
"1000247" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000250" [label = "(<operator>.equals,v10 == 52)" ]
"1000253" [label = "(<operators>.assignmentOr,v2 |= v3[2])" ]
"1000255" [label = "(<operator>.indirectIndexAccess,v3[2])" ]
"1000258" [label = "(<operator>.assignmentPlus,v3 += v6)" ]
"1000263" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 1)" ]
"1000264" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000265" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000268" [label = "(log_option_part_0,log_option_part_0(v2, v3))" ]
"1000271" [label = "(RETURN,return v3 + 2;,return v3 + 2;)" ]
"1000272" [label = "(<operator>.addition,v3 + 2)" ]
"1000107" [label = "(METHOD,udhcp_get_option)" ]
"1000275" [label = "(METHOD_RETURN,__usercall)" ]
  "1000117" -> "1000122" 
  "1000120" -> "1000125" 
  "1000122" -> "1000120" 
  "1000125" -> "1000136" 
  "1000125" -> "1000152" 
  "1000125" -> "1000211" 
  "1000134" -> "1000139" 
  "1000136" -> "1000134" 
  "1000139" -> "1000152" 
  "1000139" -> "1000211" 
  "1000139" -> "1000142" 
  "1000142" -> "1000144" 
  "1000144" -> "1000148" 
  "1000148" -> "1000136" 
  "1000148" -> "1000152" 
  "1000148" -> "1000231" 
  "1000152" -> "1000211" 
  "1000152" -> "1000158" 
  "1000157" -> "1000163" 
  "1000157" -> "1000178" 
  "1000158" -> "1000157" 
  "1000163" -> "1000166" 
  "1000166" -> "1000171" 
  "1000169" -> "1000136" 
  "1000169" -> "1000152" 
  "1000169" -> "1000211" 
  "1000171" -> "1000169" 
  "1000177" -> "1000183" 
  "1000177" -> "1000198" 
  "1000178" -> "1000177" 
  "1000183" -> "1000189" 
  "1000187" -> "1000196" 
  "1000187" -> "1000192" 
  "1000188" -> "1000187" 
  "1000189" -> "1000188" 
  "1000192" -> "1000196" 
  "1000194" -> "1000275" 
  "1000195" -> "1000194" 
  "1000196" -> "1000195" 
  "1000198" -> "1000201" 
  "1000201" -> "1000206" 
  "1000204" -> "1000136" 
  "1000204" -> "1000152" 
  "1000204" -> "1000211" 
  "1000206" -> "1000204" 
  "1000210" -> "1000231" 
  "1000210" -> "1000241" 
  "1000211" -> "1000210" 
  "1000211" -> "1000218" 
  "1000215" -> "1000223" 
  "1000217" -> "1000215" 
  "1000218" -> "1000217" 
  "1000223" -> "1000226" 
  "1000226" -> "1000210" 
  "1000231" -> "1000234" 
  "1000234" -> "1000238" 
  "1000236" -> "1000275" 
  "1000237" -> "1000236" 
  "1000238" -> "1000237" 
  "1000241" -> "1000265" 
  "1000241" -> "1000247" 
  "1000246" -> "1000255" 
  "1000246" -> "1000258" 
  "1000247" -> "1000246" 
  "1000247" -> "1000250" 
  "1000250" -> "1000246" 
  "1000253" -> "1000258" 
  "1000255" -> "1000253" 
  "1000258" -> "1000148" 
  "1000263" -> "1000268" 
  "1000263" -> "1000272" 
  "1000264" -> "1000263" 
  "1000265" -> "1000264" 
  "1000268" -> "1000272" 
  "1000271" -> "1000275" 
  "1000272" -> "1000271" 
  "1000107" -> "1000117" 
}
