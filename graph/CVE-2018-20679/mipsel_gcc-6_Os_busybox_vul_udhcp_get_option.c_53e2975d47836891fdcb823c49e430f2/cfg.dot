digraph udhcp_get_option {  
"1000117" [label = "(<operator>.assignment,v2 = 0)" ]
"1000120" [label = "(<operator>.assignment,v3 = 388)" ]
"1000123" [label = "(<operator>.assignment,v4 = a1 + 240)" ]
"1000125" [label = "(<operator>.addition,a1 + 240)" ]
"1000135" [label = "(<operator>.assignment,i = *v4)" ]
"1000137" [label = "(<operator>.indirection,*v4)" ]
"1000139" [label = "(<operator>.assignment,i = *v4)" ]
"1000141" [label = "(<operator>.indirection,*v4)" ]
"1000145" [label = "(<operator>.logicalNot,!i)" ]
"1000148" [label = "(<operator>.preDecrement,--v3)" ]
"1000150" [label = "(<operator>.preIncrement,++v4)" ]
"1000154" [label = "(<operator>.equals,i == 255)" ]
"1000159" [label = "(<operator>.logicalOr,v3 == 1 || (v8 = v4[1] + 2, v3 -= v8, v3 < 0))" ]
"1000160" [label = "(<operator>.equals,v3 == 1)" ]
"1000164" [label = "(<operator>.assignment,v8 = v4[1] + 2)" ]
"1000166" [label = "(<operator>.addition,v4[1] + 2)" ]
"1000167" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000172" [label = "(<operator>.assignmentMinus,v3 -= v8)" ]
"1000175" [label = "(<operator>.lessThan,v3 < 0)" ]
"1000180" [label = "(<operator>.assignment,v6 = 0)" ]
"1000183" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000185" [label = "(RETURN,return (unsigned __int8 *)v6;,return (unsigned __int8 *)v6;)" ]
"1000186" [label = "(<operator>.cast,(unsigned __int8 *)v6)" ]
"1000187" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000190" [label = "(<operator>.equals,a2 == i)" ]
"1000195" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 2)" ]
"1000196" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000197" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000200" [label = "(log_option_part_0,log_option_part_0(\"option found\", v4))" ]
"1000203" [label = "(RETURN,return v4 + 2;,return v4 + 2;)" ]
"1000204" [label = "(<operator>.addition,v4 + 2)" ]
"1000208" [label = "(<operator>.equals,i == 52)" ]
"1000213" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000217" [label = "(<operators>.assignmentOr,v2 |= v4[2])" ]
"1000219" [label = "(<operator>.indirectIndexAccess,v4[2])" ]
"1000222" [label = "(<operator>.assignmentPlus,v4 += v8)" ]
"1000227" [label = "(<operator>.assignmentPlus,v4 += 2)" ]
"1000232" [label = "(<operator>.assignmentPlus,v4 += v8)" ]
"1000237" [label = "(<operator>.logicalNot,!v3)" ]
"1000241" [label = "(<operator>.equals,(v2 & 0x101) == 1)" ]
"1000242" [label = "(<operator>.and,v2 & 0x101)" ]
"1000247" [label = "(<operators>.assignmentOr,v2 |= 0x101u)" ]
"1000250" [label = "(<operator>.assignment,v4 = a1 + 108)" ]
"1000252" [label = "(<operator>.addition,a1 + 108)" ]
"1000255" [label = "(<operator>.assignment,v3 = 128)" ]
"1000261" [label = "(<operator>.equals,(v2 & 0x202) == 2)" ]
"1000262" [label = "(<operator>.and,v2 & 0x202)" ]
"1000267" [label = "(<operators>.assignmentOr,v2 |= 0x202u)" ]
"1000270" [label = "(<operator>.assignment,v4 = a1 + 44)" ]
"1000272" [label = "(<operator>.addition,a1 + 44)" ]
"1000275" [label = "(<operator>.assignment,v3 = 64)" ]
"1000280" [label = "(<operator>.assignment,v6 = 0)" ]
"1000284" [label = "(<operator>.greaterEqualsThan,(unsigned int)dhcp_verbose >= 3)" ]
"1000285" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000286" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000289" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000292" [label = "(RETURN,return (unsigned __int8 *)v6;,return (unsigned __int8 *)v6;)" ]
"1000293" [label = "(<operator>.cast,(unsigned __int8 *)v6)" ]
"1000294" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000107" [label = "(METHOD,udhcp_get_option)" ]
"1000296" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000117" -> "1000120" 
  "1000120" -> "1000125" 
  "1000123" -> "1000137" 
  "1000123" -> "1000262" 
  "1000123" -> "1000280" 
  "1000125" -> "1000123" 
  "1000135" -> "1000145" 
  "1000137" -> "1000135" 
  "1000139" -> "1000145" 
  "1000141" -> "1000139" 
  "1000145" -> "1000148" 
  "1000145" -> "1000154" 
  "1000148" -> "1000150" 
  "1000150" -> "1000237" 
  "1000154" -> "1000242" 
  "1000154" -> "1000262" 
  "1000154" -> "1000280" 
  "1000154" -> "1000160" 
  "1000159" -> "1000180" 
  "1000159" -> "1000190" 
  "1000160" -> "1000159" 
  "1000160" -> "1000167" 
  "1000164" -> "1000172" 
  "1000166" -> "1000164" 
  "1000167" -> "1000166" 
  "1000172" -> "1000175" 
  "1000175" -> "1000159" 
  "1000180" -> "1000183" 
  "1000183" -> "1000187" 
  "1000185" -> "1000296" 
  "1000186" -> "1000185" 
  "1000187" -> "1000186" 
  "1000190" -> "1000197" 
  "1000190" -> "1000208" 
  "1000195" -> "1000200" 
  "1000195" -> "1000204" 
  "1000196" -> "1000195" 
  "1000197" -> "1000196" 
  "1000200" -> "1000204" 
  "1000203" -> "1000296" 
  "1000204" -> "1000203" 
  "1000208" -> "1000213" 
  "1000208" -> "1000232" 
  "1000213" -> "1000219" 
  "1000213" -> "1000227" 
  "1000217" -> "1000222" 
  "1000219" -> "1000217" 
  "1000222" -> "1000237" 
  "1000227" -> "1000237" 
  "1000232" -> "1000237" 
  "1000237" -> "1000180" 
  "1000237" -> "1000141" 
  "1000241" -> "1000247" 
  "1000241" -> "1000262" 
  "1000241" -> "1000280" 
  "1000242" -> "1000241" 
  "1000247" -> "1000252" 
  "1000250" -> "1000255" 
  "1000252" -> "1000250" 
  "1000255" -> "1000137" 
  "1000255" -> "1000262" 
  "1000255" -> "1000280" 
  "1000255" -> "1000137" 
  "1000255" -> "1000262" 
  "1000261" -> "1000267" 
  "1000261" -> "1000280" 
  "1000262" -> "1000261" 
  "1000267" -> "1000272" 
  "1000270" -> "1000275" 
  "1000272" -> "1000270" 
  "1000275" -> "1000137" 
  "1000275" -> "1000262" 
  "1000275" -> "1000280" 
  "1000280" -> "1000286" 
  "1000284" -> "1000294" 
  "1000284" -> "1000289" 
  "1000285" -> "1000284" 
  "1000286" -> "1000285" 
  "1000289" -> "1000294" 
  "1000292" -> "1000296" 
  "1000293" -> "1000292" 
  "1000294" -> "1000293" 
  "1000107" -> "1000117" 
}
