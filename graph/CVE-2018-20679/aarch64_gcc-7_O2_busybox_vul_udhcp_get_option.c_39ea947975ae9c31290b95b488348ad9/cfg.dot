digraph udhcp_get_option {  
"1000121" [label = "(<operator>.assignment,v2 = 0)" ]
"1000124" [label = "(<operator>.assignment,v3 = 388)" ]
"1000127" [label = "(<operator>.assignment,v4 = a1 + 240)" ]
"1000129" [label = "(<operator>.addition,a1 + 240)" ]
"1000144" [label = "(<operator>.assignment,v5 = *v4)" ]
"1000146" [label = "(<operator>.indirection,*v4)" ]
"1000149" [label = "(<operator>.indirection,*v4)" ]
"1000152" [label = "(<operator>.preDecrement,--v3)" ]
"1000154" [label = "(<operator>.preIncrement,++v4)" ]
"1000157" [label = "(<operator>.logicalNot,!v3)" ]
"1000161" [label = "(<operator>.equals,v5 == 255)" ]
"1000166" [label = "(<operator>.equals,v3 == 1)" ]
"1000170" [label = "(<operator>.assignment,v6 = v4[1] + 2)" ]
"1000172" [label = "(<operator>.addition,v4[1] + 2)" ]
"1000173" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000177" [label = "(<operator>.assignmentMinus,v3 -= v6)" ]
"1000181" [label = "(<operator>.lessThan,v3 < 0)" ]
"1000186" [label = "(<operator>.equals,v5 == (_DWORD)a2)" ]
"1000188" [label = "(<operator>.cast,(_DWORD)a2)" ]
"1000189" [label = "(UNKNOWN,_DWORD,_DWORD)" ]
"1000193" [label = "(<operator>.greaterThan,(unsigned int)dhcp_verbose > 1)" ]
"1000194" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000195" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000198" [label = "(log_option_part_0,log_option_part_0(\"option found\", v4))" ]
"1000201" [label = "(RETURN,return v4 + 2;,return v4 + 2;)" ]
"1000202" [label = "(<operator>.addition,v4 + 2)" ]
"1000206" [label = "(<operator>.equals,v5 == 52)" ]
"1000209" [label = "(<operator>.assignment,v7 = v6 == 2)" ]
"1000211" [label = "(<operator>.equals,v6 == 2)" ]
"1000215" [label = "(<operator>.assignment,v7 = 1)" ]
"1000221" [label = "(<operator>.assignmentPlus,v4 += v6)" ]
"1000226" [label = "(<operator>.assignment,v10 = v4[2])" ]
"1000228" [label = "(<operator>.indirectIndexAccess,v4[2])" ]
"1000231" [label = "(<operator>.assignmentPlus,v4 += v6)" ]
"1000234" [label = "(<operators>.assignmentOr,v2 |= v10)" ]
"1000238" [label = "(<operator>.logicalNot,!v3)" ]
"1000243" [label = "(bb_error_msg,bb_error_msg(\"bad packet, malformed option field\"))" ]
"1000245" [label = "(RETURN,return (unsigned __int8 *)v8;,return (unsigned __int8 *)v8;)" ]
"1000246" [label = "(<operator>.cast,(unsigned __int8 *)v8)" ]
"1000247" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000250" [label = "(<operator>.notEquals,(v2 & 0x101) != 1)" ]
"1000251" [label = "(<operator>.and,v2 & 0x101)" ]
"1000256" [label = "(<operators>.assignmentOr,v2 |= 0x101u)" ]
"1000259" [label = "(<operator>.assignment,v4 = a1 + 108)" ]
"1000261" [label = "(<operator>.addition,a1 + 108)" ]
"1000264" [label = "(<operator>.assignment,v3 = 128)" ]
"1000268" [label = "(<operator>.notEquals,(v2 & 0x202) != 2)" ]
"1000269" [label = "(<operator>.and,v2 & 0x202)" ]
"1000274" [label = "(<operators>.assignmentOr,v2 |= 0x202u)" ]
"1000277" [label = "(<operator>.assignment,v4 = a1 + 44)" ]
"1000279" [label = "(<operator>.addition,a1 + 44)" ]
"1000282" [label = "(<operator>.assignment,v3 = 64)" ]
"1000287" [label = "(<operator>.lessEqualsThan,(unsigned int)dhcp_verbose <= 2)" ]
"1000288" [label = "(<operator>.cast,(unsigned int)dhcp_verbose)" ]
"1000289" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000292" [label = "(RETURN,return (unsigned __int8 *)v8;,return (unsigned __int8 *)v8;)" ]
"1000293" [label = "(<operator>.cast,(unsigned __int8 *)v8)" ]
"1000294" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000296" [label = "(bb_error_msg,bb_error_msg(\"option 0x%02x not found\", a2))" ]
"1000109" [label = "(METHOD,udhcp_get_option)" ]
"1000300" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000121" -> "1000124" 
  "1000124" -> "1000129" 
  "1000127" -> "1000146" 
  "1000127" -> "1000161" 
  "1000127" -> "1000251" 
  "1000127" -> "1000269" 
  "1000127" -> "1000289" 
  "1000129" -> "1000127" 
  "1000144" -> "1000149" 
  "1000146" -> "1000144" 
  "1000149" -> "1000161" 
  "1000149" -> "1000251" 
  "1000149" -> "1000269" 
  "1000149" -> "1000289" 
  "1000149" -> "1000152" 
  "1000152" -> "1000154" 
  "1000154" -> "1000157" 
  "1000157" -> "1000146" 
  "1000157" -> "1000161" 
  "1000157" -> "1000243" 
  "1000161" -> "1000251" 
  "1000161" -> "1000269" 
  "1000161" -> "1000289" 
  "1000161" -> "1000166" 
  "1000166" -> "1000243" 
  "1000166" -> "1000173" 
  "1000170" -> "1000177" 
  "1000172" -> "1000170" 
  "1000173" -> "1000172" 
  "1000177" -> "1000181" 
  "1000181" -> "1000243" 
  "1000181" -> "1000189" 
  "1000186" -> "1000195" 
  "1000186" -> "1000206" 
  "1000188" -> "1000186" 
  "1000189" -> "1000188" 
  "1000193" -> "1000198" 
  "1000193" -> "1000202" 
  "1000194" -> "1000193" 
  "1000195" -> "1000194" 
  "1000198" -> "1000202" 
  "1000201" -> "1000300" 
  "1000202" -> "1000201" 
  "1000206" -> "1000211" 
  "1000206" -> "1000215" 
  "1000209" -> "1000221" 
  "1000209" -> "1000228" 
  "1000211" -> "1000209" 
  "1000215" -> "1000221" 
  "1000215" -> "1000228" 
  "1000221" -> "1000238" 
  "1000226" -> "1000231" 
  "1000228" -> "1000226" 
  "1000231" -> "1000234" 
  "1000234" -> "1000238" 
  "1000238" -> "1000146" 
  "1000238" -> "1000161" 
  "1000238" -> "1000251" 
  "1000238" -> "1000243" 
  "1000243" -> "1000247" 
  "1000245" -> "1000300" 
  "1000246" -> "1000245" 
  "1000247" -> "1000246" 
  "1000250" -> "1000269" 
  "1000250" -> "1000289" 
  "1000250" -> "1000256" 
  "1000251" -> "1000250" 
  "1000256" -> "1000261" 
  "1000259" -> "1000264" 
  "1000261" -> "1000259" 
  "1000264" -> "1000146" 
  "1000264" -> "1000161" 
  "1000264" -> "1000251" 
  "1000264" -> "1000269" 
  "1000268" -> "1000289" 
  "1000268" -> "1000274" 
  "1000269" -> "1000268" 
  "1000274" -> "1000279" 
  "1000277" -> "1000282" 
  "1000279" -> "1000277" 
  "1000282" -> "1000146" 
  "1000282" -> "1000161" 
  "1000282" -> "1000251" 
  "1000282" -> "1000269" 
  "1000282" -> "1000289" 
  "1000287" -> "1000294" 
  "1000287" -> "1000296" 
  "1000288" -> "1000287" 
  "1000289" -> "1000288" 
  "1000292" -> "1000300" 
  "1000293" -> "1000292" 
  "1000294" -> "1000293" 
  "1000296" -> "1000300" 
  "1000109" -> "1000121" 
}
