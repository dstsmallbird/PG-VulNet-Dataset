digraph do_rfc1035_name {  
"1000118" [label = "(<operator>.logicalAnd,a2 && *a2)" ]
"1000120" [label = "(<operator>.indirection,*a2)" ]
"1000123" [label = "(<operator>.assignment,v2 = (char)a2)" ]
"1000125" [label = "(<operator>.cast,(char)a2)" ]
"1000126" [label = "(UNKNOWN,char,char)" ]
"1000128" [label = "(<operator>.assignment,v3 = a2)" ]
"1000132" [label = "(<operator>.assignment,i = result + 1)" ]
"1000134" [label = "(<operator>.addition,result + 1)" ]
"1000137" [label = "(<operator>.preIncrement,++i)" ]
"1000140" [label = "(<operator>.assignment,v5 = (unsigned __int8)*v3)" ]
"1000142" [label = "(<operator>.cast,(unsigned __int8)*v3)" ]
"1000143" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000144" [label = "(<operator>.indirection,*v3)" ]
"1000146" [label = "(<operator>.assignment,v6 = (_BYTE)v3 - v2)" ]
"1000148" [label = "(<operator>.subtraction,(_BYTE)v3 - v2)" ]
"1000149" [label = "(<operator>.cast,(_BYTE)v3)" ]
"1000150" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000153" [label = "(<operator>.assignment,v7 = v5 == 0)" ]
"1000155" [label = "(<operator>.equals,v5 == 0)" ]
"1000159" [label = "(<operator>.indirection,*v3)" ]
"1000161" [label = "(<operator>.assignment,v7 = v5 == 46)" ]
"1000163" [label = "(<operator>.equals,v5 == 46)" ]
"1000166" [label = "(<operator>.assignment,a2 = v3++)" ]
"1000168" [label = "(<operator>.postIncrement,v3++)" ]
"1000173" [label = "(<operator>.assignment,*i = v5)" ]
"1000174" [label = "(<operator>.indirection,*i)" ]
"1000177" [label = "(<operator>.assignment,*result = v6)" ]
"1000178" [label = "(<operator>.indirection,*result)" ]
"1000182" [label = "(<operator>.indirection,*a2)" ]
"1000184" [label = "(<operator>.assignment,a2 = v3)" ]
"1000187" [label = "(<operator>.assignment,result = i)" ]
"1000190" [label = "(RETURN,return result;,return result;)" ]
"1000107" [label = "(METHOD,do_rfc1035_name)" ]
"1000192" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000118" -> "1000126" 
  "1000118" -> "1000190" 
  "1000120" -> "1000118" 
  "1000123" -> "1000128" 
  "1000125" -> "1000123" 
  "1000126" -> "1000125" 
  "1000128" -> "1000134" 
  "1000132" -> "1000143" 
  "1000134" -> "1000132" 
  "1000137" -> "1000143" 
  "1000140" -> "1000150" 
  "1000142" -> "1000140" 
  "1000143" -> "1000144" 
  "1000144" -> "1000142" 
  "1000146" -> "1000155" 
  "1000148" -> "1000146" 
  "1000149" -> "1000148" 
  "1000150" -> "1000149" 
  "1000153" -> "1000159" 
  "1000155" -> "1000153" 
  "1000159" -> "1000163" 
  "1000159" -> "1000168" 
  "1000161" -> "1000168" 
  "1000163" -> "1000161" 
  "1000166" -> "1000178" 
  "1000166" -> "1000190" 
  "1000166" -> "1000174" 
  "1000168" -> "1000166" 
  "1000173" -> "1000137" 
  "1000174" -> "1000173" 
  "1000177" -> "1000182" 
  "1000178" -> "1000177" 
  "1000182" -> "1000184" 
  "1000182" -> "1000187" 
  "1000184" -> "1000187" 
  "1000187" -> "1000118" 
  "1000187" -> "1000120" 
  "1000190" -> "1000192" 
  "1000107" -> "1000118" 
  "1000107" -> "1000120" 
}
