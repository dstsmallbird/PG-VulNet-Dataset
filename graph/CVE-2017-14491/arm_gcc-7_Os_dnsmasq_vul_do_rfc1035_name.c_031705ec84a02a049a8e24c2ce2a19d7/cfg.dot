digraph do_rfc1035_name {  
"1000118" [label = "(<operator>.logicalAnd,a2 && *a2)" ]
"1000120" [label = "(<operator>.indirection,*a2)" ]
"1000122" [label = "(<operator>.assignment,result = i)" ]
"1000126" [label = "(<operator>.assignment,v2 = (char)a2)" ]
"1000128" [label = "(<operator>.cast,(char)a2)" ]
"1000129" [label = "(UNKNOWN,char,char)" ]
"1000131" [label = "(<operator>.assignment,v3 = a2)" ]
"1000135" [label = "(<operator>.assignment,i = result + 1)" ]
"1000137" [label = "(<operator>.addition,result + 1)" ]
"1000140" [label = "(<operator>.preIncrement,++i)" ]
"1000143" [label = "(<operator>.assignment,v5 = (unsigned __int8)*v3)" ]
"1000145" [label = "(<operator>.cast,(unsigned __int8)*v3)" ]
"1000146" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000147" [label = "(<operator>.indirection,*v3)" ]
"1000149" [label = "(<operator>.assignment,v6 = (_BYTE)v3 - v2)" ]
"1000151" [label = "(<operator>.subtraction,(_BYTE)v3 - v2)" ]
"1000152" [label = "(<operator>.cast,(_BYTE)v3)" ]
"1000153" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000156" [label = "(<operator>.assignment,v7 = v5 == 0)" ]
"1000158" [label = "(<operator>.equals,v5 == 0)" ]
"1000162" [label = "(<operator>.indirection,*v3)" ]
"1000164" [label = "(<operator>.assignment,v7 = v5 == 46)" ]
"1000166" [label = "(<operator>.equals,v5 == 46)" ]
"1000169" [label = "(<operator>.assignment,a2 = v3++)" ]
"1000171" [label = "(<operator>.postIncrement,v3++)" ]
"1000176" [label = "(<operator>.assignment,*i = v5)" ]
"1000177" [label = "(<operator>.indirection,*i)" ]
"1000180" [label = "(<operator>.assignment,*result = v6)" ]
"1000181" [label = "(<operator>.indirection,*result)" ]
"1000185" [label = "(<operator>.indirection,*a2)" ]
"1000187" [label = "(<operator>.assignment,a2 = v3)" ]
"1000190" [label = "(RETURN,return result;,return result;)" ]
"1000107" [label = "(METHOD,do_rfc1035_name)" ]
"1000192" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000118" -> "1000129" 
  "1000118" -> "1000129" 
  "1000118" -> "1000190" 
  "1000120" -> "1000118" 
  "1000122" -> "1000118" 
  "1000122" -> "1000120" 
  "1000126" -> "1000131" 
  "1000128" -> "1000126" 
  "1000129" -> "1000128" 
  "1000131" -> "1000137" 
  "1000135" -> "1000146" 
  "1000137" -> "1000135" 
  "1000140" -> "1000146" 
  "1000143" -> "1000153" 
  "1000145" -> "1000143" 
  "1000146" -> "1000147" 
  "1000147" -> "1000145" 
  "1000149" -> "1000158" 
  "1000151" -> "1000149" 
  "1000152" -> "1000151" 
  "1000153" -> "1000152" 
  "1000156" -> "1000162" 
  "1000158" -> "1000156" 
  "1000162" -> "1000166" 
  "1000162" -> "1000171" 
  "1000164" -> "1000171" 
  "1000166" -> "1000164" 
  "1000169" -> "1000181" 
  "1000169" -> "1000190" 
  "1000169" -> "1000177" 
  "1000171" -> "1000169" 
  "1000176" -> "1000140" 
  "1000177" -> "1000176" 
  "1000180" -> "1000185" 
  "1000181" -> "1000180" 
  "1000185" -> "1000187" 
  "1000185" -> "1000122" 
  "1000187" -> "1000122" 
  "1000190" -> "1000192" 
  "1000107" -> "1000118" 
  "1000107" -> "1000120" 
}
