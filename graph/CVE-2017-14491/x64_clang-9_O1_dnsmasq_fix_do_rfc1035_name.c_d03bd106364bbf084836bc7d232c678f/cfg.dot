digraph do_rfc1035_name {  
"1000116" [label = "(<operator>.assignment,result = a1)" ]
"1000125" [label = "(<operator>.assignment,v4 = (_BYTE *)result)" ]
"1000127" [label = "(<operator>.cast,(_BYTE *)result)" ]
"1000128" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000131" [label = "(<operator>.logicalOr,!*a2 || a3 && result + 1 > a3)" ]
"1000132" [label = "(<operator>.logicalNot,!*a2)" ]
"1000133" [label = "(<operator>.indirection,*a2)" ]
"1000135" [label = "(<operator>.logicalAnd,a3 && result + 1 > a3)" ]
"1000137" [label = "(<operator>.greaterThan,result + 1 > a3)" ]
"1000138" [label = "(<operator>.addition,result + 1)" ]
"1000145" [label = "(<operator>.assignment,v6 = a2[i])" ]
"1000147" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000151" [label = "(<operator>.logicalOr,!v6 || v6 == 46)" ]
"1000152" [label = "(<operator>.logicalNot,!v6)" ]
"1000154" [label = "(<operator>.equals,v6 == 46)" ]
"1000159" [label = "(<operator>.logicalAnd,a3 && (unsigned __int64)&v4[i + 2] > a3)" ]
"1000161" [label = "(<operator>.greaterThan,(unsigned __int64)&v4[i + 2] > a3)" ]
"1000162" [label = "(<operator>.cast,(unsigned __int64)&v4[i + 2])" ]
"1000163" [label = "(UNKNOWN,unsigned __int64,unsigned __int64)" ]
"1000164" [label = "(<operator>.addressOf,&v4[i + 2])" ]
"1000165" [label = "(<operator>.indirectIndexAccess,v4[i + 2])" ]
"1000167" [label = "(<operator>.addition,i + 2)" ]
"1000171" [label = "(RETURN,return (__int64)&v4[i + 1];,return (__int64)&v4[i + 1];)" ]
"1000172" [label = "(<operator>.cast,(__int64)&v4[i + 1])" ]
"1000173" [label = "(UNKNOWN,__int64,__int64)" ]
"1000174" [label = "(<operator>.addressOf,&v4[i + 1])" ]
"1000175" [label = "(<operator>.indirectIndexAccess,v4[i + 1])" ]
"1000177" [label = "(<operator>.addition,i + 1)" ]
"1000180" [label = "(<operator>.assignment,v4[i + 1] = v6)" ]
"1000181" [label = "(<operator>.indirectIndexAccess,v4[i + 1])" ]
"1000183" [label = "(<operator>.addition,i + 1)" ]
"1000187" [label = "(<operator>.assignment,*v4 = i)" ]
"1000188" [label = "(<operator>.indirection,*v4)" ]
"1000191" [label = "(<operator>.assignment,v7 = (__int64)&a2[i + 1])" ]
"1000193" [label = "(<operator>.cast,(__int64)&a2[i + 1])" ]
"1000194" [label = "(UNKNOWN,__int64,__int64)" ]
"1000195" [label = "(<operator>.addressOf,&a2[i + 1])" ]
"1000196" [label = "(<operator>.indirectIndexAccess,a2[i + 1])" ]
"1000198" [label = "(<operator>.addition,i + 1)" ]
"1000202" [label = "(<operator>.logicalNot,!a2[i])" ]
"1000203" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000206" [label = "(<operator>.assignment,v7 = (__int64)&a2[i])" ]
"1000208" [label = "(<operator>.cast,(__int64)&a2[i])" ]
"1000209" [label = "(UNKNOWN,__int64,__int64)" ]
"1000210" [label = "(<operator>.addressOf,&a2[i])" ]
"1000211" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000214" [label = "(<operator>.assignment,result = (__int64)&v4[i + 1])" ]
"1000216" [label = "(<operator>.cast,(__int64)&v4[i + 1])" ]
"1000217" [label = "(UNKNOWN,__int64,__int64)" ]
"1000218" [label = "(<operator>.addressOf,&v4[i + 1])" ]
"1000219" [label = "(<operator>.indirectIndexAccess,v4[i + 1])" ]
"1000221" [label = "(<operator>.addition,i + 1)" ]
"1000224" [label = "(<operator>.assignment,a2 = (_BYTE *)v7)" ]
"1000226" [label = "(<operator>.cast,(_BYTE *)v7)" ]
"1000227" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000230" [label = "(<operator>.logicalNot,!v7)" ]
"1000232" [label = "(RETURN,return (__int64)&v4[i + 1];,return (__int64)&v4[i + 1];)" ]
"1000233" [label = "(<operator>.cast,(__int64)&v4[i + 1])" ]
"1000234" [label = "(UNKNOWN,__int64,__int64)" ]
"1000235" [label = "(<operator>.addressOf,&v4[i + 1])" ]
"1000236" [label = "(<operator>.indirectIndexAccess,v4[i + 1])" ]
"1000238" [label = "(<operator>.addition,i + 1)" ]
"1000241" [label = "(RETURN,return result;,return result;)" ]
"1000106" [label = "(METHOD,do_rfc1035_name)" ]
"1000243" [label = "(METHOD_RETURN,__int64 __fastcall)" ]
  "1000116" -> "1000128" 
  "1000116" -> "1000241" 
  "1000116" -> "1000241" 
  "1000125" -> "1000133" 
  "1000127" -> "1000125" 
  "1000128" -> "1000127" 
  "1000131" -> "1000241" 
  "1000131" -> "1000147" 
  "1000132" -> "1000131" 
  "1000132" -> "1000135" 
  "1000132" -> "1000138" 
  "1000133" -> "1000132" 
  "1000135" -> "1000131" 
  "1000137" -> "1000135" 
  "1000138" -> "1000137" 
  "1000145" -> "1000152" 
  "1000147" -> "1000145" 
  "1000151" -> "1000241" 
  "1000151" -> "1000163" 
  "1000151" -> "1000159" 
  "1000152" -> "1000151" 
  "1000152" -> "1000154" 
  "1000154" -> "1000151" 
  "1000159" -> "1000173" 
  "1000159" -> "1000183" 
  "1000161" -> "1000159" 
  "1000162" -> "1000161" 
  "1000163" -> "1000167" 
  "1000164" -> "1000162" 
  "1000165" -> "1000164" 
  "1000167" -> "1000165" 
  "1000171" -> "1000243" 
  "1000172" -> "1000171" 
  "1000173" -> "1000177" 
  "1000174" -> "1000172" 
  "1000175" -> "1000174" 
  "1000177" -> "1000175" 
  "1000180" -> "1000188" 
  "1000181" -> "1000180" 
  "1000183" -> "1000181" 
  "1000187" -> "1000194" 
  "1000188" -> "1000187" 
  "1000191" -> "1000203" 
  "1000193" -> "1000191" 
  "1000194" -> "1000198" 
  "1000195" -> "1000193" 
  "1000196" -> "1000195" 
  "1000198" -> "1000196" 
  "1000202" -> "1000209" 
  "1000202" -> "1000217" 
  "1000203" -> "1000202" 
  "1000206" -> "1000217" 
  "1000208" -> "1000206" 
  "1000209" -> "1000211" 
  "1000210" -> "1000208" 
  "1000211" -> "1000210" 
  "1000214" -> "1000227" 
  "1000216" -> "1000214" 
  "1000217" -> "1000221" 
  "1000218" -> "1000216" 
  "1000219" -> "1000218" 
  "1000221" -> "1000219" 
  "1000224" -> "1000230" 
  "1000226" -> "1000224" 
  "1000227" -> "1000226" 
  "1000230" -> "1000234" 
  "1000230" -> "1000128" 
  "1000230" -> "1000241" 
  "1000232" -> "1000243" 
  "1000233" -> "1000232" 
  "1000234" -> "1000238" 
  "1000235" -> "1000233" 
  "1000236" -> "1000235" 
  "1000238" -> "1000236" 
  "1000241" -> "1000243" 
  "1000106" -> "1000116" 
}
