digraph do_rfc1035_name {  
"1000114" [label = "(<operator>.logicalAnd,a2 && *a2)" ]
"1000116" [label = "(<operator>.indirection,*a2)" ]
"1000118" [label = "(<operator>.assignment,result = i)" ]
"1000122" [label = "(<operator>.assignment,v2 = a2)" ]
"1000126" [label = "(<operator>.assignment,i = result + 1)" ]
"1000128" [label = "(<operator>.addition,result + 1)" ]
"1000131" [label = "(<operator>.preIncrement,++i)" ]
"1000134" [label = "(<operator>.assignment,v4 = (unsigned __int8)*v2)" ]
"1000136" [label = "(<operator>.cast,(unsigned __int8)*v2)" ]
"1000137" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000138" [label = "(<operator>.indirection,*v2)" ]
"1000140" [label = "(<operator>.assignment,a2 = v2)" ]
"1000143" [label = "(<operator>.assignment,v5 = v4 == 0)" ]
"1000145" [label = "(<operator>.equals,v4 == 0)" ]
"1000149" [label = "(<operator>.indirection,*v2)" ]
"1000151" [label = "(<operator>.assignment,v5 = v4 == 46)" ]
"1000153" [label = "(<operator>.equals,v4 == 46)" ]
"1000156" [label = "(<operator>.preIncrement,++v2)" ]
"1000161" [label = "(<operator>.assignment,*i = v4)" ]
"1000162" [label = "(<operator>.indirection,*i)" ]
"1000165" [label = "(<operator>.assignment,*result = (_BYTE)i + ~(_BYTE)result)" ]
"1000166" [label = "(<operator>.indirection,*result)" ]
"1000168" [label = "(<operator>.addition,(_BYTE)i + ~(_BYTE)result)" ]
"1000169" [label = "(<operator>.cast,(_BYTE)i)" ]
"1000170" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000172" [label = "(<operator>.not,~(_BYTE)result)" ]
"1000173" [label = "(<operator>.cast,(_BYTE)result)" ]
"1000174" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000177" [label = "(<operator>.indirection,*a2)" ]
"1000179" [label = "(<operator>.assignment,a2 = v2)" ]
"1000182" [label = "(RETURN,return result;,return result;)" ]
"1000105" [label = "(METHOD,do_rfc1035_name)" ]
"1000184" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000114" -> "1000122" 
  "1000114" -> "1000122" 
  "1000114" -> "1000182" 
  "1000116" -> "1000114" 
  "1000118" -> "1000114" 
  "1000118" -> "1000116" 
  "1000122" -> "1000128" 
  "1000126" -> "1000137" 
  "1000128" -> "1000126" 
  "1000131" -> "1000137" 
  "1000134" -> "1000140" 
  "1000136" -> "1000134" 
  "1000137" -> "1000138" 
  "1000138" -> "1000136" 
  "1000140" -> "1000145" 
  "1000143" -> "1000149" 
  "1000145" -> "1000143" 
  "1000149" -> "1000153" 
  "1000149" -> "1000156" 
  "1000151" -> "1000156" 
  "1000153" -> "1000151" 
  "1000156" -> "1000166" 
  "1000156" -> "1000182" 
  "1000156" -> "1000162" 
  "1000161" -> "1000131" 
  "1000162" -> "1000161" 
  "1000165" -> "1000177" 
  "1000166" -> "1000170" 
  "1000168" -> "1000165" 
  "1000169" -> "1000174" 
  "1000170" -> "1000169" 
  "1000172" -> "1000168" 
  "1000173" -> "1000172" 
  "1000174" -> "1000173" 
  "1000177" -> "1000179" 
  "1000177" -> "1000118" 
  "1000179" -> "1000118" 
  "1000182" -> "1000184" 
  "1000105" -> "1000114" 
  "1000105" -> "1000116" 
}
