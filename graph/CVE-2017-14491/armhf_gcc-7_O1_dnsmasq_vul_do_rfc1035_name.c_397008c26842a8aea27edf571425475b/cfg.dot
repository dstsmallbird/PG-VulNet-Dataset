digraph do_rfc1035_name {  
"1000123" [label = "(<operator>.assignment,v2 = result)" ]
"1000129" [label = "(<operator>.assignment,v3 = a2)" ]
"1000133" [label = "(<operator>.indirection,*a2)" ]
"1000139" [label = "(<operator>.assignment,result = v2 + 1)" ]
"1000141" [label = "(<operator>.addition,v2 + 1)" ]
"1000144" [label = "(<operator>.assignment,v6 = (unsigned __int8)*v3)" ]
"1000146" [label = "(<operator>.cast,(unsigned __int8)*v3)" ]
"1000147" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000148" [label = "(<operator>.indirection,*v3)" ]
"1000150" [label = "(<operator>.assignment,v7 = v6 == 0)" ]
"1000152" [label = "(<operator>.equals,v6 == 0)" ]
"1000156" [label = "(<operator>.indirection,*v3)" ]
"1000158" [label = "(<operator>.assignment,v7 = v6 == 46)" ]
"1000160" [label = "(<operator>.equals,v6 == 46)" ]
"1000166" [label = "(<operator>.assignment,v4 = v3)" ]
"1000169" [label = "(<operator>.assignment,v5 = 0)" ]
"1000174" [label = "(<operator>.assignment,v8 = v3 + 1)" ]
"1000176" [label = "(<operator>.addition,v3 + 1)" ]
"1000181" [label = "(<operator>.assignment,*result++ = v6)" ]
"1000182" [label = "(<operator>.indirection,*result++)" ]
"1000183" [label = "(<operator>.postIncrement,result++)" ]
"1000186" [label = "(<operator>.assignment,v4 = v8)" ]
"1000189" [label = "(<operator>.assignment,v5 = (_BYTE)result - 1 - (_BYTE)v2)" ]
"1000191" [label = "(<operator>.subtraction,(_BYTE)result - 1 - (_BYTE)v2)" ]
"1000192" [label = "(<operator>.cast,(_BYTE)result)" ]
"1000193" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000195" [label = "(<operator>.subtraction,1 - (_BYTE)v2)" ]
"1000197" [label = "(<operator>.cast,(_BYTE)v2)" ]
"1000198" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000200" [label = "(<operator>.assignment,v9 = *v8++)" ]
"1000202" [label = "(<operator>.indirection,*v8++)" ]
"1000203" [label = "(<operator>.postIncrement,v8++)" ]
"1000205" [label = "(<operator>.assignment,v6 = v9)" ]
"1000208" [label = "(<operator>.assignment,v10 = v9 == 0)" ]
"1000210" [label = "(<operator>.equals,v9 == 0)" ]
"1000215" [label = "(<operator>.assignment,v10 = v6 == 46)" ]
"1000217" [label = "(<operator>.equals,v6 == 46)" ]
"1000220" [label = "(<operator>.logicalNot,!v10)" ]
"1000222" [label = "(<operator>.assignment,*v2 = v5)" ]
"1000223" [label = "(<operator>.indirection,*v2)" ]
"1000227" [label = "(<operator>.logicalNot,!*v4)" ]
"1000228" [label = "(<operator>.indirection,*v4)" ]
"1000231" [label = "(<operator>.assignment,v3 = v4 + 1)" ]
"1000233" [label = "(<operator>.addition,v4 + 1)" ]
"1000237" [label = "(<operator>.logicalOr,v4 == (_BYTE *)-1 || !v4[1])" ]
"1000238" [label = "(<operator>.equals,v4 == (_BYTE *)-1)" ]
"1000240" [label = "(<operator>.cast,(_BYTE *)-1)" ]
"1000241" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000242" [label = "(<operator>.minus,-1)" ]
"1000244" [label = "(<operator>.logicalNot,!v4[1])" ]
"1000245" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000249" [label = "(<operator>.assignment,v2 = result)" ]
"1000252" [label = "(RETURN,return result;,return result;)" ]
"1000110" [label = "(METHOD,do_rfc1035_name)" ]
"1000254" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000123" -> "1000129" 
  "1000123" -> "1000252" 
  "1000129" -> "1000133" 
  "1000133" -> "1000141" 
  "1000133" -> "1000252" 
  "1000133" -> "1000252" 
  "1000139" -> "1000147" 
  "1000141" -> "1000139" 
  "1000144" -> "1000152" 
  "1000146" -> "1000144" 
  "1000147" -> "1000148" 
  "1000148" -> "1000146" 
  "1000150" -> "1000156" 
  "1000152" -> "1000150" 
  "1000156" -> "1000160" 
  "1000156" -> "1000166" 
  "1000156" -> "1000176" 
  "1000158" -> "1000166" 
  "1000158" -> "1000176" 
  "1000160" -> "1000158" 
  "1000166" -> "1000169" 
  "1000169" -> "1000223" 
  "1000174" -> "1000183" 
  "1000176" -> "1000174" 
  "1000181" -> "1000186" 
  "1000182" -> "1000181" 
  "1000183" -> "1000182" 
  "1000186" -> "1000193" 
  "1000189" -> "1000203" 
  "1000191" -> "1000189" 
  "1000192" -> "1000198" 
  "1000193" -> "1000192" 
  "1000195" -> "1000191" 
  "1000197" -> "1000195" 
  "1000198" -> "1000197" 
  "1000200" -> "1000205" 
  "1000202" -> "1000200" 
  "1000203" -> "1000202" 
  "1000205" -> "1000210" 
  "1000208" -> "1000220" 
  "1000208" -> "1000217" 
  "1000210" -> "1000208" 
  "1000215" -> "1000220" 
  "1000217" -> "1000215" 
  "1000220" -> "1000183" 
  "1000220" -> "1000223" 
  "1000222" -> "1000228" 
  "1000223" -> "1000222" 
  "1000227" -> "1000252" 
  "1000227" -> "1000233" 
  "1000228" -> "1000227" 
  "1000231" -> "1000241" 
  "1000233" -> "1000231" 
  "1000237" -> "1000252" 
  "1000237" -> "1000249" 
  "1000238" -> "1000237" 
  "1000238" -> "1000245" 
  "1000240" -> "1000238" 
  "1000241" -> "1000242" 
  "1000242" -> "1000240" 
  "1000244" -> "1000237" 
  "1000245" -> "1000244" 
  "1000249" -> "1000141" 
  "1000249" -> "1000252" 
  "1000252" -> "1000254" 
  "1000110" -> "1000123" 
}
