digraph do_rfc1035_name {  
"1000115" [label = "(<operator>.assignment,v2 = a2)" ]
"1000124" [label = "(<operator>.assignment,v4 = *v2)" ]
"1000126" [label = "(<operator>.indirection,*v2)" ]
"1000129" [label = "(<operator>.logicalNot,!*v2)" ]
"1000130" [label = "(<operator>.indirection,*v2)" ]
"1000133" [label = "(<operator>.assignment,result = a1 + 1)" ]
"1000135" [label = "(<operator>.addition,a1 + 1)" ]
"1000138" [label = "(<operator>.assignment,v6 = 0)" ]
"1000142" [label = "(<operator>.assignment,i = v2 + 1)" ]
"1000144" [label = "(<operator>.addition,v2 + 1)" ]
"1000148" [label = "(<operator>.preIncrement,++result)" ]
"1000152" [label = "(<operator>.equals,v4 == 46)" ]
"1000156" [label = "(<operator>.assignment,*result = v4)" ]
"1000157" [label = "(<operator>.indirection,*result)" ]
"1000160" [label = "(<operator>.assignment,v4 = *i++)" ]
"1000162" [label = "(<operator>.indirection,*i++)" ]
"1000163" [label = "(<operator>.postIncrement,i++)" ]
"1000165" [label = "(<operator>.preIncrement,++v6)" ]
"1000167" [label = "(<operator>.assignment,*a1 = v6)" ]
"1000168" [label = "(<operator>.indirection,*a1)" ]
"1000171" [label = "(<operator>.assignment,v2 = i - 1)" ]
"1000173" [label = "(<operator>.subtraction,i - 1)" ]
"1000177" [label = "(<operator>.indirection,*(i - 1))" ]
"1000178" [label = "(<operator>.subtraction,i - 1)" ]
"1000181" [label = "(<operator>.assignment,v2 = i)" ]
"1000184" [label = "(<operator>.assignment,a1 = result)" ]
"1000188" [label = "(<operator>.logicalNot,!v2)" ]
"1000190" [label = "(RETURN,return result;,return result;)" ]
"1000192" [label = "(RETURN,return a1;,return a1;)" ]
"1000106" [label = "(METHOD,do_rfc1035_name)" ]
"1000194" [label = "(METHOD_RETURN,__cdecl)" ]
  "1000115" -> "1000126" 
  "1000115" -> "1000192" 
  "1000115" -> "1000192" 
  "1000124" -> "1000130" 
  "1000126" -> "1000124" 
  "1000129" -> "1000192" 
  "1000129" -> "1000135" 
  "1000130" -> "1000129" 
  "1000133" -> "1000138" 
  "1000135" -> "1000133" 
  "1000138" -> "1000144" 
  "1000142" -> "1000152" 
  "1000142" -> "1000152" 
  "1000142" -> "1000168" 
  "1000144" -> "1000142" 
  "1000148" -> "1000152" 
  "1000148" -> "1000152" 
  "1000148" -> "1000168" 
  "1000152" -> "1000168" 
  "1000152" -> "1000192" 
  "1000152" -> "1000157" 
  "1000156" -> "1000163" 
  "1000157" -> "1000156" 
  "1000160" -> "1000165" 
  "1000162" -> "1000160" 
  "1000163" -> "1000162" 
  "1000165" -> "1000148" 
  "1000167" -> "1000173" 
  "1000168" -> "1000167" 
  "1000171" -> "1000178" 
  "1000173" -> "1000171" 
  "1000177" -> "1000181" 
  "1000177" -> "1000184" 
  "1000178" -> "1000177" 
  "1000181" -> "1000184" 
  "1000184" -> "1000188" 
  "1000188" -> "1000126" 
  "1000188" -> "1000192" 
  "1000188" -> "1000190" 
  "1000190" -> "1000194" 
  "1000192" -> "1000194" 
  "1000106" -> "1000115" 
}
