digraph do_rfc1035_name {  
"1000117" [label = "(<operator>.logicalAnd,a2 && *a2)" ]
"1000119" [label = "(<operator>.indirection,*a2)" ]
"1000125" [label = "(<operator>.assignment,v3 = a1 + 1)" ]
"1000127" [label = "(<operator>.addition,a1 + 1)" ]
"1000134" [label = "(<operator>.lessThan,a3 < (unsigned int)v3)" ]
"1000136" [label = "(<operator>.cast,(unsigned int)v3)" ]
"1000137" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000140" [label = "(<operator>.assignment,v4 = (char)*a2)" ]
"1000142" [label = "(<operator>.cast,(char)*a2)" ]
"1000143" [label = "(UNKNOWN,char,char)" ]
"1000144" [label = "(<operator>.indirection,*a2)" ]
"1000146" [label = "(<operator>.assignment,v5 = a2)" ]
"1000150" [label = "(<operator>.indirection,*a2)" ]
"1000153" [label = "(<operator>.assignment,v6 = 0)" ]
"1000157" [label = "(<operator>.notEquals,v4 != 46)" ]
"1000164" [label = "(<operator>.preIncrement,++a2)" ]
"1000166" [label = "(<operator>.assignment,result = v3 + 1)" ]
"1000168" [label = "(<operator>.addition,v3 + 1)" ]
"1000175" [label = "(<operator>.lessThan,a3 < (unsigned int)result)" ]
"1000177" [label = "(<operator>.cast,(unsigned int)result)" ]
"1000178" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000180" [label = "(RETURN,return v3;,return v3;)" ]
"1000182" [label = "(<operator>.assignment,*v3 = v4)" ]
"1000183" [label = "(<operator>.indirection,*v3)" ]
"1000186" [label = "(<operator>.assignment,v6 = (_BYTE)result + ~(_BYTE)a1)" ]
"1000188" [label = "(<operator>.addition,(_BYTE)result + ~(_BYTE)a1)" ]
"1000189" [label = "(<operator>.cast,(_BYTE)result)" ]
"1000190" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000192" [label = "(<operator>.not,~(_BYTE)a1)" ]
"1000193" [label = "(<operator>.cast,(_BYTE)a1)" ]
"1000194" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000196" [label = "(<operator>.assignment,v4 = (char)*a2)" ]
"1000198" [label = "(<operator>.cast,(char)*a2)" ]
"1000199" [label = "(UNKNOWN,char,char)" ]
"1000200" [label = "(<operator>.indirection,*a2)" ]
"1000202" [label = "(<operator>.preIncrement,++v3)" ]
"1000205" [label = "(<operator>.logicalOr,!*a2 || v4 == 46)" ]
"1000206" [label = "(<operator>.logicalNot,!*a2)" ]
"1000207" [label = "(<operator>.indirection,*a2)" ]
"1000209" [label = "(<operator>.equals,v4 == 46)" ]
"1000213" [label = "(<operator>.assignment,v5 = a2)" ]
"1000217" [label = "(<operator>.assignment,v5 = a2)" ]
"1000220" [label = "(<operator>.assignment,result = a1 + 1)" ]
"1000222" [label = "(<operator>.addition,a1 + 1)" ]
"1000227" [label = "(<operator>.assignment,result = a1 + 1)" ]
"1000229" [label = "(<operator>.addition,a1 + 1)" ]
"1000232" [label = "(<operator>.assignment,v6 = 0)" ]
"1000236" [label = "(<operator>.assignment,*a1 = v6)" ]
"1000237" [label = "(<operator>.indirection,*a1)" ]
"1000241" [label = "(<operator>.indirection,*a2++)" ]
"1000242" [label = "(<operator>.postIncrement,a2++)" ]
"1000248" [label = "(<operator>.assignment,a1 = result)" ]
"1000252" [label = "(<operator>.indirectIndexAccess,v5[1])" ]
"1000256" [label = "(RETURN,return result;,return result;)" ]
"1000258" [label = "(RETURN,return a1;,return a1;)" ]
"1000106" [label = "(METHOD,do_rfc1035_name)" ]
"1000260" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000117" -> "1000127" 
  "1000117" -> "1000258" 
  "1000117" -> "1000258" 
  "1000119" -> "1000117" 
  "1000125" -> "1000137" 
  "1000125" -> "1000143" 
  "1000127" -> "1000125" 
  "1000134" -> "1000258" 
  "1000134" -> "1000143" 
  "1000136" -> "1000134" 
  "1000137" -> "1000136" 
  "1000140" -> "1000146" 
  "1000142" -> "1000140" 
  "1000143" -> "1000144" 
  "1000144" -> "1000142" 
  "1000146" -> "1000150" 
  "1000150" -> "1000153" 
  "1000150" -> "1000229" 
  "1000153" -> "1000157" 
  "1000157" -> "1000164" 
  "1000157" -> "1000217" 
  "1000157" -> "1000217" 
  "1000164" -> "1000168" 
  "1000166" -> "1000178" 
  "1000166" -> "1000183" 
  "1000168" -> "1000166" 
  "1000175" -> "1000180" 
  "1000175" -> "1000183" 
  "1000177" -> "1000175" 
  "1000178" -> "1000177" 
  "1000180" -> "1000260" 
  "1000182" -> "1000190" 
  "1000183" -> "1000182" 
  "1000186" -> "1000199" 
  "1000188" -> "1000186" 
  "1000189" -> "1000194" 
  "1000190" -> "1000189" 
  "1000192" -> "1000188" 
  "1000193" -> "1000192" 
  "1000194" -> "1000193" 
  "1000196" -> "1000202" 
  "1000198" -> "1000196" 
  "1000199" -> "1000200" 
  "1000200" -> "1000198" 
  "1000202" -> "1000207" 
  "1000205" -> "1000164" 
  "1000205" -> "1000217" 
  "1000205" -> "1000213" 
  "1000206" -> "1000205" 
  "1000206" -> "1000209" 
  "1000207" -> "1000206" 
  "1000209" -> "1000205" 
  "1000213" -> "1000237" 
  "1000217" -> "1000222" 
  "1000220" -> "1000237" 
  "1000222" -> "1000220" 
  "1000227" -> "1000232" 
  "1000229" -> "1000227" 
  "1000232" -> "1000237" 
  "1000236" -> "1000242" 
  "1000237" -> "1000236" 
  "1000241" -> "1000248" 
  "1000241" -> "1000256" 
  "1000241" -> "1000256" 
  "1000242" -> "1000241" 
  "1000248" -> "1000252" 
  "1000252" -> "1000127" 
  "1000252" -> "1000258" 
  "1000252" -> "1000256" 
  "1000256" -> "1000260" 
  "1000258" -> "1000260" 
  "1000106" -> "1000117" 
  "1000106" -> "1000119" 
}
