digraph do_rfc1035_name {  
"1000125" [label = "(<operator>.assignment,v2 = (_BYTE *)result)" ]
"1000127" [label = "(<operator>.cast,(_BYTE *)result)" ]
"1000128" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000130" [label = "(<operator>.assignment,v3 = *a2)" ]
"1000132" [label = "(<operator>.indirection,*a2)" ]
"1000135" [label = "(<operator>.logicalNot,!*a2)" ]
"1000136" [label = "(<operator>.indirection,*a2)" ]
"1000139" [label = "(<operator>.assignment,v4 = 0)" ]
"1000142" [label = "(<operator>.assignment,v5 = v3 == 0)" ]
"1000144" [label = "(<operator>.equals,v3 == 0)" ]
"1000149" [label = "(<operator>.assignment,v5 = v3 == 46)" ]
"1000151" [label = "(<operator>.equals,v3 == 46)" ]
"1000155" [label = "(<operator>.logicalNot,!v5)" ]
"1000160" [label = "(<operator>.assignment,v2[v4 + 1] = v3)" ]
"1000161" [label = "(<operator>.indirectIndexAccess,v2[v4 + 1])" ]
"1000163" [label = "(<operator>.addition,v4 + 1)" ]
"1000167" [label = "(<operator>.assignment,v6 = &a2[v4++])" ]
"1000169" [label = "(<operator>.addressOf,&a2[v4++])" ]
"1000170" [label = "(<operator>.indirectIndexAccess,a2[v4++])" ]
"1000172" [label = "(<operator>.postIncrement,v4++)" ]
"1000174" [label = "(<operator>.assignment,v3 = v6[1])" ]
"1000176" [label = "(<operator>.indirectIndexAccess,v6[1])" ]
"1000179" [label = "(<operator>.assignment,v7 = v3 == 0)" ]
"1000181" [label = "(<operator>.equals,v3 == 0)" ]
"1000186" [label = "(<operator>.assignment,v7 = v3 == 46)" ]
"1000188" [label = "(<operator>.equals,v3 == 46)" ]
"1000191" [label = "(<operator>.logicalNot,!v7)" ]
"1000193" [label = "(<operator>.assignment,*v2 = v4)" ]
"1000194" [label = "(<operator>.indirection,*v2)" ]
"1000197" [label = "(<operator>.assignment,v8 = (unsigned __int8)a2[v4])" ]
"1000199" [label = "(<operator>.cast,(unsigned __int8)a2[v4])" ]
"1000200" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000201" [label = "(<operator>.indirectIndexAccess,a2[v4])" ]
"1000204" [label = "(<operator>.assignmentPlus,a2 += v4)" ]
"1000207" [label = "(<operator>.assignment,result = (int)&v2[v4 + 1])" ]
"1000209" [label = "(<operator>.cast,(int)&v2[v4 + 1])" ]
"1000210" [label = "(UNKNOWN,int,int)" ]
"1000211" [label = "(<operator>.addressOf,&v2[v4 + 1])" ]
"1000212" [label = "(<operator>.indirectIndexAccess,v2[v4 + 1])" ]
"1000214" [label = "(<operator>.addition,v4 + 1)" ]
"1000219" [label = "(<operator>.preIncrement,++a2)" ]
"1000222" [label = "(<operator>.logicalNot,!a2)" ]
"1000224" [label = "(RETURN,return (int)&v2[v4 + 1];,return (int)&v2[v4 + 1];)" ]
"1000225" [label = "(<operator>.cast,(int)&v2[v4 + 1])" ]
"1000226" [label = "(UNKNOWN,int,int)" ]
"1000227" [label = "(<operator>.addressOf,&v2[v4 + 1])" ]
"1000228" [label = "(<operator>.indirectIndexAccess,v2[v4 + 1])" ]
"1000230" [label = "(<operator>.addition,v4 + 1)" ]
"1000233" [label = "(<operator>.assignment,result = (int)v2)" ]
"1000235" [label = "(<operator>.cast,(int)v2)" ]
"1000236" [label = "(UNKNOWN,int,int)" ]
"1000238" [label = "(RETURN,return result;,return result;)" ]
"1000108" [label = "(METHOD,do_rfc1035_name)" ]
"1000240" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000125" -> "1000132" 
  "1000127" -> "1000125" 
  "1000128" -> "1000127" 
  "1000130" -> "1000136" 
  "1000132" -> "1000130" 
  "1000135" -> "1000236" 
  "1000135" -> "1000139" 
  "1000136" -> "1000135" 
  "1000139" -> "1000144" 
  "1000142" -> "1000151" 
  "1000142" -> "1000155" 
  "1000144" -> "1000142" 
  "1000149" -> "1000155" 
  "1000151" -> "1000149" 
  "1000155" -> "1000163" 
  "1000155" -> "1000194" 
  "1000160" -> "1000172" 
  "1000161" -> "1000160" 
  "1000163" -> "1000161" 
  "1000167" -> "1000176" 
  "1000169" -> "1000167" 
  "1000170" -> "1000169" 
  "1000172" -> "1000170" 
  "1000174" -> "1000181" 
  "1000176" -> "1000174" 
  "1000179" -> "1000191" 
  "1000179" -> "1000188" 
  "1000181" -> "1000179" 
  "1000186" -> "1000191" 
  "1000188" -> "1000186" 
  "1000191" -> "1000163" 
  "1000191" -> "1000194" 
  "1000193" -> "1000200" 
  "1000194" -> "1000193" 
  "1000197" -> "1000204" 
  "1000199" -> "1000197" 
  "1000200" -> "1000201" 
  "1000201" -> "1000199" 
  "1000204" -> "1000210" 
  "1000207" -> "1000219" 
  "1000207" -> "1000222" 
  "1000209" -> "1000207" 
  "1000210" -> "1000214" 
  "1000211" -> "1000209" 
  "1000212" -> "1000211" 
  "1000214" -> "1000212" 
  "1000219" -> "1000222" 
  "1000222" -> "1000226" 
  "1000222" -> "1000128" 
  "1000222" -> "1000236" 
  "1000224" -> "1000240" 
  "1000225" -> "1000224" 
  "1000226" -> "1000230" 
  "1000227" -> "1000225" 
  "1000228" -> "1000227" 
  "1000230" -> "1000228" 
  "1000233" -> "1000238" 
  "1000235" -> "1000233" 
  "1000236" -> "1000235" 
  "1000238" -> "1000240" 
  "1000108" -> "1000128" 
  "1000108" -> "1000236" 
  "1000108" -> "1000238" 
}
