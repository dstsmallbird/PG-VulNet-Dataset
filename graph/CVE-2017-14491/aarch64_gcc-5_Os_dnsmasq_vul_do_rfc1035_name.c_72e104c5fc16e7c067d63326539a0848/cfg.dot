digraph do_rfc1035_name {  
"1000112" [label = "(<operator>.logicalAnd,a2 && *a2)" ]
"1000114" [label = "(<operator>.indirection,*a2)" ]
"1000117" [label = "(<operator>.assignment,v2 = result + 1)" ]
"1000119" [label = "(<operator>.addition,result + 1)" ]
"1000123" [label = "(<operator>.assignment,i = a2)" ]
"1000126" [label = "(<operator>.preIncrement,++i)" ]
"1000129" [label = "(<operator>.assignment,v4 = (unsigned __int8)*i)" ]
"1000131" [label = "(<operator>.cast,(unsigned __int8)*i)" ]
"1000132" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000133" [label = "(<operator>.indirection,*i)" ]
"1000136" [label = "(<operator>.logicalOr,!*i || v4 == 46)" ]
"1000137" [label = "(<operator>.logicalNot,!*i)" ]
"1000138" [label = "(<operator>.indirection,*i)" ]
"1000140" [label = "(<operator>.equals,v4 == 46)" ]
"1000144" [label = "(<operator>.assignment,*v2++ = v4)" ]
"1000145" [label = "(<operator>.indirection,*v2++)" ]
"1000146" [label = "(<operator>.postIncrement,v2++)" ]
"1000149" [label = "(<operator>.assignment,*result = (_BYTE)i - (_BYTE)a2)" ]
"1000150" [label = "(<operator>.indirection,*result)" ]
"1000152" [label = "(<operator>.subtraction,(_BYTE)i - (_BYTE)a2)" ]
"1000153" [label = "(<operator>.cast,(_BYTE)i)" ]
"1000154" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000156" [label = "(<operator>.cast,(_BYTE)a2)" ]
"1000157" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000159" [label = "(<operator>.assignment,result = v2)" ]
"1000163" [label = "(<operator>.indirection,*i)" ]
"1000165" [label = "(<operator>.assignment,a2 = i + 1)" ]
"1000167" [label = "(<operator>.addition,i + 1)" ]
"1000171" [label = "(<operator>.assignment,a2 = i)" ]
"1000174" [label = "(RETURN,return result;,return result;)" ]
"1000104" [label = "(METHOD,do_rfc1035_name)" ]
"1000176" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000112" -> "1000119" 
  "1000112" -> "1000174" 
  "1000114" -> "1000112" 
  "1000117" -> "1000123" 
  "1000119" -> "1000117" 
  "1000123" -> "1000132" 
  "1000126" -> "1000132" 
  "1000129" -> "1000138" 
  "1000131" -> "1000129" 
  "1000132" -> "1000133" 
  "1000133" -> "1000131" 
  "1000136" -> "1000150" 
  "1000136" -> "1000174" 
  "1000136" -> "1000146" 
  "1000137" -> "1000136" 
  "1000137" -> "1000140" 
  "1000138" -> "1000137" 
  "1000140" -> "1000136" 
  "1000144" -> "1000126" 
  "1000145" -> "1000144" 
  "1000146" -> "1000145" 
  "1000149" -> "1000159" 
  "1000150" -> "1000154" 
  "1000152" -> "1000149" 
  "1000153" -> "1000157" 
  "1000154" -> "1000153" 
  "1000156" -> "1000152" 
  "1000157" -> "1000156" 
  "1000159" -> "1000163" 
  "1000163" -> "1000167" 
  "1000163" -> "1000171" 
  "1000165" -> "1000112" 
  "1000165" -> "1000114" 
  "1000167" -> "1000165" 
  "1000171" -> "1000112" 
  "1000171" -> "1000114" 
  "1000174" -> "1000176" 
  "1000104" -> "1000112" 
  "1000104" -> "1000114" 
}
