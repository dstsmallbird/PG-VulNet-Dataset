digraph do_rfc1035_name {  
"1000116" [label = "(<operator>.assignment,result = a1)" ]
"1000125" [label = "(<operator>.assignment,v4 = (_BYTE *)result)" ]
"1000127" [label = "(<operator>.cast,(_BYTE *)result)" ]
"1000128" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000130" [label = "(<operator>.assignment,v5 = *a2)" ]
"1000132" [label = "(<operator>.indirection,*a2)" ]
"1000135" [label = "(<operator>.logicalNot,!*a2)" ]
"1000136" [label = "(<operator>.indirection,*a2)" ]
"1000138" [label = "(RETURN,return (__int64)v4;,return (__int64)v4;)" ]
"1000139" [label = "(<operator>.cast,(__int64)v4)" ]
"1000140" [label = "(UNKNOWN,__int64,__int64)" ]
"1000143" [label = "(<operator>.logicalAnd,a3 && (unsigned __int64)(v4 + 1) > a3)" ]
"1000145" [label = "(<operator>.greaterThan,(unsigned __int64)(v4 + 1) > a3)" ]
"1000146" [label = "(<operator>.cast,(unsigned __int64)(v4 + 1))" ]
"1000147" [label = "(UNKNOWN,unsigned __int64,unsigned __int64)" ]
"1000148" [label = "(<operator>.addition,v4 + 1)" ]
"1000158" [label = "(<operator>.notEquals,v5 != 46)" ]
"1000163" [label = "(<operator>.logicalAnd,a3 && (unsigned __int64)&v4[v6 + 2] > a3)" ]
"1000165" [label = "(<operator>.greaterThan,(unsigned __int64)&v4[v6 + 2] > a3)" ]
"1000166" [label = "(<operator>.cast,(unsigned __int64)&v4[v6 + 2])" ]
"1000167" [label = "(UNKNOWN,unsigned __int64,unsigned __int64)" ]
"1000168" [label = "(<operator>.addressOf,&v4[v6 + 2])" ]
"1000169" [label = "(<operator>.indirectIndexAccess,v4[v6 + 2])" ]
"1000171" [label = "(<operator>.addition,v6 + 2)" ]
"1000175" [label = "(RETURN,return (__int64)&v4[v6 + 1];,return (__int64)&v4[v6 + 1];)" ]
"1000176" [label = "(<operator>.cast,(__int64)&v4[v6 + 1])" ]
"1000177" [label = "(UNKNOWN,__int64,__int64)" ]
"1000178" [label = "(<operator>.addressOf,&v4[v6 + 1])" ]
"1000179" [label = "(<operator>.indirectIndexAccess,v4[v6 + 1])" ]
"1000181" [label = "(<operator>.addition,v6 + 1)" ]
"1000184" [label = "(<operator>.assignment,v4[v6 + 1] = v5)" ]
"1000185" [label = "(<operator>.indirectIndexAccess,v4[v6 + 1])" ]
"1000187" [label = "(<operator>.addition,v6 + 1)" ]
"1000191" [label = "(<operator>.assignment,v5 = a2[++v6])" ]
"1000193" [label = "(<operator>.indirectIndexAccess,a2[++v6])" ]
"1000195" [label = "(<operator>.preIncrement,++v6)" ]
"1000198" [label = "(<operator>.logicalNot,!v5)" ]
"1000201" [label = "(<operator>.assignment,*v4 = v6)" ]
"1000202" [label = "(<operator>.indirection,*v4)" ]
"1000205" [label = "(<operator>.assignment,v7 = (__int64)&a2[v6 + 1])" ]
"1000207" [label = "(<operator>.cast,(__int64)&a2[v6 + 1])" ]
"1000208" [label = "(UNKNOWN,__int64,__int64)" ]
"1000209" [label = "(<operator>.addressOf,&a2[v6 + 1])" ]
"1000210" [label = "(<operator>.indirectIndexAccess,a2[v6 + 1])" ]
"1000212" [label = "(<operator>.addition,v6 + 1)" ]
"1000216" [label = "(<operator>.logicalNot,!a2[v6])" ]
"1000217" [label = "(<operator>.indirectIndexAccess,a2[v6])" ]
"1000220" [label = "(<operator>.assignment,v7 = (__int64)&a2[v6])" ]
"1000222" [label = "(<operator>.cast,(__int64)&a2[v6])" ]
"1000223" [label = "(UNKNOWN,__int64,__int64)" ]
"1000224" [label = "(<operator>.addressOf,&a2[v6])" ]
"1000225" [label = "(<operator>.indirectIndexAccess,a2[v6])" ]
"1000228" [label = "(<operator>.assignment,result = (__int64)&v4[v6 + 1])" ]
"1000230" [label = "(<operator>.cast,(__int64)&v4[v6 + 1])" ]
"1000231" [label = "(UNKNOWN,__int64,__int64)" ]
"1000232" [label = "(<operator>.addressOf,&v4[v6 + 1])" ]
"1000233" [label = "(<operator>.indirectIndexAccess,v4[v6 + 1])" ]
"1000235" [label = "(<operator>.addition,v6 + 1)" ]
"1000238" [label = "(<operator>.assignment,a2 = (char *)v7)" ]
"1000240" [label = "(<operator>.cast,(char *)v7)" ]
"1000241" [label = "(UNKNOWN,char *,char *)" ]
"1000244" [label = "(<operator>.logicalNot,!v7)" ]
"1000246" [label = "(RETURN,return (__int64)&v4[v6 + 1];,return (__int64)&v4[v6 + 1];)" ]
"1000247" [label = "(<operator>.cast,(__int64)&v4[v6 + 1])" ]
"1000248" [label = "(UNKNOWN,__int64,__int64)" ]
"1000249" [label = "(<operator>.addressOf,&v4[v6 + 1])" ]
"1000250" [label = "(<operator>.indirectIndexAccess,v4[v6 + 1])" ]
"1000252" [label = "(<operator>.addition,v6 + 1)" ]
"1000255" [label = "(<operator>.assignment,result = (__int64)v4)" ]
"1000257" [label = "(<operator>.cast,(__int64)v4)" ]
"1000258" [label = "(UNKNOWN,__int64,__int64)" ]
"1000260" [label = "(RETURN,return result;,return result;)" ]
"1000106" [label = "(METHOD,do_rfc1035_name)" ]
"1000262" [label = "(METHOD_RETURN,__int64 __fastcall)" ]
  "1000116" -> "1000128" 
  "1000116" -> "1000258" 
  "1000116" -> "1000260" 
  "1000125" -> "1000132" 
  "1000127" -> "1000125" 
  "1000128" -> "1000127" 
  "1000130" -> "1000136" 
  "1000132" -> "1000130" 
  "1000135" -> "1000140" 
  "1000135" -> "1000147" 
  "1000135" -> "1000143" 
  "1000136" -> "1000135" 
  "1000138" -> "1000262" 
  "1000139" -> "1000138" 
  "1000140" -> "1000139" 
  "1000143" -> "1000258" 
  "1000143" -> "1000158" 
  "1000143" -> "1000202" 
  "1000145" -> "1000143" 
  "1000146" -> "1000145" 
  "1000147" -> "1000148" 
  "1000148" -> "1000146" 
  "1000158" -> "1000167" 
  "1000158" -> "1000163" 
  "1000158" -> "1000202" 
  "1000163" -> "1000177" 
  "1000163" -> "1000187" 
  "1000165" -> "1000163" 
  "1000166" -> "1000165" 
  "1000167" -> "1000171" 
  "1000168" -> "1000166" 
  "1000169" -> "1000168" 
  "1000171" -> "1000169" 
  "1000175" -> "1000262" 
  "1000176" -> "1000175" 
  "1000177" -> "1000181" 
  "1000178" -> "1000176" 
  "1000179" -> "1000178" 
  "1000181" -> "1000179" 
  "1000184" -> "1000195" 
  "1000185" -> "1000184" 
  "1000187" -> "1000185" 
  "1000191" -> "1000198" 
  "1000193" -> "1000191" 
  "1000195" -> "1000193" 
  "1000198" -> "1000158" 
  "1000198" -> "1000202" 
  "1000198" -> "1000258" 
  "1000201" -> "1000208" 
  "1000202" -> "1000201" 
  "1000205" -> "1000217" 
  "1000207" -> "1000205" 
  "1000208" -> "1000212" 
  "1000209" -> "1000207" 
  "1000210" -> "1000209" 
  "1000212" -> "1000210" 
  "1000216" -> "1000223" 
  "1000216" -> "1000231" 
  "1000217" -> "1000216" 
  "1000220" -> "1000231" 
  "1000222" -> "1000220" 
  "1000223" -> "1000225" 
  "1000224" -> "1000222" 
  "1000225" -> "1000224" 
  "1000228" -> "1000241" 
  "1000230" -> "1000228" 
  "1000231" -> "1000235" 
  "1000232" -> "1000230" 
  "1000233" -> "1000232" 
  "1000235" -> "1000233" 
  "1000238" -> "1000244" 
  "1000240" -> "1000238" 
  "1000241" -> "1000240" 
  "1000244" -> "1000248" 
  "1000244" -> "1000128" 
  "1000244" -> "1000258" 
  "1000246" -> "1000262" 
  "1000247" -> "1000246" 
  "1000248" -> "1000252" 
  "1000249" -> "1000247" 
  "1000250" -> "1000249" 
  "1000252" -> "1000250" 
  "1000255" -> "1000260" 
  "1000257" -> "1000255" 
  "1000258" -> "1000257" 
  "1000260" -> "1000262" 
  "1000106" -> "1000116" 
}
