digraph do_rfc1035_name {  
"1000115" [label = "(<operator>.assignment,result = a1)" ]
"1000119" [label = "(<operator>.logicalAnd,a2 && *a2)" ]
"1000121" [label = "(<operator>.indirection,*a2)" ]
"1000124" [label = "(<operator>.assignment,v3 = result + 1)" ]
"1000126" [label = "(<operator>.addition,result + 1)" ]
"1000131" [label = "(<operator>.assignment,v5 = a2[i])" ]
"1000133" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000136" [label = "(<operator>.assignment,v6 = &a2[i])" ]
"1000138" [label = "(<operator>.addressOf,&a2[i])" ]
"1000139" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000143" [label = "(<operator>.logicalOr,!v5 || v5 == 46)" ]
"1000144" [label = "(<operator>.logicalNot,!v5)" ]
"1000146" [label = "(<operator>.equals,v5 == 46)" ]
"1000150" [label = "(<operator>.assignment,*v3++ = v5)" ]
"1000151" [label = "(<operator>.indirection,*v3++)" ]
"1000152" [label = "(<operator>.postIncrement,v3++)" ]
"1000155" [label = "(<operator>.assignment,*result = i)" ]
"1000156" [label = "(<operator>.indirection,*result)" ]
"1000160" [label = "(<operator>.indirection,*v6)" ]
"1000162" [label = "(<operator>.preIncrement,++v6)" ]
"1000164" [label = "(<operator>.assignment,a2 = v6)" ]
"1000167" [label = "(<operator>.assignment,result = v3)" ]
"1000170" [label = "(RETURN,return result;,return result;)" ]
"1000106" [label = "(METHOD,do_rfc1035_name)" ]
"1000172" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000115" -> "1000119" 
  "1000115" -> "1000121" 
  "1000119" -> "1000126" 
  "1000119" -> "1000170" 
  "1000121" -> "1000119" 
  "1000124" -> "1000133" 
  "1000126" -> "1000124" 
  "1000131" -> "1000139" 
  "1000133" -> "1000131" 
  "1000136" -> "1000144" 
  "1000138" -> "1000136" 
  "1000139" -> "1000138" 
  "1000143" -> "1000170" 
  "1000143" -> "1000152" 
  "1000144" -> "1000143" 
  "1000144" -> "1000146" 
  "1000146" -> "1000143" 
  "1000150" -> "1000156" 
  "1000151" -> "1000150" 
  "1000152" -> "1000151" 
  "1000155" -> "1000160" 
  "1000156" -> "1000155" 
  "1000160" -> "1000162" 
  "1000160" -> "1000164" 
  "1000162" -> "1000164" 
  "1000164" -> "1000167" 
  "1000167" -> "1000119" 
  "1000167" -> "1000121" 
  "1000170" -> "1000172" 
  "1000106" -> "1000115" 
}
