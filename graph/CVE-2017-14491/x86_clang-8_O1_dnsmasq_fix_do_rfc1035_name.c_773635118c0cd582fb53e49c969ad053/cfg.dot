digraph do_rfc1035_name {  
"1000120" [label = "(<operator>.assignment,v3 = a2)" ]
"1000123" [label = "(<operator>.assignment,result = a1)" ]
"1000132" [label = "(<operator>.assignment,v5 = (_BYTE *)result)" ]
"1000134" [label = "(<operator>.cast,(_BYTE *)result)" ]
"1000135" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000138" [label = "(<operator>.logicalOr,!*v3 || a3 && result + 1 > a3)" ]
"1000139" [label = "(<operator>.logicalNot,!*v3)" ]
"1000140" [label = "(<operator>.indirection,*v3)" ]
"1000142" [label = "(<operator>.logicalAnd,a3 && result + 1 > a3)" ]
"1000144" [label = "(<operator>.greaterThan,result + 1 > a3)" ]
"1000145" [label = "(<operator>.addition,result + 1)" ]
"1000151" [label = "(<operator>.assignment,i = 0)" ]
"1000154" [label = "(<operator>.preIncrement,++i)" ]
"1000157" [label = "(<operator>.assignment,v7 = v3[i])" ]
"1000159" [label = "(<operator>.indirectIndexAccess,v3[i])" ]
"1000163" [label = "(<operator>.logicalOr,!v7 || v7 == 46)" ]
"1000164" [label = "(<operator>.logicalNot,!v7)" ]
"1000166" [label = "(<operator>.equals,v7 == 46)" ]
"1000171" [label = "(<operator>.logicalAnd,a3 && (unsigned int)&v5[i + 2] > a3)" ]
"1000173" [label = "(<operator>.greaterThan,(unsigned int)&v5[i + 2] > a3)" ]
"1000174" [label = "(<operator>.cast,(unsigned int)&v5[i + 2])" ]
"1000175" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000176" [label = "(<operator>.addressOf,&v5[i + 2])" ]
"1000177" [label = "(<operator>.indirectIndexAccess,v5[i + 2])" ]
"1000179" [label = "(<operator>.addition,i + 2)" ]
"1000183" [label = "(RETURN,return (int)&v5[i + 1];,return (int)&v5[i + 1];)" ]
"1000184" [label = "(<operator>.cast,(int)&v5[i + 1])" ]
"1000185" [label = "(UNKNOWN,int,int)" ]
"1000186" [label = "(<operator>.addressOf,&v5[i + 1])" ]
"1000187" [label = "(<operator>.indirectIndexAccess,v5[i + 1])" ]
"1000189" [label = "(<operator>.addition,i + 1)" ]
"1000192" [label = "(<operator>.assignment,v5[i + 1] = v7)" ]
"1000193" [label = "(<operator>.indirectIndexAccess,v5[i + 1])" ]
"1000195" [label = "(<operator>.addition,i + 1)" ]
"1000199" [label = "(<operator>.assignment,*v5 = i)" ]
"1000200" [label = "(<operator>.indirection,*v5)" ]
"1000203" [label = "(<operator>.assignment,v8 = v3[i] == 0)" ]
"1000205" [label = "(<operator>.equals,v3[i] == 0)" ]
"1000206" [label = "(<operator>.indirectIndexAccess,v3[i])" ]
"1000210" [label = "(<operator>.assignment,v9 = &v3[i])" ]
"1000212" [label = "(<operator>.addressOf,&v3[i])" ]
"1000213" [label = "(<operator>.indirectIndexAccess,v3[i])" ]
"1000216" [label = "(<operator>.assignmentPlus,v3 += i + 1)" ]
"1000218" [label = "(<operator>.addition,i + 1)" ]
"1000223" [label = "(<operator>.assignment,v3 = v9)" ]
"1000226" [label = "(<operator>.assignment,result = (int)&v5[i + 1])" ]
"1000228" [label = "(<operator>.cast,(int)&v5[i + 1])" ]
"1000229" [label = "(UNKNOWN,int,int)" ]
"1000230" [label = "(<operator>.addressOf,&v5[i + 1])" ]
"1000231" [label = "(<operator>.indirectIndexAccess,v5[i + 1])" ]
"1000233" [label = "(<operator>.addition,i + 1)" ]
"1000237" [label = "(<operator>.logicalNot,!v3)" ]
"1000239" [label = "(RETURN,return (int)&v5[i + 1];,return (int)&v5[i + 1];)" ]
"1000240" [label = "(<operator>.cast,(int)&v5[i + 1])" ]
"1000241" [label = "(UNKNOWN,int,int)" ]
"1000242" [label = "(<operator>.addressOf,&v5[i + 1])" ]
"1000243" [label = "(<operator>.indirectIndexAccess,v5[i + 1])" ]
"1000245" [label = "(<operator>.addition,i + 1)" ]
"1000248" [label = "(RETURN,return result;,return result;)" ]
"1000108" [label = "(METHOD,do_rfc1035_name)" ]
"1000250" [label = "(METHOD_RETURN,int __cdecl)" ]
  "1000120" -> "1000123" 
  "1000123" -> "1000135" 
  "1000123" -> "1000248" 
  "1000123" -> "1000248" 
  "1000132" -> "1000140" 
  "1000134" -> "1000132" 
  "1000135" -> "1000134" 
  "1000138" -> "1000248" 
  "1000138" -> "1000151" 
  "1000139" -> "1000138" 
  "1000139" -> "1000142" 
  "1000139" -> "1000145" 
  "1000140" -> "1000139" 
  "1000142" -> "1000138" 
  "1000144" -> "1000142" 
  "1000145" -> "1000144" 
  "1000151" -> "1000159" 
  "1000154" -> "1000159" 
  "1000157" -> "1000164" 
  "1000159" -> "1000157" 
  "1000163" -> "1000200" 
  "1000163" -> "1000248" 
  "1000163" -> "1000175" 
  "1000163" -> "1000171" 
  "1000164" -> "1000163" 
  "1000164" -> "1000166" 
  "1000166" -> "1000163" 
  "1000171" -> "1000185" 
  "1000171" -> "1000195" 
  "1000173" -> "1000171" 
  "1000174" -> "1000173" 
  "1000175" -> "1000179" 
  "1000176" -> "1000174" 
  "1000177" -> "1000176" 
  "1000179" -> "1000177" 
  "1000183" -> "1000250" 
  "1000184" -> "1000183" 
  "1000185" -> "1000189" 
  "1000186" -> "1000184" 
  "1000187" -> "1000186" 
  "1000189" -> "1000187" 
  "1000192" -> "1000154" 
  "1000193" -> "1000192" 
  "1000195" -> "1000193" 
  "1000199" -> "1000206" 
  "1000200" -> "1000199" 
  "1000203" -> "1000213" 
  "1000205" -> "1000203" 
  "1000206" -> "1000205" 
  "1000210" -> "1000218" 
  "1000212" -> "1000210" 
  "1000213" -> "1000212" 
  "1000216" -> "1000223" 
  "1000216" -> "1000229" 
  "1000218" -> "1000216" 
  "1000223" -> "1000229" 
  "1000226" -> "1000237" 
  "1000228" -> "1000226" 
  "1000229" -> "1000233" 
  "1000230" -> "1000228" 
  "1000231" -> "1000230" 
  "1000233" -> "1000231" 
  "1000237" -> "1000241" 
  "1000237" -> "1000135" 
  "1000237" -> "1000248" 
  "1000239" -> "1000250" 
  "1000240" -> "1000239" 
  "1000241" -> "1000245" 
  "1000242" -> "1000240" 
  "1000243" -> "1000242" 
  "1000245" -> "1000243" 
  "1000248" -> "1000250" 
  "1000108" -> "1000120" 
}
