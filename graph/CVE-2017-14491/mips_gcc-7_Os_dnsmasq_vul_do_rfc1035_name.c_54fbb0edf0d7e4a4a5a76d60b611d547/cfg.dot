digraph do_rfc1035_name {  
"1000114" [label = "(<operator>.assignment,result = a1)" ]
"1000118" [label = "(<operator>.assignment,result = v3)" ]
"1000122" [label = "(<operator>.assignment,v3 = result + 1)" ]
"1000124" [label = "(<operator>.addition,result + 1)" ]
"1000128" [label = "(<operator>.logicalNot,!*a2)" ]
"1000129" [label = "(<operator>.indirection,*a2)" ]
"1000133" [label = "(<operator>.assignment,i = a2)" ]
"1000136" [label = "(<operator>.preIncrement,++i)" ]
"1000139" [label = "(<operator>.assignment,v5 = (char)*i)" ]
"1000141" [label = "(<operator>.cast,(char)*i)" ]
"1000142" [label = "(UNKNOWN,char,char)" ]
"1000143" [label = "(<operator>.indirection,*i)" ]
"1000146" [label = "(<operator>.logicalOr,!*i || v5 == 46)" ]
"1000147" [label = "(<operator>.logicalNot,!*i)" ]
"1000148" [label = "(<operator>.indirection,*i)" ]
"1000150" [label = "(<operator>.equals,v5 == 46)" ]
"1000154" [label = "(<operator>.assignment,*v3++ = v5)" ]
"1000155" [label = "(<operator>.indirection,*v3++)" ]
"1000156" [label = "(<operator>.postIncrement,v3++)" ]
"1000159" [label = "(<operator>.assignment,*result = (_BYTE)i - (_BYTE)a2)" ]
"1000160" [label = "(<operator>.indirection,*result)" ]
"1000162" [label = "(<operator>.subtraction,(_BYTE)i - (_BYTE)a2)" ]
"1000163" [label = "(<operator>.cast,(_BYTE)i)" ]
"1000164" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000166" [label = "(<operator>.cast,(_BYTE)a2)" ]
"1000167" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000170" [label = "(<operator>.indirection,*i)" ]
"1000172" [label = "(<operator>.preIncrement,++i)" ]
"1000174" [label = "(<operator>.assignment,a2 = i)" ]
"1000177" [label = "(RETURN,return result;,return result;)" ]
"1000105" [label = "(METHOD,do_rfc1035_name)" ]
"1000179" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000114" -> "1000124" 
  "1000114" -> "1000124" 
  "1000114" -> "1000177" 
  "1000118" -> "1000124" 
  "1000118" -> "1000124" 
  "1000118" -> "1000177" 
  "1000122" -> "1000129" 
  "1000124" -> "1000122" 
  "1000128" -> "1000177" 
  "1000128" -> "1000133" 
  "1000129" -> "1000128" 
  "1000133" -> "1000142" 
  "1000136" -> "1000142" 
  "1000139" -> "1000148" 
  "1000141" -> "1000139" 
  "1000142" -> "1000143" 
  "1000143" -> "1000141" 
  "1000146" -> "1000160" 
  "1000146" -> "1000177" 
  "1000146" -> "1000156" 
  "1000147" -> "1000146" 
  "1000147" -> "1000150" 
  "1000148" -> "1000147" 
  "1000150" -> "1000146" 
  "1000154" -> "1000136" 
  "1000155" -> "1000154" 
  "1000156" -> "1000155" 
  "1000159" -> "1000170" 
  "1000160" -> "1000164" 
  "1000162" -> "1000159" 
  "1000163" -> "1000167" 
  "1000164" -> "1000163" 
  "1000166" -> "1000162" 
  "1000167" -> "1000166" 
  "1000170" -> "1000172" 
  "1000170" -> "1000174" 
  "1000172" -> "1000174" 
  "1000174" -> "1000118" 
  "1000177" -> "1000179" 
  "1000105" -> "1000114" 
}
