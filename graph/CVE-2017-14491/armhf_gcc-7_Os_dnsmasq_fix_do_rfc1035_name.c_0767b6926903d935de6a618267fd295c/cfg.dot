digraph do_rfc1035_name {  
"1000122" [label = "(<operator>.logicalNot,!*a2)" ]
"1000123" [label = "(<operator>.indirection,*a2)" ]
"1000126" [label = "(<operator>.assignment,v3 = result + 1)" ]
"1000128" [label = "(<operator>.addition,result + 1)" ]
"1000135" [label = "(<operator>.greaterThan,(unsigned int)v3 > a3)" ]
"1000136" [label = "(<operator>.cast,(unsigned int)v3)" ]
"1000137" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000141" [label = "(<operator>.assignment,v4 = (char)a2)" ]
"1000143" [label = "(<operator>.cast,(char)a2)" ]
"1000144" [label = "(UNKNOWN,char,char)" ]
"1000146" [label = "(<operator>.assignment,v5 = a2)" ]
"1000152" [label = "(<operator>.assignment,v6 = (_BYTE)v5 - v4)" ]
"1000154" [label = "(<operator>.subtraction,(_BYTE)v5 - v4)" ]
"1000155" [label = "(<operator>.cast,(_BYTE)v5)" ]
"1000156" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000159" [label = "(<operator>.assignment,a2 = v5)" ]
"1000162" [label = "(<operator>.assignment,v8 = *v5++)" ]
"1000164" [label = "(<operator>.indirection,*v5++)" ]
"1000165" [label = "(<operator>.postIncrement,v5++)" ]
"1000167" [label = "(<operator>.assignment,v7 = v8)" ]
"1000171" [label = "(<operator>.logicalOr,!v8 || v7 == 46)" ]
"1000172" [label = "(<operator>.logicalNot,!v8)" ]
"1000174" [label = "(<operator>.equals,v7 == 46)" ]
"1000179" [label = "(<operator>.logicalAnd,a3 && a3 < (unsigned int)(v3 + 1))" ]
"1000181" [label = "(<operator>.lessThan,a3 < (unsigned int)(v3 + 1))" ]
"1000183" [label = "(<operator>.cast,(unsigned int)(v3 + 1))" ]
"1000184" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000185" [label = "(<operator>.addition,v3 + 1)" ]
"1000188" [label = "(RETURN,return v3;,return v3;)" ]
"1000190" [label = "(<operator>.assignment,*v3++ = v7)" ]
"1000191" [label = "(<operator>.indirection,*v3++)" ]
"1000192" [label = "(<operator>.postIncrement,v3++)" ]
"1000195" [label = "(<operator>.assignment,*result = v6)" ]
"1000196" [label = "(<operator>.indirection,*result)" ]
"1000200" [label = "(<operator>.indirection,*a2)" ]
"1000202" [label = "(<operator>.preIncrement,++a2)" ]
"1000204" [label = "(<operator>.assignment,result = v3)" ]
"1000207" [label = "(RETURN,return result;,return result;)" ]
"1000107" [label = "(METHOD,do_rfc1035_name)" ]
"1000209" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000122" -> "1000207" 
  "1000122" -> "1000128" 
  "1000123" -> "1000122" 
  "1000126" -> "1000137" 
  "1000126" -> "1000144" 
  "1000128" -> "1000126" 
  "1000135" -> "1000207" 
  "1000135" -> "1000144" 
  "1000136" -> "1000135" 
  "1000137" -> "1000136" 
  "1000141" -> "1000146" 
  "1000143" -> "1000141" 
  "1000144" -> "1000143" 
  "1000146" -> "1000156" 
  "1000146" -> "1000196" 
  "1000152" -> "1000159" 
  "1000154" -> "1000152" 
  "1000155" -> "1000154" 
  "1000156" -> "1000155" 
  "1000159" -> "1000165" 
  "1000162" -> "1000167" 
  "1000164" -> "1000162" 
  "1000165" -> "1000164" 
  "1000167" -> "1000172" 
  "1000171" -> "1000196" 
  "1000171" -> "1000207" 
  "1000171" -> "1000179" 
  "1000171" -> "1000184" 
  "1000172" -> "1000171" 
  "1000172" -> "1000174" 
  "1000174" -> "1000171" 
  "1000179" -> "1000188" 
  "1000179" -> "1000192" 
  "1000181" -> "1000179" 
  "1000183" -> "1000181" 
  "1000184" -> "1000185" 
  "1000185" -> "1000183" 
  "1000188" -> "1000209" 
  "1000190" -> "1000156" 
  "1000190" -> "1000196" 
  "1000191" -> "1000190" 
  "1000192" -> "1000191" 
  "1000195" -> "1000200" 
  "1000196" -> "1000195" 
  "1000200" -> "1000202" 
  "1000200" -> "1000204" 
  "1000202" -> "1000204" 
  "1000204" -> "1000123" 
  "1000204" -> "1000207" 
  "1000207" -> "1000209" 
  "1000107" -> "1000123" 
  "1000107" -> "1000207" 
}
