digraph do_rfc1035_name {  
"1000120" [label = "(<operator>.logicalNot,!*a2)" ]
"1000121" [label = "(<operator>.indirection,*a2)" ]
"1000124" [label = "(<operator>.assignment,v3 = result + 1)" ]
"1000126" [label = "(<operator>.addition,result + 1)" ]
"1000133" [label = "(<operator>.lessThan,a3 < (unsigned __int64)v3)" ]
"1000135" [label = "(<operator>.cast,(unsigned __int64)v3)" ]
"1000136" [label = "(UNKNOWN,unsigned __int64,unsigned __int64)" ]
"1000141" [label = "(<operator>.assignment,v6 = (unsigned __int8)a2[i])" ]
"1000143" [label = "(<operator>.cast,(unsigned __int8)a2[i])" ]
"1000144" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000145" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000148" [label = "(<operator>.assignment,v7 = &a2[i])" ]
"1000150" [label = "(<operator>.addressOf,&a2[i])" ]
"1000151" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000155" [label = "(<operator>.logicalOr,v6 == 46 || v6 == 0)" ]
"1000156" [label = "(<operator>.equals,v6 == 46)" ]
"1000159" [label = "(<operator>.equals,v6 == 0)" ]
"1000163" [label = "(<operator>.assignment,v5 = v3 + 1)" ]
"1000165" [label = "(<operator>.addition,v3 + 1)" ]
"1000169" [label = "(<operator>.logicalAnd,a3 && a3 < (unsigned __int64)v5)" ]
"1000171" [label = "(<operator>.lessThan,a3 < (unsigned __int64)v5)" ]
"1000173" [label = "(<operator>.cast,(unsigned __int64)v5)" ]
"1000174" [label = "(UNKNOWN,unsigned __int64,unsigned __int64)" ]
"1000176" [label = "(RETURN,return v3;,return v3;)" ]
"1000178" [label = "(<operator>.preIncrement,++v3)" ]
"1000180" [label = "(<operator>.assignment,*(v5 - 1) = v6)" ]
"1000181" [label = "(<operator>.indirection,*(v5 - 1))" ]
"1000182" [label = "(<operator>.subtraction,v5 - 1)" ]
"1000186" [label = "(<operator>.assignment,*result = i)" ]
"1000187" [label = "(<operator>.indirection,*result)" ]
"1000191" [label = "(<operator>.indirection,*v7)" ]
"1000193" [label = "(<operator>.preIncrement,++v7)" ]
"1000195" [label = "(<operator>.assignment,a2 = v7)" ]
"1000198" [label = "(<operator>.assignment,result = v3)" ]
"1000201" [label = "(RETURN,return result;,return result;)" ]
"1000106" [label = "(METHOD,do_rfc1035_name)" ]
"1000203" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000120" -> "1000201" 
  "1000120" -> "1000126" 
  "1000121" -> "1000120" 
  "1000124" -> "1000136" 
  "1000124" -> "1000144" 
  "1000126" -> "1000124" 
  "1000133" -> "1000201" 
  "1000133" -> "1000144" 
  "1000135" -> "1000133" 
  "1000136" -> "1000135" 
  "1000141" -> "1000151" 
  "1000143" -> "1000141" 
  "1000144" -> "1000145" 
  "1000145" -> "1000143" 
  "1000148" -> "1000156" 
  "1000150" -> "1000148" 
  "1000151" -> "1000150" 
  "1000155" -> "1000201" 
  "1000155" -> "1000165" 
  "1000156" -> "1000155" 
  "1000156" -> "1000159" 
  "1000159" -> "1000155" 
  "1000163" -> "1000169" 
  "1000163" -> "1000174" 
  "1000165" -> "1000163" 
  "1000169" -> "1000176" 
  "1000169" -> "1000178" 
  "1000171" -> "1000169" 
  "1000173" -> "1000171" 
  "1000174" -> "1000173" 
  "1000176" -> "1000203" 
  "1000178" -> "1000182" 
  "1000180" -> "1000187" 
  "1000181" -> "1000180" 
  "1000182" -> "1000181" 
  "1000186" -> "1000191" 
  "1000187" -> "1000186" 
  "1000191" -> "1000193" 
  "1000191" -> "1000195" 
  "1000193" -> "1000195" 
  "1000195" -> "1000198" 
  "1000198" -> "1000121" 
  "1000198" -> "1000201" 
  "1000201" -> "1000203" 
  "1000106" -> "1000121" 
  "1000106" -> "1000201" 
}
