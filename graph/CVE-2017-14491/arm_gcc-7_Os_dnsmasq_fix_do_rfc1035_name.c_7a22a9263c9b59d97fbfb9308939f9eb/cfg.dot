digraph do_rfc1035_name {  
"1000122" [label = "(<operator>.indirection,*a2)" ]
"1000125" [label = "(<operator>.assignment,v3 = result + 1)" ]
"1000127" [label = "(<operator>.addition,result + 1)" ]
"1000131" [label = "(<operator>.logicalOr,!a3 || a3 >= (unsigned int)v3)" ]
"1000132" [label = "(<operator>.logicalNot,!a3)" ]
"1000134" [label = "(<operator>.greaterEqualsThan,a3 >= (unsigned int)v3)" ]
"1000136" [label = "(<operator>.cast,(unsigned int)v3)" ]
"1000137" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000143" [label = "(<operator>.assignment,v4 = (char)a2)" ]
"1000145" [label = "(<operator>.cast,(char)a2)" ]
"1000146" [label = "(UNKNOWN,char,char)" ]
"1000148" [label = "(<operator>.assignment,v5 = a2)" ]
"1000154" [label = "(<operator>.assignment,v6 = (unsigned __int8)*v5)" ]
"1000156" [label = "(<operator>.cast,(unsigned __int8)*v5)" ]
"1000157" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000158" [label = "(<operator>.indirection,*v5)" ]
"1000160" [label = "(<operator>.assignment,v7 = (_BYTE)v5 - v4)" ]
"1000162" [label = "(<operator>.subtraction,(_BYTE)v5 - v4)" ]
"1000163" [label = "(<operator>.cast,(_BYTE)v5)" ]
"1000164" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000167" [label = "(<operator>.assignment,v8 = v6 == 0)" ]
"1000169" [label = "(<operator>.equals,v6 == 0)" ]
"1000173" [label = "(<operator>.indirection,*v5)" ]
"1000175" [label = "(<operator>.assignment,v8 = v6 == 46)" ]
"1000177" [label = "(<operator>.equals,v6 == 46)" ]
"1000180" [label = "(<operator>.assignment,a2 = v5++)" ]
"1000182" [label = "(<operator>.postIncrement,v5++)" ]
"1000188" [label = "(<operator>.logicalAnd,a3 && a3 < (unsigned int)(v3 + 1))" ]
"1000190" [label = "(<operator>.lessThan,a3 < (unsigned int)(v3 + 1))" ]
"1000192" [label = "(<operator>.cast,(unsigned int)(v3 + 1))" ]
"1000193" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000194" [label = "(<operator>.addition,v3 + 1)" ]
"1000197" [label = "(RETURN,return v3;,return v3;)" ]
"1000199" [label = "(<operator>.assignment,*v3++ = v6)" ]
"1000200" [label = "(<operator>.indirection,*v3++)" ]
"1000201" [label = "(<operator>.postIncrement,v3++)" ]
"1000204" [label = "(<operator>.assignment,*result = v7)" ]
"1000205" [label = "(<operator>.indirection,*result)" ]
"1000209" [label = "(<operator>.indirection,*a2)" ]
"1000211" [label = "(<operator>.assignment,a2 = v5)" ]
"1000214" [label = "(<operator>.assignment,result = v3)" ]
"1000218" [label = "(<operator>.logicalNot,!a2)" ]
"1000222" [label = "(<operator>.logicalNot,!*a2)" ]
"1000223" [label = "(<operator>.indirection,*a2)" ]
"1000226" [label = "(<operator>.preIncrement,++v3)" ]
"1000232" [label = "(<operator>.lessThan,a3 < (unsigned int)v3)" ]
"1000234" [label = "(<operator>.cast,(unsigned int)v3)" ]
"1000235" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000238" [label = "(RETURN,return result;,return result;)" ]
"1000107" [label = "(METHOD,do_rfc1035_name)" ]
"1000240" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000122" -> "1000127" 
  "1000122" -> "1000238" 
  "1000125" -> "1000132" 
  "1000127" -> "1000125" 
  "1000131" -> "1000146" 
  "1000131" -> "1000238" 
  "1000131" -> "1000238" 
  "1000132" -> "1000131" 
  "1000132" -> "1000137" 
  "1000134" -> "1000131" 
  "1000136" -> "1000134" 
  "1000137" -> "1000136" 
  "1000143" -> "1000148" 
  "1000145" -> "1000143" 
  "1000146" -> "1000145" 
  "1000148" -> "1000157" 
  "1000148" -> "1000205" 
  "1000154" -> "1000164" 
  "1000156" -> "1000154" 
  "1000157" -> "1000158" 
  "1000158" -> "1000156" 
  "1000160" -> "1000169" 
  "1000162" -> "1000160" 
  "1000163" -> "1000162" 
  "1000164" -> "1000163" 
  "1000167" -> "1000173" 
  "1000169" -> "1000167" 
  "1000173" -> "1000177" 
  "1000173" -> "1000182" 
  "1000175" -> "1000182" 
  "1000177" -> "1000175" 
  "1000180" -> "1000205" 
  "1000180" -> "1000238" 
  "1000180" -> "1000188" 
  "1000180" -> "1000193" 
  "1000182" -> "1000180" 
  "1000188" -> "1000197" 
  "1000188" -> "1000201" 
  "1000190" -> "1000188" 
  "1000192" -> "1000190" 
  "1000193" -> "1000194" 
  "1000194" -> "1000192" 
  "1000197" -> "1000240" 
  "1000199" -> "1000157" 
  "1000199" -> "1000205" 
  "1000200" -> "1000199" 
  "1000201" -> "1000200" 
  "1000204" -> "1000209" 
  "1000205" -> "1000204" 
  "1000209" -> "1000211" 
  "1000209" -> "1000214" 
  "1000211" -> "1000214" 
  "1000214" -> "1000218" 
  "1000218" -> "1000238" 
  "1000218" -> "1000223" 
  "1000222" -> "1000238" 
  "1000222" -> "1000226" 
  "1000223" -> "1000222" 
  "1000226" -> "1000146" 
  "1000226" -> "1000238" 
  "1000226" -> "1000235" 
  "1000232" -> "1000146" 
  "1000232" -> "1000238" 
  "1000232" -> "1000238" 
  "1000234" -> "1000232" 
  "1000235" -> "1000234" 
  "1000238" -> "1000240" 
  "1000107" -> "1000122" 
  "1000107" -> "1000238" 
}
