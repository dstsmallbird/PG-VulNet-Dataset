digraph do_rfc1035_name {  
"1000117" [label = "(<operator>.assignment,v2 = a2)" ]
"1000120" [label = "(<operator>.assignment,v3 = a1)" ]
"1000124" [label = "(<operator>.logicalNot,!a2)" ]
"1000126" [label = "(RETURN,return a1;,return a1;)" ]
"1000128" [label = "(<operator>.assignment,v4 = *a2)" ]
"1000130" [label = "(<operator>.indirection,*a2)" ]
"1000133" [label = "(<operator>.logicalNot,!*a2)" ]
"1000134" [label = "(<operator>.indirection,*a2)" ]
"1000136" [label = "(RETURN,return a1;,return a1;)" ]
"1000138" [label = "(<operator>.assignment,result = a1 + 1)" ]
"1000140" [label = "(<operator>.addition,a1 + 1)" ]
"1000144" [label = "(<operator>.equals,v4 == 46)" ]
"1000151" [label = "(<operator>.assignment,*result++ = v4)" ]
"1000152" [label = "(<operator>.indirection,*result++)" ]
"1000153" [label = "(<operator>.postIncrement,result++)" ]
"1000156" [label = "(<operator>.assignment,v4 = *++v2)" ]
"1000158" [label = "(<operator>.indirection,*++v2)" ]
"1000159" [label = "(<operator>.preIncrement,++v2)" ]
"1000161" [label = "(<operator>.logicalAnd,*v2 && v4 != 46)" ]
"1000162" [label = "(<operator>.indirection,*v2)" ]
"1000164" [label = "(<operator>.notEquals,v4 != 46)" ]
"1000167" [label = "(<operator>.assignment,v6 = (_BYTE)result - 1 - (_BYTE)v3)" ]
"1000169" [label = "(<operator>.subtraction,(_BYTE)result - 1 - (_BYTE)v3)" ]
"1000170" [label = "(<operator>.cast,(_BYTE)result)" ]
"1000171" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000173" [label = "(<operator>.subtraction,1 - (_BYTE)v3)" ]
"1000175" [label = "(<operator>.cast,(_BYTE)v3)" ]
"1000176" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000178" [label = "(<operator>.assignment,v7 = v2)" ]
"1000184" [label = "(<operator>.assignment,*v3 = v6)" ]
"1000185" [label = "(<operator>.indirection,*v3)" ]
"1000189" [label = "(<operator>.logicalNot,!*v2)" ]
"1000190" [label = "(<operator>.indirection,*v2)" ]
"1000192" [label = "(RETURN,return result;,return result;)" ]
"1000195" [label = "(<operator>.logicalNot,!++v2)" ]
"1000196" [label = "(<operator>.preIncrement,++v2)" ]
"1000198" [label = "(RETURN,return result;,return result;)" ]
"1000200" [label = "(<operator>.assignment,v4 = v7[1])" ]
"1000202" [label = "(<operator>.indirectIndexAccess,v7[1])" ]
"1000206" [label = "(<operator>.logicalNot,!v4)" ]
"1000208" [label = "(RETURN,return result;,return result;)" ]
"1000210" [label = "(<operator>.assignment,v3 = result++)" ]
"1000212" [label = "(<operator>.postIncrement,result++)" ]
"1000215" [label = "(<operator>.notEquals,v4 != 46)" ]
"1000220" [label = "(<operator>.assignment,v7 = v2)" ]
"1000223" [label = "(<operator>.assignment,v6 = 0)" ]
"1000107" [label = "(METHOD,do_rfc1035_name)" ]
"1000226" [label = "(METHOD_RETURN,__cdecl)" ]
  "1000117" -> "1000120" 
  "1000120" -> "1000124" 
  "1000124" -> "1000126" 
  "1000124" -> "1000130" 
  "1000126" -> "1000226" 
  "1000128" -> "1000134" 
  "1000130" -> "1000128" 
  "1000133" -> "1000136" 
  "1000133" -> "1000140" 
  "1000134" -> "1000133" 
  "1000136" -> "1000226" 
  "1000138" -> "1000144" 
  "1000140" -> "1000138" 
  "1000144" -> "1000220" 
  "1000144" -> "1000153" 
  "1000151" -> "1000159" 
  "1000152" -> "1000151" 
  "1000153" -> "1000152" 
  "1000156" -> "1000162" 
  "1000158" -> "1000156" 
  "1000159" -> "1000158" 
  "1000161" -> "1000153" 
  "1000161" -> "1000171" 
  "1000162" -> "1000161" 
  "1000162" -> "1000164" 
  "1000164" -> "1000161" 
  "1000167" -> "1000178" 
  "1000169" -> "1000167" 
  "1000170" -> "1000176" 
  "1000171" -> "1000170" 
  "1000173" -> "1000169" 
  "1000175" -> "1000173" 
  "1000176" -> "1000175" 
  "1000178" -> "1000226" 
  "1000178" -> "1000185" 
  "1000184" -> "1000190" 
  "1000185" -> "1000184" 
  "1000189" -> "1000192" 
  "1000189" -> "1000196" 
  "1000190" -> "1000189" 
  "1000192" -> "1000226" 
  "1000195" -> "1000198" 
  "1000195" -> "1000202" 
  "1000196" -> "1000195" 
  "1000198" -> "1000226" 
  "1000200" -> "1000206" 
  "1000202" -> "1000200" 
  "1000206" -> "1000208" 
  "1000206" -> "1000212" 
  "1000208" -> "1000226" 
  "1000210" -> "1000215" 
  "1000212" -> "1000210" 
  "1000215" -> "1000153" 
  "1000215" -> "1000220" 
  "1000220" -> "1000223" 
  "1000223" -> "1000226" 
  "1000223" -> "1000185" 
  "1000107" -> "1000117" 
}
