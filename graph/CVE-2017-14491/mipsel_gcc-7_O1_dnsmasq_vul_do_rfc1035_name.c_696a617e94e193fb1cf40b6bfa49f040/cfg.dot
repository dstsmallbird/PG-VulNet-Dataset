digraph do_rfc1035_name {  
"1000113" [label = "(<operator>.assignment,result = a1)" ]
"1000120" [label = "(<operator>.indirection,*a2)" ]
"1000125" [label = "(<operator>.assignment,v5 = *a2)" ]
"1000127" [label = "(<operator>.indirection,*a2)" ]
"1000129" [label = "(<operator>.assignment,result = a1 + 1)" ]
"1000131" [label = "(<operator>.addition,a1 + 1)" ]
"1000135" [label = "(<operator>.indirection,*a2)" ]
"1000138" [label = "(<operator>.assignment,v3 = a2)" ]
"1000142" [label = "(<operator>.equals,v5 == 46)" ]
"1000146" [label = "(<operator>.assignment,v4 = 0)" ]
"1000151" [label = "(<operator>.assignment,result = a1 + 2)" ]
"1000153" [label = "(<operator>.addition,a1 + 2)" ]
"1000159" [label = "(<operator>.assignment,*(result - 1) = v5)" ]
"1000160" [label = "(<operator>.indirection,*(result - 1))" ]
"1000161" [label = "(<operator>.subtraction,result - 1)" ]
"1000165" [label = "(<operator>.preIncrement,++v3)" ]
"1000167" [label = "(<operator>.assignment,v4 = (_BYTE)result - 1 - (_BYTE)a1)" ]
"1000169" [label = "(<operator>.subtraction,(_BYTE)result - 1 - (_BYTE)a1)" ]
"1000170" [label = "(<operator>.cast,(_BYTE)result)" ]
"1000171" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000173" [label = "(<operator>.subtraction,1 - (_BYTE)a1)" ]
"1000175" [label = "(<operator>.cast,(_BYTE)a1)" ]
"1000176" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000178" [label = "(<operator>.assignment,v5 = *v3)" ]
"1000180" [label = "(<operator>.indirection,*v3)" ]
"1000183" [label = "(<operator>.logicalNot,!*v3)" ]
"1000184" [label = "(<operator>.indirection,*v3)" ]
"1000187" [label = "(<operator>.preIncrement,++result)" ]
"1000190" [label = "(<operator>.equals,v5 == 46)" ]
"1000194" [label = "(<operator>.preDecrement,--result)" ]
"1000196" [label = "(<operator>.assignment,*a1 = v4)" ]
"1000197" [label = "(<operator>.indirection,*a1)" ]
"1000203" [label = "(<operator>.assignment,v3 = a2)" ]
"1000206" [label = "(<operator>.assignment,v4 = 0)" ]
"1000209" [label = "(<operator>.assignment,*a1 = v4)" ]
"1000210" [label = "(<operator>.indirection,*a1)" ]
"1000214" [label = "(<operator>.assignment,a2 = v3 + 1)" ]
"1000216" [label = "(<operator>.addition,v3 + 1)" ]
"1000220" [label = "(<operator>.logicalNot,!*v3)" ]
"1000221" [label = "(<operator>.indirection,*v3)" ]
"1000225" [label = "(<operator>.equals,v3 == (char *)-1)" ]
"1000227" [label = "(<operator>.cast,(char *)-1)" ]
"1000228" [label = "(UNKNOWN,char *,char *)" ]
"1000229" [label = "(<operator>.minus,-1)" ]
"1000232" [label = "(<operator>.assignment,a1 = result)" ]
"1000235" [label = "(<operator>.indirectIndexAccess,v3[1])" ]
"1000240" [label = "(<operator>.assignment,result = a1)" ]
"1000243" [label = "(RETURN,return result;,return result;)" ]
"1000105" [label = "(METHOD,do_rfc1035_name)" ]
"1000245" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000113" -> "1000120" 
  "1000113" -> "1000243" 
  "1000120" -> "1000127" 
  "1000120" -> "1000240" 
  "1000125" -> "1000131" 
  "1000127" -> "1000125" 
  "1000129" -> "1000135" 
  "1000131" -> "1000129" 
  "1000135" -> "1000138" 
  "1000135" -> "1000203" 
  "1000138" -> "1000142" 
  "1000142" -> "1000146" 
  "1000142" -> "1000153" 
  "1000146" -> "1000210" 
  "1000151" -> "1000161" 
  "1000151" -> "1000210" 
  "1000153" -> "1000151" 
  "1000159" -> "1000165" 
  "1000160" -> "1000159" 
  "1000161" -> "1000160" 
  "1000165" -> "1000171" 
  "1000167" -> "1000180" 
  "1000169" -> "1000167" 
  "1000170" -> "1000176" 
  "1000171" -> "1000170" 
  "1000173" -> "1000169" 
  "1000175" -> "1000173" 
  "1000176" -> "1000175" 
  "1000178" -> "1000184" 
  "1000180" -> "1000178" 
  "1000183" -> "1000210" 
  "1000183" -> "1000243" 
  "1000183" -> "1000187" 
  "1000184" -> "1000183" 
  "1000187" -> "1000190" 
  "1000190" -> "1000161" 
  "1000190" -> "1000210" 
  "1000190" -> "1000194" 
  "1000194" -> "1000197" 
  "1000196" -> "1000216" 
  "1000196" -> "1000216" 
  "1000197" -> "1000196" 
  "1000203" -> "1000206" 
  "1000206" -> "1000210" 
  "1000209" -> "1000216" 
  "1000210" -> "1000209" 
  "1000214" -> "1000221" 
  "1000216" -> "1000214" 
  "1000220" -> "1000243" 
  "1000220" -> "1000228" 
  "1000221" -> "1000220" 
  "1000225" -> "1000243" 
  "1000225" -> "1000232" 
  "1000227" -> "1000225" 
  "1000228" -> "1000229" 
  "1000229" -> "1000227" 
  "1000232" -> "1000235" 
  "1000235" -> "1000127" 
  "1000235" -> "1000243" 
  "1000240" -> "1000243" 
  "1000243" -> "1000245" 
  "1000105" -> "1000113" 
}
