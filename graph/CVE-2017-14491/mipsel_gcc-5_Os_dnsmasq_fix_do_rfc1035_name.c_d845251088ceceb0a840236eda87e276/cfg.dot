digraph do_rfc1035_name {  
"1000118" [label = "(<operator>.assignment,result = a1)" ]
"1000128" [label = "(<operator>.indirection,*a2)" ]
"1000131" [label = "(<operator>.assignment,v4 = result + 1)" ]
"1000133" [label = "(<operator>.addition,result + 1)" ]
"1000137" [label = "(<operator>.logicalOr,!a3 || a3 >= (unsigned int)v4)" ]
"1000138" [label = "(<operator>.logicalNot,!a3)" ]
"1000140" [label = "(<operator>.greaterEqualsThan,a3 >= (unsigned int)v4)" ]
"1000142" [label = "(<operator>.cast,(unsigned int)v4)" ]
"1000143" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000147" [label = "(<operator>.assignment,i = a2)" ]
"1000150" [label = "(<operator>.preIncrement,++i)" ]
"1000153" [label = "(<operator>.assignment,v6 = (char)*i)" ]
"1000155" [label = "(<operator>.cast,(char)*i)" ]
"1000156" [label = "(UNKNOWN,char,char)" ]
"1000157" [label = "(<operator>.indirection,*i)" ]
"1000159" [label = "(<operator>.assignment,v7 = (_BYTE)i - (_BYTE)a2)" ]
"1000161" [label = "(<operator>.subtraction,(_BYTE)i - (_BYTE)a2)" ]
"1000162" [label = "(<operator>.cast,(_BYTE)i)" ]
"1000163" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000165" [label = "(<operator>.cast,(_BYTE)a2)" ]
"1000166" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000169" [label = "(<operator>.logicalNot,!*i)" ]
"1000170" [label = "(<operator>.indirection,*i)" ]
"1000174" [label = "(<operator>.equals,v6 == 46)" ]
"1000178" [label = "(<operator>.assignment,*result = v7)" ]
"1000179" [label = "(<operator>.indirection,*result)" ]
"1000183" [label = "(<operator>.assignment,v8 = v4 + 1)" ]
"1000185" [label = "(<operator>.addition,v4 + 1)" ]
"1000189" [label = "(<operator>.logicalAnd,a3 && a3 < (unsigned int)v8)" ]
"1000191" [label = "(<operator>.lessThan,a3 < (unsigned int)v8)" ]
"1000193" [label = "(<operator>.cast,(unsigned int)v8)" ]
"1000194" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000196" [label = "(RETURN,return v4;,return v4;)" ]
"1000198" [label = "(<operator>.preIncrement,++v4)" ]
"1000200" [label = "(<operator>.assignment,*(v8 - 1) = v6)" ]
"1000201" [label = "(<operator>.indirection,*(v8 - 1))" ]
"1000202" [label = "(<operator>.subtraction,v8 - 1)" ]
"1000206" [label = "(<operator>.assignment,*result = v7)" ]
"1000207" [label = "(<operator>.indirection,*result)" ]
"1000211" [label = "(<operator>.assignment,result = v4)" ]
"1000214" [label = "(<operator>.assignment,a2 = &i[*i != 0])" ]
"1000216" [label = "(<operator>.addressOf,&i[*i != 0])" ]
"1000217" [label = "(<operator>.indirectIndexAccess,i[*i != 0])" ]
"1000219" [label = "(<operator>.notEquals,*i != 0)" ]
"1000220" [label = "(<operator>.indirection,*i)" ]
"1000224" [label = "(RETURN,return result;,return result;)" ]
"1000107" [label = "(METHOD,do_rfc1035_name)" ]
"1000226" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000118" -> "1000226" 
  "1000118" -> "1000128" 
  "1000118" -> "1000224" 
  "1000128" -> "1000133" 
  "1000128" -> "1000224" 
  "1000131" -> "1000138" 
  "1000133" -> "1000131" 
  "1000137" -> "1000147" 
  "1000137" -> "1000224" 
  "1000138" -> "1000137" 
  "1000138" -> "1000143" 
  "1000140" -> "1000137" 
  "1000142" -> "1000140" 
  "1000143" -> "1000142" 
  "1000147" -> "1000156" 
  "1000150" -> "1000156" 
  "1000153" -> "1000163" 
  "1000155" -> "1000153" 
  "1000156" -> "1000157" 
  "1000157" -> "1000155" 
  "1000159" -> "1000170" 
  "1000161" -> "1000159" 
  "1000162" -> "1000166" 
  "1000163" -> "1000162" 
  "1000165" -> "1000161" 
  "1000166" -> "1000165" 
  "1000169" -> "1000226" 
  "1000169" -> "1000207" 
  "1000169" -> "1000174" 
  "1000170" -> "1000169" 
  "1000174" -> "1000179" 
  "1000174" -> "1000185" 
  "1000178" -> "1000211" 
  "1000179" -> "1000178" 
  "1000183" -> "1000189" 
  "1000183" -> "1000194" 
  "1000185" -> "1000183" 
  "1000189" -> "1000196" 
  "1000189" -> "1000198" 
  "1000191" -> "1000189" 
  "1000193" -> "1000191" 
  "1000194" -> "1000193" 
  "1000196" -> "1000226" 
  "1000198" -> "1000202" 
  "1000200" -> "1000150" 
  "1000201" -> "1000200" 
  "1000202" -> "1000201" 
  "1000206" -> "1000211" 
  "1000207" -> "1000206" 
  "1000211" -> "1000220" 
  "1000214" -> "1000226" 
  "1000214" -> "1000128" 
  "1000214" -> "1000224" 
  "1000216" -> "1000214" 
  "1000217" -> "1000216" 
  "1000219" -> "1000217" 
  "1000220" -> "1000219" 
  "1000224" -> "1000226" 
  "1000107" -> "1000118" 
}
