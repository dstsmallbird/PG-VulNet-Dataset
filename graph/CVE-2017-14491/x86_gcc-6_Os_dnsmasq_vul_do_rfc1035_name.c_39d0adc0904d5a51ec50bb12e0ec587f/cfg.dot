digraph do_rfc1035_name {  
"1000113" [label = "(<operator>.assignment,result = a1)" ]
"1000117" [label = "(<operator>.logicalAnd,a2 && *a2)" ]
"1000119" [label = "(<operator>.indirection,*a2)" ]
"1000122" [label = "(<operator>.assignment,v4 = result + 1)" ]
"1000124" [label = "(<operator>.addition,result + 1)" ]
"1000128" [label = "(<operator>.assignment,i = a2)" ]
"1000131" [label = "(<operator>.preIncrement,++i)" ]
"1000134" [label = "(<operator>.assignment,v6 = *i)" ]
"1000136" [label = "(<operator>.indirection,*i)" ]
"1000139" [label = "(<operator>.logicalOr,!*i || v6 == 46)" ]
"1000140" [label = "(<operator>.logicalNot,!*i)" ]
"1000141" [label = "(<operator>.indirection,*i)" ]
"1000143" [label = "(<operator>.equals,v6 == 46)" ]
"1000147" [label = "(<operator>.assignment,*v4++ = v6)" ]
"1000148" [label = "(<operator>.indirection,*v4++)" ]
"1000149" [label = "(<operator>.postIncrement,v4++)" ]
"1000152" [label = "(<operator>.assignment,*result = (_BYTE)i - (_BYTE)a2)" ]
"1000153" [label = "(<operator>.indirection,*result)" ]
"1000155" [label = "(<operator>.subtraction,(_BYTE)i - (_BYTE)a2)" ]
"1000156" [label = "(<operator>.cast,(_BYTE)i)" ]
"1000157" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000159" [label = "(<operator>.cast,(_BYTE)a2)" ]
"1000160" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000162" [label = "(<operator>.assignment,result = v4)" ]
"1000165" [label = "(<operator>.assignment,a2 = &i[-(*i == 0) + 1])" ]
"1000167" [label = "(<operator>.addressOf,&i[-(*i == 0) + 1])" ]
"1000168" [label = "(<operator>.indirectIndexAccess,i[-(*i == 0) + 1])" ]
"1000170" [label = "(<operator>.addition,-(*i == 0) + 1)" ]
"1000171" [label = "(<operator>.minus,-(*i == 0))" ]
"1000172" [label = "(<operator>.equals,*i == 0)" ]
"1000173" [label = "(<operator>.indirection,*i)" ]
"1000177" [label = "(RETURN,return result;,return result;)" ]
"1000105" [label = "(METHOD,do_rfc1035_name)" ]
"1000179" [label = "(METHOD_RETURN,__cdecl)" ]
  "1000113" -> "1000117" 
  "1000113" -> "1000119" 
  "1000117" -> "1000124" 
  "1000117" -> "1000177" 
  "1000119" -> "1000117" 
  "1000122" -> "1000128" 
  "1000124" -> "1000122" 
  "1000128" -> "1000136" 
  "1000131" -> "1000136" 
  "1000134" -> "1000141" 
  "1000136" -> "1000134" 
  "1000139" -> "1000153" 
  "1000139" -> "1000177" 
  "1000139" -> "1000149" 
  "1000140" -> "1000139" 
  "1000140" -> "1000143" 
  "1000141" -> "1000140" 
  "1000143" -> "1000139" 
  "1000147" -> "1000131" 
  "1000148" -> "1000147" 
  "1000149" -> "1000148" 
  "1000152" -> "1000162" 
  "1000153" -> "1000157" 
  "1000155" -> "1000152" 
  "1000156" -> "1000160" 
  "1000157" -> "1000156" 
  "1000159" -> "1000155" 
  "1000160" -> "1000159" 
  "1000162" -> "1000173" 
  "1000165" -> "1000117" 
  "1000165" -> "1000119" 
  "1000167" -> "1000165" 
  "1000168" -> "1000167" 
  "1000170" -> "1000168" 
  "1000171" -> "1000170" 
  "1000172" -> "1000171" 
  "1000173" -> "1000172" 
  "1000177" -> "1000179" 
  "1000105" -> "1000113" 
}
