digraph do_rfc1035_name {  
"1000112" [label = "(<operator>.logicalNot,!a2)" ]
"1000114" [label = "(RETURN,return a1;,return a1;)" ]
"1000116" [label = "(<operator>.assignment,v2 = *a2)" ]
"1000118" [label = "(<operator>.indirection,*a2)" ]
"1000121" [label = "(<operator>.logicalNot,!*a2)" ]
"1000122" [label = "(<operator>.indirection,*a2)" ]
"1000124" [label = "(RETURN,return a1;,return a1;)" ]
"1000126" [label = "(<operator>.assignment,result = a1 + 1)" ]
"1000128" [label = "(<operator>.addition,a1 + 1)" ]
"1000132" [label = "(<operator>.equals,v2 == 46)" ]
"1000137" [label = "(<operator>.assignment,v4 = a2)" ]
"1000142" [label = "(<operator>.preIncrement,++v4)" ]
"1000144" [label = "(<operator>.assignment,*result++ = v2)" ]
"1000145" [label = "(<operator>.indirection,*result++)" ]
"1000146" [label = "(<operator>.postIncrement,result++)" ]
"1000149" [label = "(<operator>.assignment,v2 = *v4)" ]
"1000151" [label = "(<operator>.indirection,*v4)" ]
"1000153" [label = "(<operator>.logicalAnd,*v4 && v2 != 46)" ]
"1000154" [label = "(<operator>.indirection,*v4)" ]
"1000156" [label = "(<operator>.notEquals,v2 != 46)" ]
"1000159" [label = "(<operator>.assignment,*a1 = (_BYTE)v4 - (_BYTE)a2)" ]
"1000160" [label = "(<operator>.indirection,*a1)" ]
"1000162" [label = "(<operator>.subtraction,(_BYTE)v4 - (_BYTE)a2)" ]
"1000163" [label = "(<operator>.cast,(_BYTE)v4)" ]
"1000164" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000166" [label = "(<operator>.cast,(_BYTE)a2)" ]
"1000167" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000169" [label = "(<operator>.assignment,a2 = v4 + 1)" ]
"1000171" [label = "(<operator>.addition,v4 + 1)" ]
"1000175" [label = "(<operator>.indirection,*v4)" ]
"1000181" [label = "(<operator>.logicalNot,!a2)" ]
"1000184" [label = "(<operator>.assignment,v2 = v4[1])" ]
"1000186" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000189" [label = "(<operator>.assignment,a1 = result)" ]
"1000193" [label = "(<operator>.logicalNot,!v4[1])" ]
"1000194" [label = "(<operator>.indirectIndexAccess,v4[1])" ]
"1000198" [label = "(<operator>.preIncrement,++result)" ]
"1000201" [label = "(<operator>.notEquals,v2 != 46)" ]
"1000206" [label = "(<operator>.assignment,v4 = a2)" ]
"1000209" [label = "(<operator>.assignment,*a1 = 0)" ]
"1000210" [label = "(<operator>.indirection,*a1)" ]
"1000213" [label = "(<operator>.indirection,*a2++)" ]
"1000214" [label = "(<operator>.postIncrement,a2++)" ]
"1000216" [label = "(RETURN,return result;,return result;)" ]
"1000104" [label = "(METHOD,do_rfc1035_name)" ]
"1000218" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000112" -> "1000114" 
  "1000112" -> "1000118" 
  "1000114" -> "1000218" 
  "1000116" -> "1000122" 
  "1000118" -> "1000116" 
  "1000121" -> "1000124" 
  "1000121" -> "1000128" 
  "1000122" -> "1000121" 
  "1000124" -> "1000218" 
  "1000126" -> "1000132" 
  "1000128" -> "1000126" 
  "1000132" -> "1000206" 
  "1000132" -> "1000137" 
  "1000137" -> "1000142" 
  "1000142" -> "1000146" 
  "1000144" -> "1000151" 
  "1000145" -> "1000144" 
  "1000146" -> "1000145" 
  "1000149" -> "1000154" 
  "1000151" -> "1000149" 
  "1000153" -> "1000142" 
  "1000153" -> "1000160" 
  "1000154" -> "1000153" 
  "1000154" -> "1000156" 
  "1000156" -> "1000153" 
  "1000159" -> "1000171" 
  "1000160" -> "1000164" 
  "1000162" -> "1000159" 
  "1000163" -> "1000167" 
  "1000164" -> "1000163" 
  "1000166" -> "1000162" 
  "1000167" -> "1000166" 
  "1000169" -> "1000175" 
  "1000171" -> "1000169" 
  "1000175" -> "1000181" 
  "1000175" -> "1000216" 
  "1000181" -> "1000216" 
  "1000181" -> "1000186" 
  "1000184" -> "1000189" 
  "1000186" -> "1000184" 
  "1000189" -> "1000194" 
  "1000193" -> "1000216" 
  "1000193" -> "1000198" 
  "1000194" -> "1000193" 
  "1000198" -> "1000201" 
  "1000201" -> "1000137" 
  "1000201" -> "1000137" 
  "1000201" -> "1000206" 
  "1000206" -> "1000210" 
  "1000209" -> "1000214" 
  "1000210" -> "1000209" 
  "1000213" -> "1000181" 
  "1000213" -> "1000216" 
  "1000214" -> "1000213" 
  "1000216" -> "1000218" 
  "1000104" -> "1000112" 
}
