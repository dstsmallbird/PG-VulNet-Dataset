digraph do_rfc1035_name {  
"1000114" [label = "(<operator>.logicalAnd,a2 && *a2)" ]
"1000116" [label = "(<operator>.indirection,*a2)" ]
"1000119" [label = "(<operator>.assignment,v2 = result + 1)" ]
"1000121" [label = "(<operator>.addition,result + 1)" ]
"1000124" [label = "(<operator>.assignment,v3 = a2)" ]
"1000130" [label = "(<operator>.assignment,a2 = v3)" ]
"1000133" [label = "(<operator>.assignment,v5 = *v3++)" ]
"1000135" [label = "(<operator>.indirection,*v3++)" ]
"1000136" [label = "(<operator>.postIncrement,v3++)" ]
"1000138" [label = "(<operator>.assignment,v4 = v5)" ]
"1000142" [label = "(<operator>.logicalOr,!v5 || v4 == 46)" ]
"1000143" [label = "(<operator>.logicalNot,!v5)" ]
"1000145" [label = "(<operator>.equals,v4 == 46)" ]
"1000149" [label = "(<operator>.assignment,*v2++ = v4)" ]
"1000150" [label = "(<operator>.indirection,*v2++)" ]
"1000151" [label = "(<operator>.postIncrement,v2++)" ]
"1000154" [label = "(<operator>.assignment,*result = (_BYTE)v2 + ~(_BYTE)result)" ]
"1000155" [label = "(<operator>.indirection,*result)" ]
"1000157" [label = "(<operator>.addition,(_BYTE)v2 + ~(_BYTE)result)" ]
"1000158" [label = "(<operator>.cast,(_BYTE)v2)" ]
"1000159" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000161" [label = "(<operator>.not,~(_BYTE)result)" ]
"1000162" [label = "(<operator>.cast,(_BYTE)result)" ]
"1000163" [label = "(UNKNOWN,_BYTE,_BYTE)" ]
"1000166" [label = "(<operator>.indirection,*a2)" ]
"1000168" [label = "(<operator>.preIncrement,++a2)" ]
"1000170" [label = "(<operator>.assignment,result = v2)" ]
"1000173" [label = "(RETURN,return result;,return result;)" ]
"1000105" [label = "(METHOD,do_rfc1035_name)" ]
"1000175" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000114" -> "1000121" 
  "1000114" -> "1000173" 
  "1000116" -> "1000114" 
  "1000119" -> "1000124" 
  "1000121" -> "1000119" 
  "1000124" -> "1000130" 
  "1000124" -> "1000155" 
  "1000130" -> "1000136" 
  "1000133" -> "1000138" 
  "1000135" -> "1000133" 
  "1000136" -> "1000135" 
  "1000138" -> "1000143" 
  "1000142" -> "1000155" 
  "1000142" -> "1000173" 
  "1000142" -> "1000151" 
  "1000143" -> "1000142" 
  "1000143" -> "1000145" 
  "1000145" -> "1000142" 
  "1000149" -> "1000130" 
  "1000149" -> "1000155" 
  "1000150" -> "1000149" 
  "1000151" -> "1000150" 
  "1000154" -> "1000166" 
  "1000155" -> "1000159" 
  "1000157" -> "1000154" 
  "1000158" -> "1000163" 
  "1000159" -> "1000158" 
  "1000161" -> "1000157" 
  "1000162" -> "1000161" 
  "1000163" -> "1000162" 
  "1000166" -> "1000168" 
  "1000166" -> "1000170" 
  "1000168" -> "1000170" 
  "1000170" -> "1000114" 
  "1000170" -> "1000116" 
  "1000173" -> "1000175" 
  "1000105" -> "1000114" 
  "1000105" -> "1000116" 
}
