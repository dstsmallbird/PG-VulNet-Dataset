digraph do_rfc1035_name {  
"1000120" [label = "(<operator>.assignment,v3 = result)" ]
"1000124" [label = "(<operator>.logicalOr,!*a2 || a3 && (unsigned __int64)(result + 1) > a3)" ]
"1000125" [label = "(<operator>.logicalNot,!*a2)" ]
"1000126" [label = "(<operator>.indirection,*a2)" ]
"1000128" [label = "(<operator>.logicalAnd,a3 && (unsigned __int64)(result + 1) > a3)" ]
"1000130" [label = "(<operator>.greaterThan,(unsigned __int64)(result + 1) > a3)" ]
"1000131" [label = "(<operator>.cast,(unsigned __int64)(result + 1))" ]
"1000132" [label = "(UNKNOWN,unsigned __int64,unsigned __int64)" ]
"1000133" [label = "(<operator>.addition,result + 1)" ]
"1000140" [label = "(<operator>.assignment,v5 = (unsigned __int8)a2[i])" ]
"1000142" [label = "(<operator>.cast,(unsigned __int8)a2[i])" ]
"1000143" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000144" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000147" [label = "(<operator>.assignment,v6 = &result[i])" ]
"1000149" [label = "(<operator>.addressOf,&result[i])" ]
"1000150" [label = "(<operator>.indirectIndexAccess,result[i])" ]
"1000154" [label = "(<operator>.logicalOr,!a2[i] || v5 == 46)" ]
"1000155" [label = "(<operator>.logicalNot,!a2[i])" ]
"1000156" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000159" [label = "(<operator>.equals,v5 == 46)" ]
"1000164" [label = "(<operator>.logicalAnd,a3 && (unsigned __int64)&result[i + 2] > a3)" ]
"1000166" [label = "(<operator>.greaterThan,(unsigned __int64)&result[i + 2] > a3)" ]
"1000167" [label = "(<operator>.cast,(unsigned __int64)&result[i + 2])" ]
"1000168" [label = "(UNKNOWN,unsigned __int64,unsigned __int64)" ]
"1000169" [label = "(<operator>.addressOf,&result[i + 2])" ]
"1000170" [label = "(<operator>.indirectIndexAccess,result[i + 2])" ]
"1000172" [label = "(<operator>.addition,i + 2)" ]
"1000176" [label = "(RETURN,return &v3[i + 1];,return &v3[i + 1];)" ]
"1000177" [label = "(<operator>.addressOf,&v3[i + 1])" ]
"1000178" [label = "(<operator>.indirectIndexAccess,v3[i + 1])" ]
"1000180" [label = "(<operator>.addition,i + 1)" ]
"1000183" [label = "(<operator>.assignment,v6[1] = v5)" ]
"1000184" [label = "(<operator>.indirectIndexAccess,v6[1])" ]
"1000188" [label = "(<operator>.assignment,*result = i)" ]
"1000189" [label = "(<operator>.indirection,*result)" ]
"1000192" [label = "(<operator>.assignment,result = v6 + 1)" ]
"1000194" [label = "(<operator>.addition,v6 + 1)" ]
"1000198" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000201" [label = "(<operator>.assignmentPlus,a2 += i + 1)" ]
"1000203" [label = "(<operator>.addition,i + 1)" ]
"1000207" [label = "(<operator>.assignmentPlus,a2 += i)" ]
"1000211" [label = "(<operator>.logicalNot,!a2)" ]
"1000213" [label = "(RETURN,return &v3[i + 1];,return &v3[i + 1];)" ]
"1000214" [label = "(<operator>.addressOf,&v3[i + 1])" ]
"1000215" [label = "(<operator>.indirectIndexAccess,v3[i + 1])" ]
"1000217" [label = "(<operator>.addition,i + 1)" ]
"1000220" [label = "(RETURN,return result;,return result;)" ]
"1000105" [label = "(METHOD,do_rfc1035_name)" ]
"1000222" [label = "(METHOD_RETURN,__fastcall)" ]
  "1000120" -> "1000126" 
  "1000124" -> "1000220" 
  "1000124" -> "1000143" 
  "1000125" -> "1000124" 
  "1000125" -> "1000132" 
  "1000125" -> "1000128" 
  "1000126" -> "1000125" 
  "1000128" -> "1000124" 
  "1000130" -> "1000128" 
  "1000131" -> "1000130" 
  "1000132" -> "1000133" 
  "1000133" -> "1000131" 
  "1000140" -> "1000150" 
  "1000142" -> "1000140" 
  "1000143" -> "1000144" 
  "1000144" -> "1000142" 
  "1000147" -> "1000156" 
  "1000149" -> "1000147" 
  "1000150" -> "1000149" 
  "1000154" -> "1000220" 
  "1000154" -> "1000168" 
  "1000154" -> "1000164" 
  "1000155" -> "1000154" 
  "1000155" -> "1000159" 
  "1000156" -> "1000155" 
  "1000159" -> "1000154" 
  "1000164" -> "1000180" 
  "1000164" -> "1000184" 
  "1000166" -> "1000164" 
  "1000167" -> "1000166" 
  "1000168" -> "1000172" 
  "1000169" -> "1000167" 
  "1000170" -> "1000169" 
  "1000172" -> "1000170" 
  "1000176" -> "1000222" 
  "1000177" -> "1000176" 
  "1000178" -> "1000177" 
  "1000180" -> "1000178" 
  "1000183" -> "1000189" 
  "1000184" -> "1000183" 
  "1000188" -> "1000194" 
  "1000189" -> "1000188" 
  "1000192" -> "1000198" 
  "1000194" -> "1000192" 
  "1000198" -> "1000203" 
  "1000198" -> "1000207" 
  "1000201" -> "1000211" 
  "1000203" -> "1000201" 
  "1000207" -> "1000211" 
  "1000211" -> "1000120" 
  "1000211" -> "1000220" 
  "1000211" -> "1000217" 
  "1000213" -> "1000222" 
  "1000214" -> "1000213" 
  "1000215" -> "1000214" 
  "1000217" -> "1000215" 
  "1000220" -> "1000222" 
  "1000105" -> "1000120" 
  "1000105" -> "1000220" 
  "1000105" -> "1000220" 
}
