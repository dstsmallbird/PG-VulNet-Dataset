digraph do_rfc1035_name {  
"1000114" [label = "(<operator>.assignment,result = a1)" ]
"1000122" [label = "(<operator>.indirection,*a2)" ]
"1000125" [label = "(<operator>.assignment,v5 = result + 1)" ]
"1000127" [label = "(<operator>.addition,result + 1)" ]
"1000131" [label = "(<operator>.logicalOr,!a3 || a3 >= (unsigned int)v5)" ]
"1000132" [label = "(<operator>.logicalNot,!a3)" ]
"1000134" [label = "(<operator>.greaterEqualsThan,a3 >= (unsigned int)v5)" ]
"1000136" [label = "(<operator>.cast,(unsigned int)v5)" ]
"1000137" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000141" [label = "(<operator>.assignment,i = 0)" ]
"1000144" [label = "(<operator>.preIncrement,++i)" ]
"1000147" [label = "(<operator>.assignment,v7 = a2[i])" ]
"1000149" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000153" [label = "(<operator>.logicalOr,!v7 || v7 == 46)" ]
"1000154" [label = "(<operator>.logicalNot,!v7)" ]
"1000156" [label = "(<operator>.equals,v7 == 46)" ]
"1000160" [label = "(<operator>.assignment,*result = i)" ]
"1000161" [label = "(<operator>.indirection,*result)" ]
"1000164" [label = "(<operator>.assignment,result = v5)" ]
"1000167" [label = "(<operator>.assignment,a2 = &a2[i + 1 - (a2[i] == 0)])" ]
"1000169" [label = "(<operator>.addressOf,&a2[i + 1 - (a2[i] == 0)])" ]
"1000170" [label = "(<operator>.indirectIndexAccess,a2[i + 1 - (a2[i] == 0)])" ]
"1000172" [label = "(<operator>.addition,i + 1 - (a2[i] == 0))" ]
"1000174" [label = "(<operator>.subtraction,1 - (a2[i] == 0))" ]
"1000176" [label = "(<operator>.equals,a2[i] == 0)" ]
"1000177" [label = "(<operator>.indirectIndexAccess,a2[i])" ]
"1000183" [label = "(<operator>.logicalAnd,a3 && a3 < (unsigned int)(v5 + 1))" ]
"1000185" [label = "(<operator>.lessThan,a3 < (unsigned int)(v5 + 1))" ]
"1000187" [label = "(<operator>.cast,(unsigned int)(v5 + 1))" ]
"1000188" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000189" [label = "(<operator>.addition,v5 + 1)" ]
"1000193" [label = "(<operator>.assignment,*v5++ = v7)" ]
"1000194" [label = "(<operator>.indirection,*v5++)" ]
"1000195" [label = "(<operator>.postIncrement,v5++)" ]
"1000198" [label = "(<operator>.assignment,result = v5)" ]
"1000201" [label = "(RETURN,return result;,return result;)" ]
"1000105" [label = "(METHOD,do_rfc1035_name)" ]
"1000203" [label = "(METHOD_RETURN,__cdecl)" ]
  "1000114" -> "1000122" 
  "1000114" -> "1000201" 
  "1000122" -> "1000127" 
  "1000122" -> "1000201" 
  "1000125" -> "1000132" 
  "1000127" -> "1000125" 
  "1000131" -> "1000141" 
  "1000131" -> "1000201" 
  "1000132" -> "1000131" 
  "1000132" -> "1000137" 
  "1000134" -> "1000131" 
  "1000136" -> "1000134" 
  "1000137" -> "1000136" 
  "1000141" -> "1000149" 
  "1000144" -> "1000149" 
  "1000147" -> "1000154" 
  "1000149" -> "1000147" 
  "1000153" -> "1000161" 
  "1000153" -> "1000183" 
  "1000153" -> "1000188" 
  "1000154" -> "1000153" 
  "1000154" -> "1000156" 
  "1000156" -> "1000153" 
  "1000160" -> "1000164" 
  "1000161" -> "1000160" 
  "1000164" -> "1000177" 
  "1000167" -> "1000122" 
  "1000167" -> "1000201" 
  "1000169" -> "1000167" 
  "1000170" -> "1000169" 
  "1000172" -> "1000170" 
  "1000174" -> "1000172" 
  "1000176" -> "1000174" 
  "1000177" -> "1000176" 
  "1000183" -> "1000198" 
  "1000183" -> "1000195" 
  "1000185" -> "1000183" 
  "1000187" -> "1000185" 
  "1000188" -> "1000189" 
  "1000189" -> "1000187" 
  "1000193" -> "1000144" 
  "1000194" -> "1000193" 
  "1000195" -> "1000194" 
  "1000198" -> "1000201" 
  "1000201" -> "1000203" 
  "1000105" -> "1000114" 
}
