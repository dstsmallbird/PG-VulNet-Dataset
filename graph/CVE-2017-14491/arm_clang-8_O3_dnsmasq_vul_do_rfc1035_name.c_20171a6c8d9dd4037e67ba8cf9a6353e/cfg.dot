digraph do_rfc1035_name {  
"1000125" [label = "(<operator>.assignment,v2 = (_BYTE *)result)" ]
"1000127" [label = "(<operator>.cast,(_BYTE *)result)" ]
"1000128" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000130" [label = "(<operator>.assignment,v3 = *a2)" ]
"1000132" [label = "(<operator>.indirection,*a2)" ]
"1000135" [label = "(<operator>.logicalNot,!*a2)" ]
"1000136" [label = "(<operator>.indirection,*a2)" ]
"1000139" [label = "(<operator>.assignment,v4 = 0)" ]
"1000142" [label = "(<operator>.assignment,v5 = *a2 == 0)" ]
"1000144" [label = "(<operator>.equals,*a2 == 0)" ]
"1000145" [label = "(<operator>.indirection,*a2)" ]
"1000149" [label = "(<operator>.indirection,*a2)" ]
"1000151" [label = "(<operator>.assignment,v5 = *a2 == 46)" ]
"1000153" [label = "(<operator>.equals,*a2 == 46)" ]
"1000154" [label = "(<operator>.indirection,*a2)" ]
"1000158" [label = "(<operator>.logicalNot,!v5)" ]
"1000163" [label = "(<operator>.assignment,v2[v4 + 1] = v3)" ]
"1000164" [label = "(<operator>.indirectIndexAccess,v2[v4 + 1])" ]
"1000166" [label = "(<operator>.addition,v4 + 1)" ]
"1000170" [label = "(<operator>.assignment,v6 = &a2[v4++])" ]
"1000172" [label = "(<operator>.addressOf,&a2[v4++])" ]
"1000173" [label = "(<operator>.indirectIndexAccess,a2[v4++])" ]
"1000175" [label = "(<operator>.postIncrement,v4++)" ]
"1000177" [label = "(<operator>.assignment,v3 = v6[1])" ]
"1000179" [label = "(<operator>.indirectIndexAccess,v6[1])" ]
"1000182" [label = "(<operator>.assignment,v7 = v3 == 0)" ]
"1000184" [label = "(<operator>.equals,v3 == 0)" ]
"1000189" [label = "(<operator>.assignment,v7 = v3 == 46)" ]
"1000191" [label = "(<operator>.equals,v3 == 46)" ]
"1000194" [label = "(<operator>.logicalNot,!v7)" ]
"1000196" [label = "(<operator>.assignment,*v2 = v4)" ]
"1000197" [label = "(<operator>.indirection,*v2)" ]
"1000200" [label = "(<operator>.assignment,v8 = (unsigned __int8)a2[v4])" ]
"1000202" [label = "(<operator>.cast,(unsigned __int8)a2[v4])" ]
"1000203" [label = "(UNKNOWN,unsigned __int8,unsigned __int8)" ]
"1000204" [label = "(<operator>.indirectIndexAccess,a2[v4])" ]
"1000207" [label = "(<operator>.assignmentPlus,a2 += v4)" ]
"1000210" [label = "(<operator>.assignment,result = (int)&v2[v4 + 1])" ]
"1000212" [label = "(<operator>.cast,(int)&v2[v4 + 1])" ]
"1000213" [label = "(UNKNOWN,int,int)" ]
"1000214" [label = "(<operator>.addressOf,&v2[v4 + 1])" ]
"1000215" [label = "(<operator>.indirectIndexAccess,v2[v4 + 1])" ]
"1000217" [label = "(<operator>.addition,v4 + 1)" ]
"1000222" [label = "(<operator>.preIncrement,++a2)" ]
"1000225" [label = "(<operator>.logicalNot,!a2)" ]
"1000227" [label = "(RETURN,return (int)&v2[v4 + 1];,return (int)&v2[v4 + 1];)" ]
"1000228" [label = "(<operator>.cast,(int)&v2[v4 + 1])" ]
"1000229" [label = "(UNKNOWN,int,int)" ]
"1000230" [label = "(<operator>.addressOf,&v2[v4 + 1])" ]
"1000231" [label = "(<operator>.indirectIndexAccess,v2[v4 + 1])" ]
"1000233" [label = "(<operator>.addition,v4 + 1)" ]
"1000236" [label = "(<operator>.assignment,result = (int)v2)" ]
"1000238" [label = "(<operator>.cast,(int)v2)" ]
"1000239" [label = "(UNKNOWN,int,int)" ]
"1000241" [label = "(RETURN,return result;,return result;)" ]
"1000108" [label = "(METHOD,do_rfc1035_name)" ]
"1000243" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000125" -> "1000132" 
  "1000127" -> "1000125" 
  "1000128" -> "1000127" 
  "1000130" -> "1000136" 
  "1000132" -> "1000130" 
  "1000135" -> "1000239" 
  "1000135" -> "1000139" 
  "1000136" -> "1000135" 
  "1000139" -> "1000145" 
  "1000142" -> "1000149" 
  "1000144" -> "1000142" 
  "1000145" -> "1000144" 
  "1000149" -> "1000154" 
  "1000149" -> "1000158" 
  "1000151" -> "1000158" 
  "1000153" -> "1000151" 
  "1000154" -> "1000153" 
  "1000158" -> "1000166" 
  "1000158" -> "1000197" 
  "1000163" -> "1000175" 
  "1000164" -> "1000163" 
  "1000166" -> "1000164" 
  "1000170" -> "1000179" 
  "1000172" -> "1000170" 
  "1000173" -> "1000172" 
  "1000175" -> "1000173" 
  "1000177" -> "1000184" 
  "1000179" -> "1000177" 
  "1000182" -> "1000194" 
  "1000182" -> "1000191" 
  "1000184" -> "1000182" 
  "1000189" -> "1000194" 
  "1000191" -> "1000189" 
  "1000194" -> "1000166" 
  "1000194" -> "1000197" 
  "1000196" -> "1000203" 
  "1000197" -> "1000196" 
  "1000200" -> "1000207" 
  "1000202" -> "1000200" 
  "1000203" -> "1000204" 
  "1000204" -> "1000202" 
  "1000207" -> "1000213" 
  "1000210" -> "1000222" 
  "1000210" -> "1000225" 
  "1000212" -> "1000210" 
  "1000213" -> "1000217" 
  "1000214" -> "1000212" 
  "1000215" -> "1000214" 
  "1000217" -> "1000215" 
  "1000222" -> "1000225" 
  "1000225" -> "1000229" 
  "1000225" -> "1000128" 
  "1000225" -> "1000239" 
  "1000227" -> "1000243" 
  "1000228" -> "1000227" 
  "1000229" -> "1000233" 
  "1000230" -> "1000228" 
  "1000231" -> "1000230" 
  "1000233" -> "1000231" 
  "1000236" -> "1000241" 
  "1000238" -> "1000236" 
  "1000239" -> "1000238" 
  "1000241" -> "1000243" 
  "1000108" -> "1000128" 
  "1000108" -> "1000239" 
  "1000108" -> "1000241" 
}
