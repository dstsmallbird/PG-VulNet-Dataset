digraph hostapd_notif_assoc {  
"1000129" [label = "(METHOD,hostapd_notif_assoc)" ]
"1000665" [label = "(METHOD_RETURN,int __fastcall)" ]
"1000130" [label = "(PARAM,hostapd_data *hapd)" ]
"1000131" [label = "(PARAM,const u8 *addr)" ]
"1000132" [label = "(PARAM,const u8 *req_ies)" ]
"1000133" [label = "(PARAM,size_t req_ies_len)" ]
"1000134" [label = "(PARAM,int reassoc)" ]
"1000165" [label = "(<operator>.logicalNot,!addr)" ]
"1000168" [label = "(wpa_printf,wpa_printf(2, \"hostapd_notif_assoc: Skip event with no address\", req_ies, req_ies_len, reassoc))" ]
"1000174" [label = "(RETURN,return -1;,return -1;)" ]
"1000175" [label = "(<operator>.minus,-1)" ]
"1000177" [label = "(<operator>.assignment,v7 = *addr)" ]
"1000181" [label = "(<operator>.assignment,v8 = addr[1])" ]
"1000186" [label = "(<operator>.assignment,v9 = addr[2])" ]
"1000191" [label = "(<operator>.assignment,v10 = addr[3])" ]
"1000196" [label = "(<operator>.assignment,v11 = addr[4])" ]
"1000201" [label = "(<operator>.assignment,v12 = addr[5])" ]
"1000207" [label = "(wpa_printf,wpa_printf(\n      2,\n      \"%s: Invalid SA=%02x:%02x:%02x:%02x:%02x:%02x in received indication - ignore this indication silently\",\n      \"hostapd_notif_assoc\",\n      v7,\n      v8,\n      v9,\n      v10,\n      v11,\n      v12))" ]
"1000217" [label = "(RETURN,return 0;,return 0;)" ]
"1000218" [label = "(LITERAL,0,return 0;)" ]
"1000219" [label = "(hostapd_logger,hostapd_logger(hapd, addr, 1u, 2, \"associated\"))" ]
"1000225" [label = "(ieee802_11_parse_elems,ieee802_11_parse_elems(req_ies, req_ies_len, &elems, 0))" ]
"1000236" [label = "(<operator>.assignment,v17 = elems.wps_ie - 2)" ]
"1000238" [label = "(<operator>.subtraction,elems.wps_ie - 2)" ]
"1000243" [label = "(IDENTIFIER,L,)" ]
"1000244" [label = "(wpa_printf,wpa_printf(2, \"STA included WPS IE in (Re)AssocReq\"))" ]
"1000253" [label = "(<operator>.assignment,v17 = elems.rsn_ie - 2)" ]
"1000255" [label = "(<operator>.subtraction,elems.rsn_ie - 2)" ]
"1000260" [label = "(IDENTIFIER,L,)" ]
"1000261" [label = "(wpa_printf,wpa_printf(2, \"STA included RSN IE in (Re)AssocReq\"))" ]
"1000266" [label = "(<operator>.assignment,v17 = elems.wpa_ie)" ]
"1000276" [label = "(<operator>.assignment,v17 = elems.wpa_ie - 2)" ]
"1000278" [label = "(<operator>.subtraction,elems.wpa_ie - 2)" ]
"1000283" [label = "(IDENTIFIER,L,)" ]
"1000284" [label = "(wpa_printf,wpa_printf(2, \"STA included WPA IE in (Re)AssocReq\"))" ]
"1000289" [label = "(IDENTIFIER,L,)" ]
"1000290" [label = "(wpa_printf,wpa_printf(2, \"STA did not include WPS/RSN/WPA IE in (Re)AssocReq\"))" ]
"1000293" [label = "(<operator>.assignment,v19 = ap_get_sta(hapd, addr))" ]
"1000295" [label = "(ap_get_sta,ap_get_sta(hapd, addr))" ]
"1000298" [label = "(<operator>.assignment,v20 = v19)" ]
"1000302" [label = "(IDENTIFIER,v19,if ( v19 ))" ]
"1000304" [label = "(ap_sta_no_session_timeout,ap_sta_no_session_timeout(hapd, v19))" ]
"1000307" [label = "(accounting_sta_stop,accounting_sta_stop(hapd, v20))" ]
"1000310" [label = "(<operator>.assignment,v20->timeout_next = STA_NULLFUNC)" ]
"1000317" [label = "(<operator>.assignment,v20 = ap_sta_add(hapd, addr))" ]
"1000319" [label = "(ap_sta_add,ap_sta_add(hapd, addr))" ]
"1000323" [label = "(<operator>.logicalNot,!v20)" ]
"1000326" [label = "(hostapd_drv_sta_disassoc,hostapd_drv_sta_disassoc(hapd, addr, 5))" ]
"1000330" [label = "(RETURN,return -1;,return -1;)" ]
"1000331" [label = "(<operator>.minus,-1)" ]
"1000333" [label = "(<operators>.assignmentAnd,v20->flags &= 0xFFFECFFF)" ]
"1000339" [label = "(wpa_printf,wpa_printf(\n      3,\n      \"STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect\",\n      *addr,\n      addr[1],\n      addr[2],\n      addr[3],\n      addr[4],\n      addr[5]))" ]
"1000359" [label = "(<operator>.assignment,v21 = 1)" ]
"1000363" [label = "(hostapd_drv_sta_disassoc,hostapd_drv_sta_disassoc(hapd, v20->addr, v21))" ]
"1000369" [label = "(ap_free_sta,ap_free_sta(hapd, v20))" ]
"1000372" [label = "(RETURN,return -1;,return -1;)" ]
"1000373" [label = "(<operator>.minus,-1)" ]
"1000375" [label = "(ap_copy_sta_supp_op_classes,ap_copy_sta_supp_op_classes(v20, elems.supp_op_classes, elems.supp_op_classes_len))" ]
"1000384" [label = "(<operator>.logicalNot,!hapd->conf->wpa)" ]
"1000392" [label = "(<operator>.assignment,v33 = v20->flags & 2)" ]
"1000394" [label = "(<operator>.and,v20->flags & 2)" ]
"1000399" [label = "(<operator>.assignment,v20->flags = v20->flags & 0xFFF7FFFF | 3)" ]
"1000403" [label = "(<operator>.or,v20->flags & 0xFFF7FFFF | 3)" ]
"1000404" [label = "(<operator>.and,v20->flags & 0xFFF7FFFF)" ]
"1000410" [label = "(hostapd_set_sta_flags,hostapd_set_sta_flags(hapd, v20))" ]
"1000414" [label = "(<operator>.logicalAnd,reassoc && v20->auth_alg == 2)" ]
"1000416" [label = "(<operator>.equals,v20->auth_alg == 2)" ]
"1000421" [label = "(<operator>.assignment,v34 = WPA_ASSOC_FT)" ]
"1000425" [label = "(<operator>.assignment,v34 = WPA_ASSOC)" ]
"1000428" [label = "(wpa_auth_sm_event,wpa_auth_sm_event(v20->wpa_sm, v34))" ]
"1000433" [label = "(hostapd_new_assoc_sta,hostapd_new_assoc_sta(hapd, v20, v33 != 0))" ]
"1000436" [label = "(<operator>.notEquals,v33 != 0)" ]
"1000439" [label = "(ieee802_1x_notify_port_enabled,ieee802_1x_notify_port_enabled(v20->eapol_sm, 1))" ]
"1000444" [label = "(RETURN,return 0;,return 0;)" ]
"1000445" [label = "(LITERAL,0,return 0;)" ]
"1000447" [label = "(IDENTIFIER,v17,if ( v17 ))" ]
"1000448" [label = "(<operator>.assignment,v25 = v18 == 0)" ]
"1000450" [label = "(<operator>.equals,v18 == 0)" ]
"1000454" [label = "(<operator>.assignment,v25 = 1)" ]
"1000458" [label = "(IDENTIFIER,v25,if ( v25 ))" ]
"1000460" [label = "(wpa_printf,wpa_printf(2, \"No WPA/RSN IE from STA\"))" ]
"1000463" [label = "(<operator>.assignment,v21 = 13)" ]
"1000468" [label = "(<operator>.logicalNot,!v20->wpa_sm)" ]
"1000472" [label = "(<operator>.assignment,v26 = v20->wpa_sm)" ]
"1000478" [label = "(<operator>.logicalNot,!v26)" ]
"1000481" [label = "(wpa_printf,wpa_printf(5, \"Failed to initialize WPA state machine\", v22, v23, v24))" ]
"1000487" [label = "(RETURN,return -1;,return -1;)" ]
"1000488" [label = "(<operator>.minus,-1)" ]
"1000490" [label = "(<operator>.assignment,v27 = wpa_validate_wpa_ie(\n          hapd->wpa_auth,\n          v26,\n          hapd->iface->freq,\n          v17,\n          v18,\n          elems.mdie,\n          elems.mdie_len,\n          elems.owe_dh,\n          elems.owe_dh_len))" ]
"1000492" [label = "(wpa_validate_wpa_ie,wpa_validate_wpa_ie(\n          hapd->wpa_auth,\n          v26,\n          hapd->iface->freq,\n          v17,\n          v18,\n          elems.mdie,\n          elems.mdie_len,\n          elems.owe_dh,\n          elems.owe_dh_len))" ]
"1000516" [label = "(<operator>.assignment,v28 = v27)" ]
"1000520" [label = "(IDENTIFIER,v27,if ( v27 ))" ]
"1000522" [label = "(wpa_printf,wpa_printf(2, \"WPA/RSN information element rejected? (res %u)\", v27))" ]
"1000526" [label = "(wpa_hexdump,wpa_hexdump(2, (const unsigned __int8 *)\"IE\", v17, v18))" ]
"1000528" [label = "(<operator>.cast,(const unsigned __int8 *)\"IE\")" ]
"1000534" [label = "(IDENTIFIER,v28,switch ( v28 ))" ]
"1000537" [label = "(<operator>.assignment,v21 = 18)" ]
"1000542" [label = "(<operator>.assignment,v21 = 19)" ]
"1000547" [label = "(<operator>.assignment,v21 = 20)" ]
"1000552" [label = "(<operator>.assignment,v21 = 24)" ]
"1000557" [label = "(<operator>.assignment,v21 = 13)" ]
"1000563" [label = "(<operator>.logicalOr,(v20->flags & 0x402) != 1026\n    || (v16 = v20->sa_query_timed_out) != 0\n    || v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)\n    || v20->auth_alg == 2)" ]
"1000564" [label = "(<operator>.notEquals,(v20->flags & 0x402) != 1026)" ]
"1000565" [label = "(<operator>.and,v20->flags & 0x402)" ]
"1000571" [label = "(<operator>.logicalOr,(v16 = v20->sa_query_timed_out) != 0\n    || v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)\n    || v20->auth_alg == 2)" ]
"1000572" [label = "(<operator>.notEquals,(v16 = v20->sa_query_timed_out) != 0)" ]
"1000573" [label = "(<operator>.assignment,v16 = v20->sa_query_timed_out)" ]
"1000579" [label = "(<operator>.logicalOr,v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)\n    || v20->auth_alg == 2)" ]
"1000580" [label = "(<operator>.logicalAnd,v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out))" ]
"1000581" [label = "(<operator>.greaterThan,v20->sa_query_count > 0)" ]
"1000588" [label = "(ap_check_sa_query_timeout,ap_check_sa_query_timeout(hapd, v20))" ]
"1000591" [label = "(<operator>.notEquals,(v20->flags & 0x402) != 1026)" ]
"1000592" [label = "(<operator>.and,v20->flags & 0x402)" ]
"1000586" [label = "(<operator>.logicalOr,(ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)" ]
"1000601" [label = "(<operator>.equals,v20->auth_alg == 2)" ]
"1000607" [label = "(<operator>.assignment,v29 = wpa_auth_uses_mfp(v20->wpa_sm))" ]
"1000609" [label = "(wpa_auth_uses_mfp,wpa_auth_uses_mfp(v20->wpa_sm))" ]
"1000613" [label = "(<operator>.assignment,v30 = v20->flags)" ]
"1000618" [label = "(<operator>.assignment,v31 = v30 & 0xFFFFFBFF)" ]
"1000620" [label = "(<operator>.and,v30 & 0xFFFFFBFF)" ]
"1000623" [label = "(<operator>.assignment,v32 = v30 | 0x400)" ]
"1000625" [label = "(<operator>.or,v30 | 0x400)" ]
"1000629" [label = "(<operator>.logicalNot,!v29)" ]
"1000631" [label = "(<operator>.assignment,v32 = v31)" ]
"1000634" [label = "(<operator>.assignment,v20->flags = v32)" ]
"1000641" [label = "(<operator>.logicalNot,!v20->sa_query_count)" ]
"1000645" [label = "(ap_sta_start_sa_query,ap_sta_start_sa_query(hapd, v20))" ]
"1000648" [label = "(<operator>.assignment,v35 = hostapd_eid_assoc_comeback_time(hapd, v20, buf))" ]
"1000650" [label = "(hostapd_eid_assoc_comeback_time,hostapd_eid_assoc_comeback_time(hapd, v20, buf))" ]
"1000654" [label = "(hostapd_sta_assoc,hostapd_sta_assoc(hapd, addr, reassoc, 0x1Eu, buf, v35 - buf))" ]
"1000660" [label = "(<operator>.subtraction,v35 - buf)" ]
"1000663" [label = "(RETURN,return v16;,return v16;)" ]
"1000664" [label = "(IDENTIFIER,v16,return v16;)" ]
"1000179" [label = "(<operator>.indirection,*addr)" ]
"1000183" [label = "(<operator>.indirectIndexAccess,addr[1])" ]
"1000188" [label = "(<operator>.indirectIndexAccess,addr[2])" ]
"1000193" [label = "(<operator>.indirectIndexAccess,addr[3])" ]
"1000198" [label = "(<operator>.indirectIndexAccess,addr[4])" ]
"1000203" [label = "(<operator>.indirectIndexAccess,addr[5])" ]
"1000232" [label = "(<operator>.fieldAccess,elems.wps_ie)" ]
"1000239" [label = "(<operator>.fieldAccess,elems.wps_ie)" ]
"1000241" [label = "(FIELD_IDENTIFIER,wps_ie,wps_ie)" ]
"1000249" [label = "(<operator>.fieldAccess,elems.rsn_ie)" ]
"1000251" [label = "(FIELD_IDENTIFIER,rsn_ie,rsn_ie)" ]
"1000256" [label = "(<operator>.fieldAccess,elems.rsn_ie)" ]
"1000258" [label = "(FIELD_IDENTIFIER,rsn_ie,rsn_ie)" ]
"1000268" [label = "(<operator>.fieldAccess,elems.wpa_ie)" ]
"1000270" [label = "(FIELD_IDENTIFIER,wpa_ie,wpa_ie)" ]
"1000272" [label = "(<operator>.fieldAccess,elems.wpa_ie)" ]
"1000274" [label = "(FIELD_IDENTIFIER,wpa_ie,wpa_ie)" ]
"1000279" [label = "(<operator>.fieldAccess,elems.wpa_ie)" ]
"1000281" [label = "(FIELD_IDENTIFIER,wpa_ie,wpa_ie)" ]
"1000334" [label = "(<operator>.indirectFieldAccess,v20->flags)" ]
"1000336" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000342" [label = "(<operator>.indirection,*addr)" ]
"1000344" [label = "(<operator>.indirectIndexAccess,addr[1])" ]
"1000347" [label = "(<operator>.indirectIndexAccess,addr[2])" ]
"1000350" [label = "(<operator>.indirectIndexAccess,addr[3])" ]
"1000353" [label = "(<operator>.indirectIndexAccess,addr[4])" ]
"1000356" [label = "(<operator>.indirectIndexAccess,addr[5])" ]
"1000365" [label = "(<operator>.indirectFieldAccess,v20->addr)" ]
"1000367" [label = "(FIELD_IDENTIFIER,addr,addr)" ]
"1000395" [label = "(<operator>.indirectFieldAccess,v20->flags)" ]
"1000397" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000400" [label = "(<operator>.indirectFieldAccess,v20->flags)" ]
"1000402" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000405" [label = "(<operator>.indirectFieldAccess,v20->flags)" ]
"1000407" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000417" [label = "(<operator>.indirectFieldAccess,v20->auth_alg)" ]
"1000419" [label = "(FIELD_IDENTIFIER,auth_alg,auth_alg)" ]
"1000429" [label = "(<operator>.indirectFieldAccess,v20->wpa_sm)" ]
"1000431" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000440" [label = "(<operator>.indirectFieldAccess,v20->eapol_sm)" ]
"1000442" [label = "(FIELD_IDENTIFIER,eapol_sm,eapol_sm)" ]
"1000469" [label = "(<operator>.indirectFieldAccess,v20->wpa_sm)" ]
"1000471" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000474" [label = "(<operator>.indirectFieldAccess,v20->wpa_sm)" ]
"1000476" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000493" [label = "(<operator>.indirectFieldAccess,hapd->wpa_auth)" ]
"1000495" [label = "(FIELD_IDENTIFIER,wpa_auth,wpa_auth)" ]
"1000497" [label = "(<operator>.indirectFieldAccess,hapd->iface->freq)" ]
"1000498" [label = "(<operator>.indirectFieldAccess,hapd->iface)" ]
"1000500" [label = "(FIELD_IDENTIFIER,iface,iface)" ]
"1000501" [label = "(FIELD_IDENTIFIER,freq,freq)" ]
"1000504" [label = "(<operator>.fieldAccess,elems.mdie)" ]
"1000506" [label = "(FIELD_IDENTIFIER,mdie,mdie)" ]
"1000507" [label = "(<operator>.fieldAccess,elems.mdie_len)" ]
"1000509" [label = "(FIELD_IDENTIFIER,mdie_len,mdie_len)" ]
"1000510" [label = "(<operator>.fieldAccess,elems.owe_dh)" ]
"1000512" [label = "(FIELD_IDENTIFIER,owe_dh,owe_dh)" ]
"1000513" [label = "(<operator>.fieldAccess,elems.owe_dh_len)" ]
"1000515" [label = "(FIELD_IDENTIFIER,owe_dh_len,owe_dh_len)" ]
"1000529" [label = "(UNKNOWN,const unsigned __int8 *,const unsigned __int8 *)" ]
"1000566" [label = "(<operator>.indirectFieldAccess,v20->flags)" ]
"1000568" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000575" [label = "(<operator>.indirectFieldAccess,v20->sa_query_timed_out)" ]
"1000577" [label = "(FIELD_IDENTIFIER,sa_query_timed_out,sa_query_timed_out)" ]
"1000582" [label = "(<operator>.indirectFieldAccess,v20->sa_query_count)" ]
"1000584" [label = "(FIELD_IDENTIFIER,sa_query_count,sa_query_count)" ]
"1000593" [label = "(<operator>.indirectFieldAccess,v20->flags)" ]
"1000595" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000598" [label = "(<operator>.indirectFieldAccess,v20->sa_query_timed_out)" ]
"1000600" [label = "(FIELD_IDENTIFIER,sa_query_timed_out,sa_query_timed_out)" ]
"1000602" [label = "(<operator>.indirectFieldAccess,v20->auth_alg)" ]
"1000604" [label = "(FIELD_IDENTIFIER,auth_alg,auth_alg)" ]
"1000610" [label = "(<operator>.indirectFieldAccess,v20->wpa_sm)" ]
"1000612" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000615" [label = "(<operator>.indirectFieldAccess,v20->flags)" ]
"1000617" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000635" [label = "(<operator>.indirectFieldAccess,v20->flags)" ]
"1000637" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000642" [label = "(<operator>.indirectFieldAccess,v20->sa_query_count)" ]
"1000644" [label = "(FIELD_IDENTIFIER,sa_query_count,sa_query_count)" ]
  "1000174" -> "1000665"  [ label = "DDG: <RET>"] 
  "1000207" -> "1000665"  [ label = "DDG: v8"] 
  "1000326" -> "1000665"  [ label = "DDG: hapd"] 
  "1000433" -> "1000665"  [ label = "DDG: v33 != 0"] 
  "1000581" -> "1000665"  [ label = "DDG: v20->sa_query_count"] 
  "1000266" -> "1000665"  [ label = "DDG: v17"] 
  "1000414" -> "1000665"  [ label = "DDG: v20->auth_alg == 2"] 
  "1000492" -> "1000665"  [ label = "DDG: v17"] 
  "1000516" -> "1000665"  [ label = "DDG: v27"] 
  "1000392" -> "1000665"  [ label = "DDG: v20->flags & 2"] 
  "1000580" -> "1000665"  [ label = "DDG: v20->sa_query_count > 0"] 
  "1000293" -> "1000665"  [ label = "DDG: ap_get_sta(hapd, addr)"] 
  "1000654" -> "1000665"  [ label = "DDG: v35 - buf"] 
  "1000563" -> "1000665"  [ label = "DDG: (v16 = v20->sa_query_timed_out) != 0\n    || v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)\n    || v20->auth_alg == 2"] 
  "1000339" -> "1000665"  [ label = "DDG: *addr"] 
  "1000201" -> "1000665"  [ label = "DDG: addr[5]"] 
  "1000307" -> "1000665"  [ label = "DDG: accounting_sta_stop(hapd, v20)"] 
  "1000492" -> "1000665"  [ label = "DDG: v26"] 
  "1000522" -> "1000665"  [ label = "DDG: v27"] 
  "1000439" -> "1000665"  [ label = "DDG: ieee802_1x_notify_port_enabled(v20->eapol_sm, 1)"] 
  "1000478" -> "1000665"  [ label = "DDG: !v26"] 
  "1000238" -> "1000665"  [ label = "DDG: elems.wps_ie"] 
  "1000165" -> "1000665"  [ label = "DDG: addr"] 
  "1000244" -> "1000665"  [ label = "DDG: wpa_printf(2, \"STA included WPS IE in (Re)AssocReq\")"] 
  "1000339" -> "1000665"  [ label = "DDG: addr[1]"] 
  "1000339" -> "1000665"  [ label = "DDG: addr[4]"] 
  "1000317" -> "1000665"  [ label = "DDG: ap_sta_add(hapd, addr)"] 
  "1000601" -> "1000665"  [ label = "DDG: v20->auth_alg"] 
  "1000319" -> "1000665"  [ label = "DDG: addr"] 
  "1000488" -> "1000665"  [ label = "DDG: -1"] 
  "1000468" -> "1000665"  [ label = "DDG: !v20->wpa_sm"] 
  "1000481" -> "1000665"  [ label = "DDG: v24"] 
  "1000516" -> "1000665"  [ label = "DDG: v28"] 
  "1000629" -> "1000665"  [ label = "DDG: !v29"] 
  "1000414" -> "1000665"  [ label = "DDG: reassoc"] 
  "1000416" -> "1000665"  [ label = "DDG: v20->auth_alg"] 
  "1000207" -> "1000665"  [ label = "DDG: v9"] 
  "1000563" -> "1000665"  [ label = "DDG: (v20->flags & 0x402) != 1026"] 
  "1000333" -> "1000665"  [ label = "DDG: v20->flags"] 
  "1000207" -> "1000665"  [ label = "DDG: v7"] 
  "1000323" -> "1000665"  [ label = "DDG: !v20"] 
  "1000369" -> "1000665"  [ label = "DDG: ap_free_sta(hapd, v20)"] 
  "1000375" -> "1000665"  [ label = "DDG: elems.supp_op_classes_len"] 
  "1000571" -> "1000665"  [ label = "DDG: v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)\n    || v20->auth_alg == 2"] 
  "1000631" -> "1000665"  [ label = "DDG: v31"] 
  "1000433" -> "1000665"  [ label = "DDG: hostapd_new_assoc_sta(hapd, v20, v33 != 0)"] 
  "1000290" -> "1000665"  [ label = "DDG: wpa_printf(2, \"STA did not include WPS/RSN/WPA IE in (Re)AssocReq\")"] 
  "1000255" -> "1000665"  [ label = "DDG: elems.rsn_ie"] 
  "1000134" -> "1000665"  [ label = "DDG: reassoc"] 
  "1000375" -> "1000665"  [ label = "DDG: v20"] 
  "1000339" -> "1000665"  [ label = "DDG: addr[5]"] 
  "1000641" -> "1000665"  [ label = "DDG: !v20->sa_query_count"] 
  "1000384" -> "1000665"  [ label = "DDG: !hapd->conf->wpa"] 
  "1000369" -> "1000665"  [ label = "DDG: hapd"] 
  "1000641" -> "1000665"  [ label = "DDG: v20->sa_query_count"] 
  "1000654" -> "1000665"  [ label = "DDG: addr"] 
  "1000481" -> "1000665"  [ label = "DDG: wpa_printf(5, \"Failed to initialize WPA state machine\", v22, v23, v24)"] 
  "1000207" -> "1000665"  [ label = "DDG: v10"] 
  "1000439" -> "1000665"  [ label = "DDG: v20->eapol_sm"] 
  "1000654" -> "1000665"  [ label = "DDG: reassoc"] 
  "1000618" -> "1000665"  [ label = "DDG: v31"] 
  "1000225" -> "1000665"  [ label = "DDG: req_ies_len"] 
  "1000399" -> "1000665"  [ label = "DDG: v20->flags"] 
  "1000588" -> "1000665"  [ label = "DDG: ap_check_sa_query_timeout(hapd, v20)"] 
  "1000225" -> "1000665"  [ label = "DDG: req_ies"] 
  "1000363" -> "1000665"  [ label = "DDG: v21"] 
  "1000492" -> "1000665"  [ label = "DDG: elems.owe_dh_len"] 
  "1000654" -> "1000665"  [ label = "DDG: hostapd_sta_assoc(hapd, addr, reassoc, 0x1Eu, buf, v35 - buf)"] 
  "1000181" -> "1000665"  [ label = "DDG: addr[1]"] 
  "1000454" -> "1000665"  [ label = "DDG: v25"] 
  "1000436" -> "1000665"  [ label = "DDG: v33"] 
  "1000266" -> "1000665"  [ label = "DDG: elems.wpa_ie"] 
  "1000363" -> "1000665"  [ label = "DDG: v20->addr"] 
  "1000623" -> "1000665"  [ label = "DDG: v30 | 0x400"] 
  "1000650" -> "1000665"  [ label = "DDG: v20"] 
  "1000522" -> "1000665"  [ label = "DDG: wpa_printf(2, \"WPA/RSN information element rejected? (res %u)\", v27)"] 
  "1000625" -> "1000665"  [ label = "DDG: v30"] 
  "1000526" -> "1000665"  [ label = "DDG: (const unsigned __int8 *)\"IE\""] 
  "1000207" -> "1000665"  [ label = "DDG: v11"] 
  "1000399" -> "1000665"  [ label = "DDG: v20->flags & 0xFFF7FFFF | 3"] 
  "1000276" -> "1000665"  [ label = "DDG: v17"] 
  "1000410" -> "1000665"  [ label = "DDG: hostapd_set_sta_flags(hapd, v20)"] 
  "1000654" -> "1000665"  [ label = "DDG: buf"] 
  "1000384" -> "1000665"  [ label = "DDG: hapd->conf->wpa"] 
  "1000236" -> "1000665"  [ label = "DDG: v17"] 
  "1000448" -> "1000665"  [ label = "DDG: v18 == 0"] 
  "1000304" -> "1000665"  [ label = "DDG: ap_sta_no_session_timeout(hapd, v19)"] 
  "1000339" -> "1000665"  [ label = "DDG: addr[3]"] 
  "1000526" -> "1000665"  [ label = "DDG: wpa_hexdump(2, (const unsigned __int8 *)\"IE\", v17, v18)"] 
  "1000579" -> "1000665"  [ label = "DDG: v20->auth_alg == 2"] 
  "1000253" -> "1000665"  [ label = "DDG: elems.rsn_ie - 2"] 
  "1000207" -> "1000665"  [ label = "DDG: wpa_printf(\n      2,\n      \"%s: Invalid SA=%02x:%02x:%02x:%02x:%02x:%02x in received indication - ignore this indication silently\",\n      \"hostapd_notif_assoc\",\n      v7,\n      v8,\n      v9,\n      v10,\n      v11,\n      v12)"] 
  "1000660" -> "1000665"  [ label = "DDG: v35"] 
  "1000191" -> "1000665"  [ label = "DDG: addr[3]"] 
  "1000278" -> "1000665"  [ label = "DDG: elems.wpa_ie"] 
  "1000573" -> "1000665"  [ label = "DDG: v20->sa_query_timed_out"] 
  "1000310" -> "1000665"  [ label = "DDG: STA_NULLFUNC"] 
  "1000261" -> "1000665"  [ label = "DDG: wpa_printf(2, \"STA included RSN IE in (Re)AssocReq\")"] 
  "1000225" -> "1000665"  [ label = "DDG: ieee802_11_parse_elems(req_ies, req_ies_len, &elems, 0)"] 
  "1000490" -> "1000665"  [ label = "DDG: wpa_validate_wpa_ie(\n          hapd->wpa_auth,\n          v26,\n          hapd->iface->freq,\n          v17,\n          v18,\n          elems.mdie,\n          elems.mdie_len,\n          elems.owe_dh,\n          elems.owe_dh_len)"] 
  "1000592" -> "1000665"  [ label = "DDG: v20->flags"] 
  "1000310" -> "1000665"  [ label = "DDG: v20->timeout_next"] 
  "1000196" -> "1000665"  [ label = "DDG: addr[4]"] 
  "1000648" -> "1000665"  [ label = "DDG: hostapd_eid_assoc_comeback_time(hapd, v20, buf)"] 
  "1000492" -> "1000665"  [ label = "DDG: v18"] 
  "1000168" -> "1000665"  [ label = "DDG: req_ies"] 
  "1000450" -> "1000665"  [ label = "DDG: v18"] 
  "1000433" -> "1000665"  [ label = "DDG: hapd"] 
  "1000186" -> "1000665"  [ label = "DDG: addr[2]"] 
  "1000573" -> "1000665"  [ label = "DDG: v16"] 
  "1000403" -> "1000665"  [ label = "DDG: v20->flags & 0xFFF7FFFF"] 
  "1000478" -> "1000665"  [ label = "DDG: v26"] 
  "1000654" -> "1000665"  [ label = "DDG: hapd"] 
  "1000421" -> "1000665"  [ label = "DDG: WPA_ASSOC_FT"] 
  "1000492" -> "1000665"  [ label = "DDG: elems.mdie"] 
  "1000526" -> "1000665"  [ label = "DDG: v18"] 
  "1000492" -> "1000665"  [ label = "DDG: elems.mdie_len"] 
  "1000563" -> "1000665"  [ label = "DDG: (v20->flags & 0x402) != 1026\n    || (v16 = v20->sa_query_timed_out) != 0\n    || v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)\n    || v20->auth_alg == 2"] 
  "1000629" -> "1000665"  [ label = "DDG: v29"] 
  "1000304" -> "1000665"  [ label = "DDG: v19"] 
  "1000326" -> "1000665"  [ label = "DDG: addr"] 
  "1000298" -> "1000665"  [ label = "DDG: v19"] 
  "1000591" -> "1000665"  [ label = "DDG: v20->flags & 0x402"] 
  "1000565" -> "1000665"  [ label = "DDG: v20->flags"] 
  "1000580" -> "1000665"  [ label = "DDG: (ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out"] 
  "1000225" -> "1000665"  [ label = "DDG: &elems"] 
  "1000375" -> "1000665"  [ label = "DDG: elems.supp_op_classes"] 
  "1000428" -> "1000665"  [ label = "DDG: wpa_auth_sm_event(v20->wpa_sm, v34)"] 
  "1000428" -> "1000665"  [ label = "DDG: v34"] 
  "1000177" -> "1000665"  [ label = "DDG: *addr"] 
  "1000481" -> "1000665"  [ label = "DDG: v22"] 
  "1000448" -> "1000665"  [ label = "DDG: v25"] 
  "1000339" -> "1000665"  [ label = "DDG: wpa_printf(\n      3,\n      \"STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect\",\n      *addr,\n      addr[1],\n      addr[2],\n      addr[3],\n      addr[4],\n      addr[5])"] 
  "1000492" -> "1000665"  [ label = "DDG: hapd->wpa_auth"] 
  "1000564" -> "1000665"  [ label = "DDG: v20->flags & 0x402"] 
  "1000375" -> "1000665"  [ label = "DDG: ap_copy_sta_supp_op_classes(v20, elems.supp_op_classes, elems.supp_op_classes_len)"] 
  "1000339" -> "1000665"  [ label = "DDG: addr[2]"] 
  "1000276" -> "1000665"  [ label = "DDG: elems.wpa_ie - 2"] 
  "1000363" -> "1000665"  [ label = "DDG: hostapd_drv_sta_disassoc(hapd, v20->addr, v21)"] 
  "1000645" -> "1000665"  [ label = "DDG: ap_sta_start_sa_query(hapd, v20)"] 
  "1000168" -> "1000665"  [ label = "DDG: reassoc"] 
  "1000284" -> "1000665"  [ label = "DDG: wpa_printf(2, \"STA included WPA IE in (Re)AssocReq\")"] 
  "1000236" -> "1000665"  [ label = "DDG: elems.wps_ie - 2"] 
  "1000586" -> "1000665"  [ label = "DDG: v20->sa_query_timed_out"] 
  "1000207" -> "1000665"  [ label = "DDG: v12"] 
  "1000634" -> "1000665"  [ label = "DDG: v32"] 
  "1000579" -> "1000665"  [ label = "DDG: v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)"] 
  "1000492" -> "1000665"  [ label = "DDG: hapd->iface->freq"] 
  "1000253" -> "1000665"  [ label = "DDG: v17"] 
  "1000472" -> "1000665"  [ label = "DDG: v20->wpa_sm"] 
  "1000175" -> "1000665"  [ label = "DDG: -1"] 
  "1000607" -> "1000665"  [ label = "DDG: wpa_auth_uses_mfp(v20->wpa_sm)"] 
  "1000373" -> "1000665"  [ label = "DDG: -1"] 
  "1000168" -> "1000665"  [ label = "DDG: req_ies_len"] 
  "1000481" -> "1000665"  [ label = "DDG: v23"] 
  "1000295" -> "1000665"  [ label = "DDG: addr"] 
  "1000526" -> "1000665"  [ label = "DDG: v17"] 
  "1000326" -> "1000665"  [ label = "DDG: hostapd_drv_sta_disassoc(hapd, addr, 5)"] 
  "1000433" -> "1000665"  [ label = "DDG: v20"] 
  "1000571" -> "1000665"  [ label = "DDG: (v16 = v20->sa_query_timed_out) != 0"] 
  "1000369" -> "1000665"  [ label = "DDG: v20"] 
  "1000323" -> "1000665"  [ label = "DDG: v20"] 
  "1000425" -> "1000665"  [ label = "DDG: WPA_ASSOC"] 
  "1000492" -> "1000665"  [ label = "DDG: elems.owe_dh"] 
  "1000168" -> "1000665"  [ label = "DDG: wpa_printf(2, \"hostapd_notif_assoc: Skip event with no address\", req_ies, req_ies_len, reassoc)"] 
  "1000165" -> "1000665"  [ label = "DDG: !addr"] 
  "1000219" -> "1000665"  [ label = "DDG: hostapd_logger(hapd, addr, 1u, 2, \"associated\")"] 
  "1000460" -> "1000665"  [ label = "DDG: wpa_printf(2, \"No WPA/RSN IE from STA\")"] 
  "1000618" -> "1000665"  [ label = "DDG: v30 & 0xFFFFFBFF"] 
  "1000428" -> "1000665"  [ label = "DDG: v20->wpa_sm"] 
  "1000414" -> "1000665"  [ label = "DDG: reassoc && v20->auth_alg == 2"] 
  "1000331" -> "1000665"  [ label = "DDG: -1"] 
  "1000444" -> "1000665"  [ label = "DDG: <RET>"] 
  "1000487" -> "1000665"  [ label = "DDG: <RET>"] 
  "1000663" -> "1000665"  [ label = "DDG: <RET>"] 
  "1000372" -> "1000665"  [ label = "DDG: <RET>"] 
  "1000330" -> "1000665"  [ label = "DDG: <RET>"] 
  "1000217" -> "1000665"  [ label = "DDG: <RET>"] 
  "1000129" -> "1000130"  [ label = "DDG: "] 
  "1000129" -> "1000131"  [ label = "DDG: "] 
  "1000129" -> "1000132"  [ label = "DDG: "] 
  "1000129" -> "1000133"  [ label = "DDG: "] 
  "1000129" -> "1000134"  [ label = "DDG: "] 
  "1000129" -> "1000165"  [ label = "DDG: "] 
  "1000129" -> "1000168"  [ label = "DDG: "] 
  "1000134" -> "1000168"  [ label = "DDG: reassoc"] 
  "1000175" -> "1000174"  [ label = "DDG: -1"] 
  "1000129" -> "1000175"  [ label = "DDG: "] 
  "1000129" -> "1000177"  [ label = "DDG: "] 
  "1000165" -> "1000181"  [ label = "DDG: addr"] 
  "1000129" -> "1000181"  [ label = "DDG: "] 
  "1000165" -> "1000186"  [ label = "DDG: addr"] 
  "1000129" -> "1000186"  [ label = "DDG: "] 
  "1000165" -> "1000191"  [ label = "DDG: addr"] 
  "1000129" -> "1000191"  [ label = "DDG: "] 
  "1000165" -> "1000196"  [ label = "DDG: addr"] 
  "1000129" -> "1000196"  [ label = "DDG: "] 
  "1000165" -> "1000201"  [ label = "DDG: addr"] 
  "1000129" -> "1000201"  [ label = "DDG: "] 
  "1000129" -> "1000207"  [ label = "DDG: "] 
  "1000177" -> "1000207"  [ label = "DDG: v7"] 
  "1000181" -> "1000207"  [ label = "DDG: v8"] 
  "1000186" -> "1000207"  [ label = "DDG: v9"] 
  "1000191" -> "1000207"  [ label = "DDG: v10"] 
  "1000196" -> "1000207"  [ label = "DDG: v11"] 
  "1000201" -> "1000207"  [ label = "DDG: v12"] 
  "1000218" -> "1000217"  [ label = "DDG: 0"] 
  "1000129" -> "1000217"  [ label = "DDG: "] 
  "1000129" -> "1000218"  [ label = "DDG: "] 
  "1000129" -> "1000219"  [ label = "DDG: "] 
  "1000129" -> "1000225"  [ label = "DDG: "] 
  "1000238" -> "1000236"  [ label = "DDG: elems.wps_ie"] 
  "1000238" -> "1000236"  [ label = "DDG: 2"] 
  "1000129" -> "1000236"  [ label = "DDG: "] 
  "1000129" -> "1000238"  [ label = "DDG: "] 
  "1000129" -> "1000243"  [ label = "DDG: "] 
  "1000129" -> "1000244"  [ label = "DDG: "] 
  "1000255" -> "1000253"  [ label = "DDG: elems.rsn_ie"] 
  "1000255" -> "1000253"  [ label = "DDG: 2"] 
  "1000129" -> "1000253"  [ label = "DDG: "] 
  "1000129" -> "1000255"  [ label = "DDG: "] 
  "1000129" -> "1000260"  [ label = "DDG: "] 
  "1000129" -> "1000261"  [ label = "DDG: "] 
  "1000129" -> "1000266"  [ label = "DDG: "] 
  "1000278" -> "1000276"  [ label = "DDG: elems.wpa_ie"] 
  "1000278" -> "1000276"  [ label = "DDG: 2"] 
  "1000129" -> "1000276"  [ label = "DDG: "] 
  "1000129" -> "1000278"  [ label = "DDG: "] 
  "1000129" -> "1000283"  [ label = "DDG: "] 
  "1000129" -> "1000284"  [ label = "DDG: "] 
  "1000129" -> "1000289"  [ label = "DDG: "] 
  "1000129" -> "1000290"  [ label = "DDG: "] 
  "1000295" -> "1000293"  [ label = "DDG: hapd"] 
  "1000295" -> "1000293"  [ label = "DDG: addr"] 
  "1000129" -> "1000293"  [ label = "DDG: "] 
  "1000219" -> "1000295"  [ label = "DDG: hapd"] 
  "1000129" -> "1000295"  [ label = "DDG: "] 
  "1000219" -> "1000295"  [ label = "DDG: addr"] 
  "1000293" -> "1000298"  [ label = "DDG: v19"] 
  "1000129" -> "1000298"  [ label = "DDG: "] 
  "1000129" -> "1000302"  [ label = "DDG: "] 
  "1000295" -> "1000304"  [ label = "DDG: hapd"] 
  "1000129" -> "1000304"  [ label = "DDG: "] 
  "1000293" -> "1000304"  [ label = "DDG: v19"] 
  "1000304" -> "1000307"  [ label = "DDG: hapd"] 
  "1000129" -> "1000307"  [ label = "DDG: "] 
  "1000298" -> "1000307"  [ label = "DDG: v20"] 
  "1000129" -> "1000310"  [ label = "DDG: "] 
  "1000319" -> "1000317"  [ label = "DDG: hapd"] 
  "1000319" -> "1000317"  [ label = "DDG: addr"] 
  "1000129" -> "1000317"  [ label = "DDG: "] 
  "1000295" -> "1000319"  [ label = "DDG: hapd"] 
  "1000129" -> "1000319"  [ label = "DDG: "] 
  "1000295" -> "1000319"  [ label = "DDG: addr"] 
  "1000317" -> "1000323"  [ label = "DDG: v20"] 
  "1000129" -> "1000323"  [ label = "DDG: "] 
  "1000319" -> "1000326"  [ label = "DDG: hapd"] 
  "1000129" -> "1000326"  [ label = "DDG: "] 
  "1000319" -> "1000326"  [ label = "DDG: addr"] 
  "1000331" -> "1000330"  [ label = "DDG: -1"] 
  "1000129" -> "1000331"  [ label = "DDG: "] 
  "1000129" -> "1000333"  [ label = "DDG: "] 
  "1000129" -> "1000339"  [ label = "DDG: "] 
  "1000319" -> "1000339"  [ label = "DDG: addr"] 
  "1000295" -> "1000339"  [ label = "DDG: addr"] 
  "1000129" -> "1000359"  [ label = "DDG: "] 
  "1000307" -> "1000363"  [ label = "DDG: hapd"] 
  "1000319" -> "1000363"  [ label = "DDG: hapd"] 
  "1000129" -> "1000363"  [ label = "DDG: "] 
  "1000463" -> "1000363"  [ label = "DDG: v21"] 
  "1000547" -> "1000363"  [ label = "DDG: v21"] 
  "1000557" -> "1000363"  [ label = "DDG: v21"] 
  "1000542" -> "1000363"  [ label = "DDG: v21"] 
  "1000359" -> "1000363"  [ label = "DDG: v21"] 
  "1000537" -> "1000363"  [ label = "DDG: v21"] 
  "1000552" -> "1000363"  [ label = "DDG: v21"] 
  "1000363" -> "1000369"  [ label = "DDG: hapd"] 
  "1000129" -> "1000369"  [ label = "DDG: "] 
  "1000375" -> "1000369"  [ label = "DDG: v20"] 
  "1000307" -> "1000369"  [ label = "DDG: v20"] 
  "1000323" -> "1000369"  [ label = "DDG: v20"] 
  "1000373" -> "1000372"  [ label = "DDG: -1"] 
  "1000129" -> "1000373"  [ label = "DDG: "] 
  "1000129" -> "1000375"  [ label = "DDG: "] 
  "1000394" -> "1000392"  [ label = "DDG: v20->flags"] 
  "1000394" -> "1000392"  [ label = "DDG: 2"] 
  "1000129" -> "1000392"  [ label = "DDG: "] 
  "1000634" -> "1000394"  [ label = "DDG: v20->flags"] 
  "1000129" -> "1000394"  [ label = "DDG: "] 
  "1000403" -> "1000399"  [ label = "DDG: v20->flags & 0xFFF7FFFF"] 
  "1000403" -> "1000399"  [ label = "DDG: 3"] 
  "1000404" -> "1000403"  [ label = "DDG: v20->flags"] 
  "1000404" -> "1000403"  [ label = "DDG: 0xFFF7FFFF"] 
  "1000394" -> "1000404"  [ label = "DDG: v20->flags"] 
  "1000129" -> "1000404"  [ label = "DDG: "] 
  "1000129" -> "1000403"  [ label = "DDG: "] 
  "1000588" -> "1000410"  [ label = "DDG: hapd"] 
  "1000129" -> "1000410"  [ label = "DDG: "] 
  "1000375" -> "1000410"  [ label = "DDG: v20"] 
  "1000588" -> "1000410"  [ label = "DDG: v20"] 
  "1000129" -> "1000414"  [ label = "DDG: "] 
  "1000579" -> "1000414"  [ label = "DDG: v20->auth_alg == 2"] 
  "1000416" -> "1000414"  [ label = "DDG: v20->auth_alg"] 
  "1000416" -> "1000414"  [ label = "DDG: 2"] 
  "1000601" -> "1000416"  [ label = "DDG: v20->auth_alg"] 
  "1000129" -> "1000416"  [ label = "DDG: "] 
  "1000129" -> "1000421"  [ label = "DDG: "] 
  "1000129" -> "1000425"  [ label = "DDG: "] 
  "1000609" -> "1000428"  [ label = "DDG: v20->wpa_sm"] 
  "1000421" -> "1000428"  [ label = "DDG: v34"] 
  "1000425" -> "1000428"  [ label = "DDG: v34"] 
  "1000129" -> "1000428"  [ label = "DDG: "] 
  "1000410" -> "1000433"  [ label = "DDG: hapd"] 
  "1000129" -> "1000433"  [ label = "DDG: "] 
  "1000410" -> "1000433"  [ label = "DDG: v20"] 
  "1000436" -> "1000433"  [ label = "DDG: v33"] 
  "1000436" -> "1000433"  [ label = "DDG: 0"] 
  "1000392" -> "1000436"  [ label = "DDG: v33"] 
  "1000129" -> "1000436"  [ label = "DDG: "] 
  "1000129" -> "1000439"  [ label = "DDG: "] 
  "1000445" -> "1000444"  [ label = "DDG: 0"] 
  "1000129" -> "1000444"  [ label = "DDG: "] 
  "1000129" -> "1000445"  [ label = "DDG: "] 
  "1000129" -> "1000447"  [ label = "DDG: "] 
  "1000450" -> "1000448"  [ label = "DDG: v18"] 
  "1000450" -> "1000448"  [ label = "DDG: 0"] 
  "1000129" -> "1000448"  [ label = "DDG: "] 
  "1000129" -> "1000450"  [ label = "DDG: "] 
  "1000129" -> "1000454"  [ label = "DDG: "] 
  "1000129" -> "1000458"  [ label = "DDG: "] 
  "1000129" -> "1000460"  [ label = "DDG: "] 
  "1000129" -> "1000463"  [ label = "DDG: "] 
  "1000468" -> "1000472"  [ label = "DDG: v20->wpa_sm"] 
  "1000129" -> "1000472"  [ label = "DDG: "] 
  "1000472" -> "1000478"  [ label = "DDG: v26"] 
  "1000129" -> "1000478"  [ label = "DDG: "] 
  "1000129" -> "1000481"  [ label = "DDG: "] 
  "1000488" -> "1000487"  [ label = "DDG: -1"] 
  "1000129" -> "1000488"  [ label = "DDG: "] 
  "1000492" -> "1000490"  [ label = "DDG: elems.mdie"] 
  "1000492" -> "1000490"  [ label = "DDG: elems.mdie_len"] 
  "1000492" -> "1000490"  [ label = "DDG: hapd->iface->freq"] 
  "1000492" -> "1000490"  [ label = "DDG: v17"] 
  "1000492" -> "1000490"  [ label = "DDG: elems.owe_dh_len"] 
  "1000492" -> "1000490"  [ label = "DDG: v26"] 
  "1000492" -> "1000490"  [ label = "DDG: v18"] 
  "1000492" -> "1000490"  [ label = "DDG: elems.owe_dh"] 
  "1000492" -> "1000490"  [ label = "DDG: hapd->wpa_auth"] 
  "1000129" -> "1000490"  [ label = "DDG: "] 
  "1000478" -> "1000492"  [ label = "DDG: v26"] 
  "1000129" -> "1000492"  [ label = "DDG: "] 
  "1000450" -> "1000492"  [ label = "DDG: v18"] 
  "1000490" -> "1000516"  [ label = "DDG: v27"] 
  "1000129" -> "1000516"  [ label = "DDG: "] 
  "1000129" -> "1000520"  [ label = "DDG: "] 
  "1000129" -> "1000522"  [ label = "DDG: "] 
  "1000490" -> "1000522"  [ label = "DDG: v27"] 
  "1000129" -> "1000526"  [ label = "DDG: "] 
  "1000528" -> "1000526"  [ label = "DDG: \"IE\""] 
  "1000129" -> "1000528"  [ label = "DDG: "] 
  "1000492" -> "1000526"  [ label = "DDG: v17"] 
  "1000492" -> "1000526"  [ label = "DDG: v18"] 
  "1000129" -> "1000534"  [ label = "DDG: "] 
  "1000129" -> "1000537"  [ label = "DDG: "] 
  "1000129" -> "1000542"  [ label = "DDG: "] 
  "1000129" -> "1000547"  [ label = "DDG: "] 
  "1000129" -> "1000552"  [ label = "DDG: "] 
  "1000129" -> "1000557"  [ label = "DDG: "] 
  "1000564" -> "1000563"  [ label = "DDG: v20->flags & 0x402"] 
  "1000564" -> "1000563"  [ label = "DDG: 1026"] 
  "1000591" -> "1000563"  [ label = "DDG: (v20->flags & 0x402) != 1026"] 
  "1000565" -> "1000564"  [ label = "DDG: v20->flags"] 
  "1000565" -> "1000564"  [ label = "DDG: 0x402"] 
  "1000129" -> "1000565"  [ label = "DDG: "] 
  "1000129" -> "1000564"  [ label = "DDG: "] 
  "1000571" -> "1000563"  [ label = "DDG: (v16 = v20->sa_query_timed_out) != 0"] 
  "1000571" -> "1000563"  [ label = "DDG: v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)\n    || v20->auth_alg == 2"] 
  "1000572" -> "1000571"  [ label = "DDG: 0"] 
  "1000573" -> "1000572"  [ label = "DDG: v16"] 
  "1000129" -> "1000573"  [ label = "DDG: "] 
  "1000129" -> "1000572"  [ label = "DDG: "] 
  "1000579" -> "1000571"  [ label = "DDG: v20->sa_query_count > 0\n    && ((ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out)"] 
  "1000579" -> "1000571"  [ label = "DDG: v20->auth_alg == 2"] 
  "1000580" -> "1000579"  [ label = "DDG: v20->sa_query_count > 0"] 
  "1000580" -> "1000579"  [ label = "DDG: (ap_check_sa_query_timeout(hapd, v20), (v20->flags & 0x402) != 1026) || v20->sa_query_timed_out"] 
  "1000581" -> "1000580"  [ label = "DDG: v20->sa_query_count"] 
  "1000581" -> "1000580"  [ label = "DDG: 0"] 
  "1000129" -> "1000581"  [ label = "DDG: "] 
  "1000586" -> "1000580"  [ label = "DDG: v20->sa_query_timed_out"] 
  "1000129" -> "1000588"  [ label = "DDG: "] 
  "1000375" -> "1000588"  [ label = "DDG: v20"] 
  "1000592" -> "1000591"  [ label = "DDG: v20->flags"] 
  "1000592" -> "1000591"  [ label = "DDG: 0x402"] 
  "1000565" -> "1000592"  [ label = "DDG: v20->flags"] 
  "1000129" -> "1000592"  [ label = "DDG: "] 
  "1000129" -> "1000591"  [ label = "DDG: "] 
  "1000601" -> "1000579"  [ label = "DDG: v20->auth_alg"] 
  "1000601" -> "1000579"  [ label = "DDG: 2"] 
  "1000129" -> "1000601"  [ label = "DDG: "] 
  "1000609" -> "1000607"  [ label = "DDG: v20->wpa_sm"] 
  "1000129" -> "1000607"  [ label = "DDG: "] 
  "1000468" -> "1000609"  [ label = "DDG: v20->wpa_sm"] 
  "1000592" -> "1000613"  [ label = "DDG: v20->flags"] 
  "1000565" -> "1000613"  [ label = "DDG: v20->flags"] 
  "1000129" -> "1000613"  [ label = "DDG: "] 
  "1000620" -> "1000618"  [ label = "DDG: v30"] 
  "1000620" -> "1000618"  [ label = "DDG: 0xFFFFFBFF"] 
  "1000129" -> "1000618"  [ label = "DDG: "] 
  "1000613" -> "1000620"  [ label = "DDG: v30"] 
  "1000129" -> "1000620"  [ label = "DDG: "] 
  "1000625" -> "1000623"  [ label = "DDG: v30"] 
  "1000625" -> "1000623"  [ label = "DDG: 0x400"] 
  "1000129" -> "1000623"  [ label = "DDG: "] 
  "1000620" -> "1000625"  [ label = "DDG: v30"] 
  "1000129" -> "1000625"  [ label = "DDG: "] 
  "1000607" -> "1000629"  [ label = "DDG: v29"] 
  "1000129" -> "1000629"  [ label = "DDG: "] 
  "1000618" -> "1000631"  [ label = "DDG: v31"] 
  "1000129" -> "1000631"  [ label = "DDG: "] 
  "1000623" -> "1000634"  [ label = "DDG: v32"] 
  "1000631" -> "1000634"  [ label = "DDG: v32"] 
  "1000129" -> "1000634"  [ label = "DDG: "] 
  "1000581" -> "1000641"  [ label = "DDG: v20->sa_query_count"] 
  "1000588" -> "1000645"  [ label = "DDG: hapd"] 
  "1000129" -> "1000645"  [ label = "DDG: "] 
  "1000375" -> "1000645"  [ label = "DDG: v20"] 
  "1000588" -> "1000645"  [ label = "DDG: v20"] 
  "1000650" -> "1000648"  [ label = "DDG: hapd"] 
  "1000650" -> "1000648"  [ label = "DDG: v20"] 
  "1000650" -> "1000648"  [ label = "DDG: buf"] 
  "1000129" -> "1000648"  [ label = "DDG: "] 
  "1000588" -> "1000650"  [ label = "DDG: hapd"] 
  "1000645" -> "1000650"  [ label = "DDG: hapd"] 
  "1000129" -> "1000650"  [ label = "DDG: "] 
  "1000375" -> "1000650"  [ label = "DDG: v20"] 
  "1000645" -> "1000650"  [ label = "DDG: v20"] 
  "1000588" -> "1000650"  [ label = "DDG: v20"] 
  "1000650" -> "1000654"  [ label = "DDG: hapd"] 
  "1000129" -> "1000654"  [ label = "DDG: "] 
  "1000660" -> "1000654"  [ label = "DDG: buf"] 
  "1000660" -> "1000654"  [ label = "DDG: v35"] 
  "1000648" -> "1000660"  [ label = "DDG: v35"] 
  "1000129" -> "1000660"  [ label = "DDG: "] 
  "1000650" -> "1000660"  [ label = "DDG: buf"] 
  "1000664" -> "1000663"  [ label = "DDG: v16"] 
  "1000573" -> "1000663"  [ label = "DDG: v16"] 
  "1000129" -> "1000664"  [ label = "DDG: "] 
  "1000165" -> "1000175"  [ label = "CDG: "] 
  "1000165" -> "1000174"  [ label = "CDG: "] 
  "1000165" -> "1000168"  [ label = "CDG: "] 
  "1000165" -> "1000191"  [ label = "CDG: "] 
  "1000165" -> "1000188"  [ label = "CDG: "] 
  "1000165" -> "1000186"  [ label = "CDG: "] 
  "1000165" -> "1000183"  [ label = "CDG: "] 
  "1000165" -> "1000181"  [ label = "CDG: "] 
  "1000165" -> "1000179"  [ label = "CDG: "] 
  "1000165" -> "1000177"  [ label = "CDG: "] 
  "1000165" -> "1000207"  [ label = "CDG: "] 
  "1000165" -> "1000203"  [ label = "CDG: "] 
  "1000165" -> "1000201"  [ label = "CDG: "] 
  "1000165" -> "1000198"  [ label = "CDG: "] 
  "1000165" -> "1000196"  [ label = "CDG: "] 
  "1000165" -> "1000193"  [ label = "CDG: "] 
  "1000165" -> "1000217"  [ label = "CDG: "] 
  "1000232" -> "1000239"  [ label = "CDG: "] 
  "1000232" -> "1000238"  [ label = "CDG: "] 
  "1000232" -> "1000236"  [ label = "CDG: "] 
  "1000232" -> "1000251"  [ label = "CDG: "] 
  "1000232" -> "1000249"  [ label = "CDG: "] 
  "1000232" -> "1000244"  [ label = "CDG: "] 
  "1000232" -> "1000241"  [ label = "CDG: "] 
  "1000249" -> "1000256"  [ label = "CDG: "] 
  "1000249" -> "1000255"  [ label = "CDG: "] 
  "1000249" -> "1000253"  [ label = "CDG: "] 
  "1000249" -> "1000272"  [ label = "CDG: "] 
  "1000249" -> "1000270"  [ label = "CDG: "] 
  "1000249" -> "1000268"  [ label = "CDG: "] 
  "1000249" -> "1000266"  [ label = "CDG: "] 
  "1000249" -> "1000261"  [ label = "CDG: "] 
  "1000249" -> "1000258"  [ label = "CDG: "] 
  "1000249" -> "1000274"  [ label = "CDG: "] 
  "1000272" -> "1000284"  [ label = "CDG: "] 
  "1000272" -> "1000281"  [ label = "CDG: "] 
  "1000272" -> "1000279"  [ label = "CDG: "] 
  "1000272" -> "1000278"  [ label = "CDG: "] 
  "1000272" -> "1000276"  [ label = "CDG: "] 
  "1000272" -> "1000290"  [ label = "CDG: "] 
  "1000323" -> "1000336"  [ label = "CDG: "] 
  "1000323" -> "1000334"  [ label = "CDG: "] 
  "1000323" -> "1000333"  [ label = "CDG: "] 
  "1000323" -> "1000331"  [ label = "CDG: "] 
  "1000323" -> "1000330"  [ label = "CDG: "] 
  "1000323" -> "1000326"  [ label = "CDG: "] 
  "1000323" -> "1000350"  [ label = "CDG: "] 
  "1000323" -> "1000347"  [ label = "CDG: "] 
  "1000323" -> "1000344"  [ label = "CDG: "] 
  "1000323" -> "1000342"  [ label = "CDG: "] 
  "1000323" -> "1000339"  [ label = "CDG: "] 
  "1000323" -> "1000367"  [ label = "CDG: "] 
  "1000323" -> "1000365"  [ label = "CDG: "] 
  "1000323" -> "1000363"  [ label = "CDG: "] 
  "1000323" -> "1000359"  [ label = "CDG: "] 
  "1000323" -> "1000356"  [ label = "CDG: "] 
  "1000323" -> "1000353"  [ label = "CDG: "] 
  "1000323" -> "1000373"  [ label = "CDG: "] 
  "1000323" -> "1000372"  [ label = "CDG: "] 
  "1000323" -> "1000369"  [ label = "CDG: "] 
  "1000384" -> "1000431"  [ label = "CDG: "] 
  "1000384" -> "1000429"  [ label = "CDG: "] 
  "1000384" -> "1000428"  [ label = "CDG: "] 
  "1000384" -> "1000444"  [ label = "CDG: "] 
  "1000384" -> "1000442"  [ label = "CDG: "] 
  "1000384" -> "1000440"  [ label = "CDG: "] 
  "1000384" -> "1000439"  [ label = "CDG: "] 
  "1000384" -> "1000436"  [ label = "CDG: "] 
  "1000384" -> "1000433"  [ label = "CDG: "] 
  "1000384" -> "1000400"  [ label = "CDG: "] 
  "1000384" -> "1000399"  [ label = "CDG: "] 
  "1000384" -> "1000397"  [ label = "CDG: "] 
  "1000384" -> "1000395"  [ label = "CDG: "] 
  "1000384" -> "1000394"  [ label = "CDG: "] 
  "1000384" -> "1000392"  [ label = "CDG: "] 
  "1000384" -> "1000414"  [ label = "CDG: "] 
  "1000384" -> "1000410"  [ label = "CDG: "] 
  "1000384" -> "1000407"  [ label = "CDG: "] 
  "1000384" -> "1000405"  [ label = "CDG: "] 
  "1000384" -> "1000404"  [ label = "CDG: "] 
  "1000384" -> "1000403"  [ label = "CDG: "] 
  "1000384" -> "1000402"  [ label = "CDG: "] 
  "1000384" -> "1000448"  [ label = "CDG: "] 
  "1000384" -> "1000454"  [ label = "CDG: "] 
  "1000384" -> "1000450"  [ label = "CDG: "] 
  "1000384" -> "1000463"  [ label = "CDG: "] 
  "1000384" -> "1000460"  [ label = "CDG: "] 
  "1000384" -> "1000478"  [ label = "CDG: "] 
  "1000384" -> "1000476"  [ label = "CDG: "] 
  "1000384" -> "1000474"  [ label = "CDG: "] 
  "1000384" -> "1000472"  [ label = "CDG: "] 
  "1000384" -> "1000471"  [ label = "CDG: "] 
  "1000384" -> "1000469"  [ label = "CDG: "] 
  "1000384" -> "1000468"  [ label = "CDG: "] 
  "1000384" -> "1000367"  [ label = "CDG: "] 
  "1000384" -> "1000365"  [ label = "CDG: "] 
  "1000384" -> "1000363"  [ label = "CDG: "] 
  "1000384" -> "1000373"  [ label = "CDG: "] 
  "1000384" -> "1000372"  [ label = "CDG: "] 
  "1000384" -> "1000369"  [ label = "CDG: "] 
  "1000384" -> "1000419"  [ label = "CDG: "] 
  "1000384" -> "1000417"  [ label = "CDG: "] 
  "1000384" -> "1000416"  [ label = "CDG: "] 
  "1000414" -> "1000425"  [ label = "CDG: "] 
  "1000414" -> "1000421"  [ label = "CDG: "] 
  "1000478" -> "1000495"  [ label = "CDG: "] 
  "1000478" -> "1000493"  [ label = "CDG: "] 
  "1000478" -> "1000492"  [ label = "CDG: "] 
  "1000478" -> "1000490"  [ label = "CDG: "] 
  "1000478" -> "1000488"  [ label = "CDG: "] 
  "1000478" -> "1000487"  [ label = "CDG: "] 
  "1000478" -> "1000481"  [ label = "CDG: "] 
  "1000478" -> "1000512"  [ label = "CDG: "] 
  "1000478" -> "1000510"  [ label = "CDG: "] 
  "1000478" -> "1000509"  [ label = "CDG: "] 
  "1000478" -> "1000507"  [ label = "CDG: "] 
  "1000478" -> "1000506"  [ label = "CDG: "] 
  "1000478" -> "1000504"  [ label = "CDG: "] 
  "1000478" -> "1000501"  [ label = "CDG: "] 
  "1000478" -> "1000500"  [ label = "CDG: "] 
  "1000478" -> "1000498"  [ label = "CDG: "] 
  "1000478" -> "1000497"  [ label = "CDG: "] 
  "1000478" -> "1000516"  [ label = "CDG: "] 
  "1000478" -> "1000515"  [ label = "CDG: "] 
  "1000478" -> "1000513"  [ label = "CDG: "] 
  "1000478" -> "1000528"  [ label = "CDG: "] 
  "1000478" -> "1000526"  [ label = "CDG: "] 
  "1000478" -> "1000522"  [ label = "CDG: "] 
  "1000478" -> "1000529"  [ label = "CDG: "] 
  "1000478" -> "1000568"  [ label = "CDG: "] 
  "1000478" -> "1000566"  [ label = "CDG: "] 
  "1000478" -> "1000565"  [ label = "CDG: "] 
  "1000478" -> "1000564"  [ label = "CDG: "] 
  "1000478" -> "1000563"  [ label = "CDG: "] 
  "1000478" -> "1000367"  [ label = "CDG: "] 
  "1000478" -> "1000365"  [ label = "CDG: "] 
  "1000478" -> "1000363"  [ label = "CDG: "] 
  "1000478" -> "1000373"  [ label = "CDG: "] 
  "1000478" -> "1000372"  [ label = "CDG: "] 
  "1000478" -> "1000369"  [ label = "CDG: "] 
  "1000478" -> "1000542"  [ label = "CDG: "] 
  "1000478" -> "1000537"  [ label = "CDG: "] 
  "1000478" -> "1000557"  [ label = "CDG: "] 
  "1000478" -> "1000552"  [ label = "CDG: "] 
  "1000478" -> "1000547"  [ label = "CDG: "] 
  "1000563" -> "1000431"  [ label = "CDG: "] 
  "1000563" -> "1000429"  [ label = "CDG: "] 
  "1000563" -> "1000428"  [ label = "CDG: "] 
  "1000563" -> "1000444"  [ label = "CDG: "] 
  "1000563" -> "1000442"  [ label = "CDG: "] 
  "1000563" -> "1000440"  [ label = "CDG: "] 
  "1000563" -> "1000439"  [ label = "CDG: "] 
  "1000563" -> "1000436"  [ label = "CDG: "] 
  "1000563" -> "1000433"  [ label = "CDG: "] 
  "1000563" -> "1000607"  [ label = "CDG: "] 
  "1000563" -> "1000623"  [ label = "CDG: "] 
  "1000563" -> "1000620"  [ label = "CDG: "] 
  "1000563" -> "1000618"  [ label = "CDG: "] 
  "1000563" -> "1000617"  [ label = "CDG: "] 
  "1000563" -> "1000615"  [ label = "CDG: "] 
  "1000563" -> "1000613"  [ label = "CDG: "] 
  "1000563" -> "1000612"  [ label = "CDG: "] 
  "1000563" -> "1000610"  [ label = "CDG: "] 
  "1000563" -> "1000609"  [ label = "CDG: "] 
  "1000563" -> "1000637"  [ label = "CDG: "] 
  "1000563" -> "1000635"  [ label = "CDG: "] 
  "1000563" -> "1000634"  [ label = "CDG: "] 
  "1000563" -> "1000629"  [ label = "CDG: "] 
  "1000563" -> "1000625"  [ label = "CDG: "] 
  "1000563" -> "1000654"  [ label = "CDG: "] 
  "1000563" -> "1000650"  [ label = "CDG: "] 
  "1000563" -> "1000648"  [ label = "CDG: "] 
  "1000563" -> "1000644"  [ label = "CDG: "] 
  "1000563" -> "1000642"  [ label = "CDG: "] 
  "1000563" -> "1000641"  [ label = "CDG: "] 
  "1000563" -> "1000663"  [ label = "CDG: "] 
  "1000563" -> "1000660"  [ label = "CDG: "] 
  "1000563" -> "1000400"  [ label = "CDG: "] 
  "1000563" -> "1000399"  [ label = "CDG: "] 
  "1000563" -> "1000397"  [ label = "CDG: "] 
  "1000563" -> "1000395"  [ label = "CDG: "] 
  "1000563" -> "1000394"  [ label = "CDG: "] 
  "1000563" -> "1000392"  [ label = "CDG: "] 
  "1000563" -> "1000414"  [ label = "CDG: "] 
  "1000563" -> "1000410"  [ label = "CDG: "] 
  "1000563" -> "1000407"  [ label = "CDG: "] 
  "1000563" -> "1000405"  [ label = "CDG: "] 
  "1000563" -> "1000404"  [ label = "CDG: "] 
  "1000563" -> "1000403"  [ label = "CDG: "] 
  "1000563" -> "1000402"  [ label = "CDG: "] 
  "1000563" -> "1000419"  [ label = "CDG: "] 
  "1000563" -> "1000417"  [ label = "CDG: "] 
  "1000563" -> "1000416"  [ label = "CDG: "] 
  "1000564" -> "1000575"  [ label = "CDG: "] 
  "1000564" -> "1000573"  [ label = "CDG: "] 
  "1000564" -> "1000572"  [ label = "CDG: "] 
  "1000564" -> "1000571"  [ label = "CDG: "] 
  "1000564" -> "1000577"  [ label = "CDG: "] 
  "1000572" -> "1000584"  [ label = "CDG: "] 
  "1000572" -> "1000582"  [ label = "CDG: "] 
  "1000572" -> "1000581"  [ label = "CDG: "] 
  "1000572" -> "1000580"  [ label = "CDG: "] 
  "1000572" -> "1000579"  [ label = "CDG: "] 
  "1000580" -> "1000604"  [ label = "CDG: "] 
  "1000580" -> "1000602"  [ label = "CDG: "] 
  "1000580" -> "1000601"  [ label = "CDG: "] 
  "1000581" -> "1000592"  [ label = "CDG: "] 
  "1000581" -> "1000591"  [ label = "CDG: "] 
  "1000581" -> "1000588"  [ label = "CDG: "] 
  "1000581" -> "1000586"  [ label = "CDG: "] 
  "1000581" -> "1000595"  [ label = "CDG: "] 
  "1000581" -> "1000593"  [ label = "CDG: "] 
  "1000591" -> "1000600"  [ label = "CDG: "] 
  "1000591" -> "1000598"  [ label = "CDG: "] 
  "1000629" -> "1000631"  [ label = "CDG: "] 
  "1000641" -> "1000645"  [ label = "CDG: "] 
}
