digraph hostapd_notif_assoc {  
"1000117" [label = "(METHOD,hostapd_notif_assoc)" ]
"1000610" [label = "(METHOD_RETURN,int __cdecl)" ]
"1000118" [label = "(PARAM,hostapd_data *hapd)" ]
"1000119" [label = "(PARAM,const u8 *addr)" ]
"1000120" [label = "(PARAM,const u8 *req_ies)" ]
"1000121" [label = "(PARAM,size_t req_ies_len)" ]
"1000122" [label = "(PARAM,int reassoc)" ]
"1000140" [label = "(<operator>.assignment,hapda = hapd)" ]
"1000143" [label = "(<operator>.assignment,addra = addr)" ]
"1000146" [label = "(<operator>.assignment,req_iesa = req_ies)" ]
"1000149" [label = "(<operator>.assignment,req_ies_lena = req_ies_len)" ]
"1000152" [label = "(<operator>.assignment,reassoca = reassoc)" ]
"1000156" [label = "(<operator>.logicalNot,!addr)" ]
"1000159" [label = "(wpa_printf,wpa_printf(2, \"hostapd_notif_assoc: Skip event with no address\"))" ]
"1000162" [label = "(RETURN,return -1;,return -1;)" ]
"1000163" [label = "(<operator>.minus,-1)" ]
"1000165" [label = "(hostapd_logger,hostapd_logger(hapda, addra, 1u, 2, \"associated\"))" ]
"1000171" [label = "(ieee802_11_parse_elems,ieee802_11_parse_elems(req_iesa, req_ies_lena, &elems, 0))" ]
"1000182" [label = "(<operator>.assignment,ie = elems.wps_ie - 2)" ]
"1000184" [label = "(<operator>.subtraction,elems.wps_ie - 2)" ]
"1000189" [label = "(<operator>.assignment,ielen = elems.wps_ie_len + 2)" ]
"1000191" [label = "(<operator>.addition,elems.wps_ie_len + 2)" ]
"1000196" [label = "(wpa_printf,wpa_printf(2, \"STA included WPS IE in (Re)AssocReq\"))" ]
"1000205" [label = "(<operator>.assignment,ie = elems.rsn_ie - 2)" ]
"1000207" [label = "(<operator>.subtraction,elems.rsn_ie - 2)" ]
"1000212" [label = "(<operator>.assignment,ielen = elems.rsn_ie_len + 2)" ]
"1000214" [label = "(<operator>.addition,elems.rsn_ie_len + 2)" ]
"1000219" [label = "(wpa_printf,wpa_printf(2, \"STA included RSN IE in (Re)AssocReq\"))" ]
"1000228" [label = "(<operator>.assignment,ie = elems.wpa_ie - 2)" ]
"1000230" [label = "(<operator>.subtraction,elems.wpa_ie - 2)" ]
"1000235" [label = "(<operator>.assignment,ielen = elems.wpa_ie_len + 2)" ]
"1000237" [label = "(<operator>.addition,elems.wpa_ie_len + 2)" ]
"1000242" [label = "(wpa_printf,wpa_printf(2, \"STA included WPA IE in (Re)AssocReq\"))" ]
"1000247" [label = "(IDENTIFIER,L,)" ]
"1000248" [label = "(IDENTIFIER,L,)" ]
"1000249" [label = "(wpa_printf,wpa_printf(2, \"STA did not include WPS/RSN/WPA IE in (Re)AssocReq\"))" ]
"1000252" [label = "(<operator>.assignment,sta = ap_get_sta(hapda, addra))" ]
"1000254" [label = "(ap_get_sta,ap_get_sta(hapda, addra))" ]
"1000258" [label = "(IDENTIFIER,sta,if ( sta ))" ]
"1000260" [label = "(ap_sta_no_session_timeout,ap_sta_no_session_timeout(hapda, sta))" ]
"1000263" [label = "(accounting_sta_stop,accounting_sta_stop(hapda, sta))" ]
"1000266" [label = "(<operator>.assignment,sta->timeout_next = STA_NULLFUNC)" ]
"1000273" [label = "(<operator>.assignment,sta = ap_sta_add(hapda, addra))" ]
"1000275" [label = "(ap_sta_add,ap_sta_add(hapda, addra))" ]
"1000279" [label = "(<operator>.logicalNot,!sta)" ]
"1000282" [label = "(hostapd_drv_sta_disassoc,hostapd_drv_sta_disassoc(hapda, addra, 5))" ]
"1000286" [label = "(RETURN,return -1;,return -1;)" ]
"1000287" [label = "(<operator>.minus,-1)" ]
"1000289" [label = "(<operators>.assignmentAnd,sta->flags &= 0xFFFECFFF)" ]
"1000295" [label = "(wpa_printf,wpa_printf(\n      3,\n      \"STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect\",\n      *addra,\n      addra[1],\n      addra[2],\n      addra[3],\n      addra[4],\n      addra[5]))" ]
"1000315" [label = "(<operator>.assignment,reason = 1)" ]
"1000319" [label = "(hostapd_drv_sta_disassoc,hostapd_drv_sta_disassoc(hapda, sta->addr, reason))" ]
"1000325" [label = "(ap_free_sta,ap_free_sta(hapda, sta))" ]
"1000328" [label = "(RETURN,return -1;,return -1;)" ]
"1000329" [label = "(<operator>.minus,-1)" ]
"1000331" [label = "(mbo_ap_check_sta_assoc,mbo_ap_check_sta_assoc(hapda, sta, &elems))" ]
"1000336" [label = "(ap_copy_sta_supp_op_classes,ap_copy_sta_supp_op_classes(sta, elems.supp_op_classes, elems.supp_op_classes_len))" ]
"1000352" [label = "(<operator>.logicalOr,!ie || !ielen)" ]
"1000353" [label = "(<operator>.logicalNot,!ie)" ]
"1000355" [label = "(<operator>.logicalNot,!ielen)" ]
"1000358" [label = "(wpa_printf,wpa_printf(2, \"No WPA/RSN IE from STA\"))" ]
"1000361" [label = "(<operator>.assignment,reason = 13)" ]
"1000366" [label = "(<operator>.logicalNot,!sta->wpa_sm)" ]
"1000371" [label = "(<operator>.assignment,sta->wpa_sm = v5)" ]
"1000377" [label = "(<operator>.logicalNot,!sta->wpa_sm)" ]
"1000382" [label = "(wpa_printf,wpa_printf(5, \"Failed to initialize WPA state machine\"))" ]
"1000385" [label = "(RETURN,return -1;,return -1;)" ]
"1000386" [label = "(<operator>.minus,-1)" ]
"1000388" [label = "(<operator>.assignment,res = wpa_validate_wpa_ie(\n            hapda->wpa_auth,\n            sta->wpa_sm,\n            hapda->iface->freq,\n            ie,\n            ielen,\n            elems.mdie,\n            elems.mdie_len,\n            elems.owe_dh,\n            elems.owe_dh_len))" ]
"1000390" [label = "(wpa_validate_wpa_ie,wpa_validate_wpa_ie(\n            hapda->wpa_auth,\n            sta->wpa_sm,\n            hapda->iface->freq,\n            ie,\n            ielen,\n            elems.mdie,\n            elems.mdie_len,\n            elems.owe_dh,\n            elems.owe_dh_len))" ]
"1000417" [label = "(IDENTIFIER,res,if ( res ))" ]
"1000419" [label = "(wpa_printf,wpa_printf(2, \"WPA/RSN information element rejected? (res %u)\", (unsigned int)res))" ]
"1000422" [label = "(<operator>.cast,(unsigned int)res)" ]
"1000425" [label = "(wpa_hexdump,wpa_hexdump(2, \"IE\", ie, ielen))" ]
"1000431" [label = "(IDENTIFIER,res,switch ( res ))" ]
"1000434" [label = "(<operator>.assignment,reason = 18)" ]
"1000439" [label = "(<operator>.assignment,reason = 19)" ]
"1000444" [label = "(<operator>.assignment,reason = 20)" ]
"1000449" [label = "(<operator>.assignment,reason = 13)" ]
"1000454" [label = "(<operator>.assignment,reason = 24)" ]
"1000459" [label = "(<operator>.assignment,reason = 13)" ]
"1000465" [label = "(<operator>.logicalAnd,(sta->flags & 0x402) == 1026 && !sta->sa_query_timed_out && sta->sa_query_count > 0)" ]
"1000466" [label = "(<operator>.equals,(sta->flags & 0x402) == 1026)" ]
"1000467" [label = "(<operator>.and,sta->flags & 0x402)" ]
"1000473" [label = "(<operator>.logicalAnd,!sta->sa_query_timed_out && sta->sa_query_count > 0)" ]
"1000474" [label = "(<operator>.logicalNot,!sta->sa_query_timed_out)" ]
"1000478" [label = "(<operator>.greaterThan,sta->sa_query_count > 0)" ]
"1000483" [label = "(ap_check_sa_query_timeout,ap_check_sa_query_timeout(hapda, sta))" ]
"1000487" [label = "(<operator>.logicalAnd,(sta->flags & 0x402) == 1026 && !sta->sa_query_timed_out && sta->auth_alg != 2)" ]
"1000488" [label = "(<operator>.equals,(sta->flags & 0x402) == 1026)" ]
"1000489" [label = "(<operator>.and,sta->flags & 0x402)" ]
"1000495" [label = "(<operator>.logicalAnd,!sta->sa_query_timed_out && sta->auth_alg != 2)" ]
"1000496" [label = "(<operator>.logicalNot,!sta->sa_query_timed_out)" ]
"1000500" [label = "(<operator>.notEquals,sta->auth_alg != 2)" ]
"1000507" [label = "(<operator>.logicalNot,!sta->sa_query_count)" ]
"1000511" [label = "(hc_BN_cmp,hc_BN_cmp(hapda, sta))" ]
"1000514" [label = "(<operator>.assignment,p = hostapd_eid_assoc_comeback_time(hapda, sta, buf))" ]
"1000516" [label = "(hostapd_eid_assoc_comeback_time,hostapd_eid_assoc_comeback_time(hapda, sta, buf))" ]
"1000520" [label = "(hostapd_sta_assoc,hostapd_sta_assoc(hapda, addra, reassoca, 0x1Eu, buf, p - buf))" ]
"1000526" [label = "(<operator>.subtraction,p - buf)" ]
"1000529" [label = "(RETURN,return 0;,return 0;)" ]
"1000530" [label = "(LITERAL,0,return 0;)" ]
"1000532" [label = "(wpa_auth_uses_mfp,wpa_auth_uses_mfp(sta->wpa_sm))" ]
"1000536" [label = "(<operator>.assignment,v6 = sta->flags | 0x400)" ]
"1000538" [label = "(<operator>.or,sta->flags | 0x400)" ]
"1000544" [label = "(<operator>.assignment,v6 = sta->flags & 0xFFFFFBFF)" ]
"1000546" [label = "(<operator>.and,sta->flags & 0xFFFFFBFF)" ]
"1000551" [label = "(<operator>.assignment,sta->flags = v6)" ]
"1000556" [label = "(<operator>.assignment,new_assoc = (sta->flags & 2) == 0)" ]
"1000558" [label = "(<operator>.equals,(sta->flags & 2) == 0)" ]
"1000559" [label = "(<operator>.and,sta->flags & 2)" ]
"1000565" [label = "(<operators>.assignmentOr,sta->flags |= 3u)" ]
"1000570" [label = "(<operators>.assignmentAnd,sta->flags &= 0xFFF7FFFF)" ]
"1000575" [label = "(hostapd_set_sta_flags,hostapd_set_sta_flags(hapda, sta))" ]
"1000579" [label = "(<operator>.logicalAnd,reassoca && sta->auth_alg == 2)" ]
"1000581" [label = "(<operator>.equals,sta->auth_alg == 2)" ]
"1000586" [label = "(wpa_auth_sm_event,wpa_auth_sm_event(sta->wpa_sm, WPA_ASSOC_FT))" ]
"1000592" [label = "(wpa_auth_sm_event,wpa_auth_sm_event(sta->wpa_sm, WPA_ASSOC))" ]
"1000597" [label = "(hostapd_new_assoc_sta,hostapd_new_assoc_sta(hapda, sta, new_assoc == 0))" ]
"1000600" [label = "(<operator>.equals,new_assoc == 0)" ]
"1000603" [label = "(ieee802_1x_notify_port_enabled,ieee802_1x_notify_port_enabled(sta->eapol_sm, 1))" ]
"1000608" [label = "(RETURN,return 0;,return 0;)" ]
"1000609" [label = "(LITERAL,0,return 0;)" ]
"1000174" [label = "(<operator>.addressOf,&elems)" ]
"1000178" [label = "(<operator>.fieldAccess,elems.wps_ie)" ]
"1000180" [label = "(FIELD_IDENTIFIER,wps_ie,wps_ie)" ]
"1000185" [label = "(<operator>.fieldAccess,elems.wps_ie)" ]
"1000187" [label = "(FIELD_IDENTIFIER,wps_ie,wps_ie)" ]
"1000192" [label = "(<operator>.fieldAccess,elems.wps_ie_len)" ]
"1000194" [label = "(FIELD_IDENTIFIER,wps_ie_len,wps_ie_len)" ]
"1000201" [label = "(<operator>.fieldAccess,elems.rsn_ie)" ]
"1000203" [label = "(FIELD_IDENTIFIER,rsn_ie,rsn_ie)" ]
"1000208" [label = "(<operator>.fieldAccess,elems.rsn_ie)" ]
"1000210" [label = "(FIELD_IDENTIFIER,rsn_ie,rsn_ie)" ]
"1000215" [label = "(<operator>.fieldAccess,elems.rsn_ie_len)" ]
"1000217" [label = "(FIELD_IDENTIFIER,rsn_ie_len,rsn_ie_len)" ]
"1000224" [label = "(<operator>.fieldAccess,elems.wpa_ie)" ]
"1000226" [label = "(FIELD_IDENTIFIER,wpa_ie,wpa_ie)" ]
"1000231" [label = "(<operator>.fieldAccess,elems.wpa_ie)" ]
"1000233" [label = "(FIELD_IDENTIFIER,wpa_ie,wpa_ie)" ]
"1000238" [label = "(<operator>.fieldAccess,elems.wpa_ie_len)" ]
"1000240" [label = "(FIELD_IDENTIFIER,wpa_ie_len,wpa_ie_len)" ]
"1000267" [label = "(<operator>.indirectFieldAccess,sta->timeout_next)" ]
"1000269" [label = "(FIELD_IDENTIFIER,timeout_next,timeout_next)" ]
"1000290" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000292" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000298" [label = "(<operator>.indirection,*addra)" ]
"1000300" [label = "(<operator>.indirectIndexAccess,addra[1])" ]
"1000303" [label = "(<operator>.indirectIndexAccess,addra[2])" ]
"1000306" [label = "(<operator>.indirectIndexAccess,addra[3])" ]
"1000309" [label = "(<operator>.indirectIndexAccess,addra[4])" ]
"1000312" [label = "(<operator>.indirectIndexAccess,addra[5])" ]
"1000321" [label = "(<operator>.indirectFieldAccess,sta->addr)" ]
"1000323" [label = "(FIELD_IDENTIFIER,addr,addr)" ]
"1000345" [label = "(<operator>.indirectFieldAccess,hapda->conf->wpa)" ]
"1000367" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000369" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000372" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000374" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000378" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000380" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000391" [label = "(<operator>.indirectFieldAccess,hapda->wpa_auth)" ]
"1000393" [label = "(FIELD_IDENTIFIER,wpa_auth,wpa_auth)" ]
"1000394" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000396" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000397" [label = "(<operator>.indirectFieldAccess,hapda->iface->freq)" ]
"1000398" [label = "(<operator>.indirectFieldAccess,hapda->iface)" ]
"1000400" [label = "(FIELD_IDENTIFIER,iface,iface)" ]
"1000401" [label = "(FIELD_IDENTIFIER,freq,freq)" ]
"1000404" [label = "(<operator>.fieldAccess,elems.mdie)" ]
"1000406" [label = "(FIELD_IDENTIFIER,mdie,mdie)" ]
"1000407" [label = "(<operator>.fieldAccess,elems.mdie_len)" ]
"1000409" [label = "(FIELD_IDENTIFIER,mdie_len,mdie_len)" ]
"1000410" [label = "(<operator>.fieldAccess,elems.owe_dh)" ]
"1000412" [label = "(FIELD_IDENTIFIER,owe_dh,owe_dh)" ]
"1000413" [label = "(<operator>.fieldAccess,elems.owe_dh_len)" ]
"1000415" [label = "(FIELD_IDENTIFIER,owe_dh_len,owe_dh_len)" ]
"1000423" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000468" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000470" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000475" [label = "(<operator>.indirectFieldAccess,sta->sa_query_timed_out)" ]
"1000477" [label = "(FIELD_IDENTIFIER,sa_query_timed_out,sa_query_timed_out)" ]
"1000479" [label = "(<operator>.indirectFieldAccess,sta->sa_query_count)" ]
"1000481" [label = "(FIELD_IDENTIFIER,sa_query_count,sa_query_count)" ]
"1000490" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000492" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000497" [label = "(<operator>.indirectFieldAccess,sta->sa_query_timed_out)" ]
"1000499" [label = "(FIELD_IDENTIFIER,sa_query_timed_out,sa_query_timed_out)" ]
"1000501" [label = "(<operator>.indirectFieldAccess,sta->auth_alg)" ]
"1000503" [label = "(FIELD_IDENTIFIER,auth_alg,auth_alg)" ]
"1000508" [label = "(<operator>.indirectFieldAccess,sta->sa_query_count)" ]
"1000510" [label = "(FIELD_IDENTIFIER,sa_query_count,sa_query_count)" ]
"1000533" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000535" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000539" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000541" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000547" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000549" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000552" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000554" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000560" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000562" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000566" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000568" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000571" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000573" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000582" [label = "(<operator>.indirectFieldAccess,sta->auth_alg)" ]
"1000584" [label = "(FIELD_IDENTIFIER,auth_alg,auth_alg)" ]
"1000587" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000589" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000593" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000595" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000604" [label = "(<operator>.indirectFieldAccess,sta->eapol_sm)" ]
"1000606" [label = "(FIELD_IDENTIFIER,eapol_sm,eapol_sm)" ]
  "1000328" -> "1000610"  [ label = "DDG: <RET>"] 
  "1000331" -> "1000610"  [ label = "DDG: mbo_ap_check_sta_assoc(hapda, sta, &elems)"] 
  "1000526" -> "1000610"  [ label = "DDG: p"] 
  "1000260" -> "1000610"  [ label = "DDG: ap_sta_no_session_timeout(hapda, sta)"] 
  "1000325" -> "1000610"  [ label = "DDG: sta"] 
  "1000143" -> "1000610"  [ label = "DDG: addra"] 
  "1000266" -> "1000610"  [ label = "DDG: sta->timeout_next"] 
  "1000581" -> "1000610"  [ label = "DDG: sta->auth_alg"] 
  "1000487" -> "1000610"  [ label = "DDG: !sta->sa_query_timed_out && sta->auth_alg != 2"] 
  "1000516" -> "1000610"  [ label = "DDG: sta"] 
  "1000390" -> "1000610"  [ label = "DDG: sta->wpa_sm"] 
  "1000579" -> "1000610"  [ label = "DDG: sta->auth_alg == 2"] 
  "1000295" -> "1000610"  [ label = "DDG: wpa_printf(\n      3,\n      \"STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect\",\n      *addra,\n      addra[1],\n      addra[2],\n      addra[3],\n      addra[4],\n      addra[5])"] 
  "1000597" -> "1000610"  [ label = "DDG: new_assoc == 0"] 
  "1000570" -> "1000610"  [ label = "DDG: sta->flags"] 
  "1000388" -> "1000610"  [ label = "DDG: res"] 
  "1000189" -> "1000610"  [ label = "DDG: elems.wps_ie_len + 2"] 
  "1000422" -> "1000610"  [ label = "DDG: res"] 
  "1000390" -> "1000610"  [ label = "DDG: elems.mdie_len"] 
  "1000495" -> "1000610"  [ label = "DDG: !sta->sa_query_timed_out"] 
  "1000495" -> "1000610"  [ label = "DDG: sta->auth_alg != 2"] 
  "1000163" -> "1000610"  [ label = "DDG: -1"] 
  "1000352" -> "1000610"  [ label = "DDG: !ie || !ielen"] 
  "1000520" -> "1000610"  [ label = "DDG: buf"] 
  "1000473" -> "1000610"  [ label = "DDG: sta->sa_query_count > 0"] 
  "1000325" -> "1000610"  [ label = "DDG: ap_free_sta(hapda, sta)"] 
  "1000352" -> "1000610"  [ label = "DDG: !ie"] 
  "1000319" -> "1000610"  [ label = "DDG: hostapd_drv_sta_disassoc(hapda, sta->addr, reason)"] 
  "1000171" -> "1000610"  [ label = "DDG: &elems"] 
  "1000319" -> "1000610"  [ label = "DDG: sta->addr"] 
  "1000487" -> "1000610"  [ label = "DDG: (sta->flags & 0x402) == 1026"] 
  "1000336" -> "1000610"  [ label = "DDG: sta"] 
  "1000122" -> "1000610"  [ label = "DDG: reassoc"] 
  "1000536" -> "1000610"  [ label = "DDG: sta->flags | 0x400"] 
  "1000140" -> "1000610"  [ label = "DDG: hapd"] 
  "1000182" -> "1000610"  [ label = "DDG: elems.wps_ie - 2"] 
  "1000419" -> "1000610"  [ label = "DDG: (unsigned int)res"] 
  "1000212" -> "1000610"  [ label = "DDG: ielen"] 
  "1000558" -> "1000610"  [ label = "DDG: sta->flags & 2"] 
  "1000156" -> "1000610"  [ label = "DDG: addr"] 
  "1000331" -> "1000610"  [ label = "DDG: &elems"] 
  "1000228" -> "1000610"  [ label = "DDG: elems.wpa_ie - 2"] 
  "1000551" -> "1000610"  [ label = "DDG: v6"] 
  "1000228" -> "1000610"  [ label = "DDG: ie"] 
  "1000289" -> "1000610"  [ label = "DDG: sta->flags"] 
  "1000597" -> "1000610"  [ label = "DDG: hostapd_new_assoc_sta(hapda, sta, new_assoc == 0)"] 
  "1000579" -> "1000610"  [ label = "DDG: reassoca && sta->auth_alg == 2"] 
  "1000254" -> "1000610"  [ label = "DDG: addra"] 
  "1000483" -> "1000610"  [ label = "DDG: ap_check_sa_query_timeout(hapda, sta)"] 
  "1000282" -> "1000610"  [ label = "DDG: hapda"] 
  "1000352" -> "1000610"  [ label = "DDG: !ielen"] 
  "1000295" -> "1000610"  [ label = "DDG: *addra"] 
  "1000355" -> "1000610"  [ label = "DDG: ielen"] 
  "1000382" -> "1000610"  [ label = "DDG: wpa_printf(5, \"Failed to initialize WPA state machine\")"] 
  "1000544" -> "1000610"  [ label = "DDG: sta->flags & 0xFFFFFBFF"] 
  "1000500" -> "1000610"  [ label = "DDG: sta->auth_alg"] 
  "1000390" -> "1000610"  [ label = "DDG: hapda->wpa_auth"] 
  "1000390" -> "1000610"  [ label = "DDG: ie"] 
  "1000465" -> "1000610"  [ label = "DDG: (sta->flags & 0x402) == 1026 && !sta->sa_query_timed_out && sta->sa_query_count > 0"] 
  "1000212" -> "1000610"  [ label = "DDG: elems.rsn_ie_len + 2"] 
  "1000487" -> "1000610"  [ label = "DDG: (sta->flags & 0x402) == 1026 && !sta->sa_query_timed_out && sta->auth_alg != 2"] 
  "1000266" -> "1000610"  [ label = "DDG: STA_NULLFUNC"] 
  "1000152" -> "1000610"  [ label = "DDG: reassoca"] 
  "1000336" -> "1000610"  [ label = "DDG: elems.supp_op_classes_len"] 
  "1000182" -> "1000610"  [ label = "DDG: ie"] 
  "1000556" -> "1000610"  [ label = "DDG: (sta->flags & 2) == 0"] 
  "1000149" -> "1000610"  [ label = "DDG: req_ies_lena"] 
  "1000520" -> "1000610"  [ label = "DDG: reassoca"] 
  "1000603" -> "1000610"  [ label = "DDG: ieee802_1x_notify_port_enabled(sta->eapol_sm, 1)"] 
  "1000146" -> "1000610"  [ label = "DDG: req_iesa"] 
  "1000146" -> "1000610"  [ label = "DDG: req_ies"] 
  "1000235" -> "1000610"  [ label = "DDG: ielen"] 
  "1000282" -> "1000610"  [ label = "DDG: hostapd_drv_sta_disassoc(hapda, addra, 5)"] 
  "1000419" -> "1000610"  [ label = "DDG: wpa_printf(2, \"WPA/RSN information element rejected? (res %u)\", (unsigned int)res)"] 
  "1000520" -> "1000610"  [ label = "DDG: addra"] 
  "1000189" -> "1000610"  [ label = "DDG: ielen"] 
  "1000474" -> "1000610"  [ label = "DDG: sta->sa_query_timed_out"] 
  "1000214" -> "1000610"  [ label = "DDG: elems.rsn_ie_len"] 
  "1000235" -> "1000610"  [ label = "DDG: elems.wpa_ie_len + 2"] 
  "1000390" -> "1000610"  [ label = "DDG: ielen"] 
  "1000275" -> "1000610"  [ label = "DDG: addra"] 
  "1000390" -> "1000610"  [ label = "DDG: elems.owe_dh"] 
  "1000507" -> "1000610"  [ label = "DDG: sta->sa_query_count"] 
  "1000263" -> "1000610"  [ label = "DDG: accounting_sta_stop(hapda, sta)"] 
  "1000520" -> "1000610"  [ label = "DDG: p - buf"] 
  "1000377" -> "1000610"  [ label = "DDG: sta->wpa_sm"] 
  "1000600" -> "1000610"  [ label = "DDG: new_assoc"] 
  "1000592" -> "1000610"  [ label = "DDG: WPA_ASSOC"] 
  "1000159" -> "1000610"  [ label = "DDG: wpa_printf(2, \"hostapd_notif_assoc: Skip event with no address\")"] 
  "1000489" -> "1000610"  [ label = "DDG: sta->flags"] 
  "1000184" -> "1000610"  [ label = "DDG: elems.wps_ie"] 
  "1000205" -> "1000610"  [ label = "DDG: elems.rsn_ie - 2"] 
  "1000514" -> "1000610"  [ label = "DDG: hostapd_eid_assoc_comeback_time(hapda, sta, buf)"] 
  "1000279" -> "1000610"  [ label = "DDG: !sta"] 
  "1000575" -> "1000610"  [ label = "DDG: hostapd_set_sta_flags(hapda, sta)"] 
  "1000273" -> "1000610"  [ label = "DDG: ap_sta_add(hapda, addra)"] 
  "1000249" -> "1000610"  [ label = "DDG: wpa_printf(2, \"STA did not include WPS/RSN/WPA IE in (Re)AssocReq\")"] 
  "1000425" -> "1000610"  [ label = "DDG: wpa_hexdump(2, \"IE\", ie, ielen)"] 
  "1000295" -> "1000610"  [ label = "DDG: addra[2]"] 
  "1000592" -> "1000610"  [ label = "DDG: sta->wpa_sm"] 
  "1000230" -> "1000610"  [ label = "DDG: elems.wpa_ie"] 
  "1000597" -> "1000610"  [ label = "DDG: sta"] 
  "1000287" -> "1000610"  [ label = "DDG: -1"] 
  "1000520" -> "1000610"  [ label = "DDG: hostapd_sta_assoc(hapda, addra, reassoca, 0x1Eu, buf, p - buf)"] 
  "1000331" -> "1000610"  [ label = "DDG: hapda"] 
  "1000171" -> "1000610"  [ label = "DDG: ieee802_11_parse_elems(req_iesa, req_ies_lena, &elems, 0)"] 
  "1000465" -> "1000610"  [ label = "DDG: !sta->sa_query_timed_out && sta->sa_query_count > 0"] 
  "1000586" -> "1000610"  [ label = "DDG: sta->wpa_sm"] 
  "1000207" -> "1000610"  [ label = "DDG: elems.rsn_ie"] 
  "1000140" -> "1000610"  [ label = "DDG: hapda"] 
  "1000390" -> "1000610"  [ label = "DDG: elems.mdie"] 
  "1000478" -> "1000610"  [ label = "DDG: sta->sa_query_count"] 
  "1000191" -> "1000610"  [ label = "DDG: elems.wps_ie_len"] 
  "1000507" -> "1000610"  [ label = "DDG: !sta->sa_query_count"] 
  "1000532" -> "1000610"  [ label = "DDG: wpa_auth_uses_mfp(sta->wpa_sm)"] 
  "1000279" -> "1000610"  [ label = "DDG: sta"] 
  "1000156" -> "1000610"  [ label = "DDG: !addr"] 
  "1000295" -> "1000610"  [ label = "DDG: addra[3]"] 
  "1000336" -> "1000610"  [ label = "DDG: ap_copy_sta_supp_op_classes(sta, elems.supp_op_classes, elems.supp_op_classes_len)"] 
  "1000295" -> "1000610"  [ label = "DDG: addra[1]"] 
  "1000592" -> "1000610"  [ label = "DDG: wpa_auth_sm_event(sta->wpa_sm, WPA_ASSOC)"] 
  "1000488" -> "1000610"  [ label = "DDG: sta->flags & 0x402"] 
  "1000205" -> "1000610"  [ label = "DDG: ie"] 
  "1000586" -> "1000610"  [ label = "DDG: wpa_auth_sm_event(sta->wpa_sm, WPA_ASSOC_FT)"] 
  "1000329" -> "1000610"  [ label = "DDG: -1"] 
  "1000377" -> "1000610"  [ label = "DDG: !sta->wpa_sm"] 
  "1000196" -> "1000610"  [ label = "DDG: wpa_printf(2, \"STA included WPS IE in (Re)AssocReq\")"] 
  "1000425" -> "1000610"  [ label = "DDG: ie"] 
  "1000242" -> "1000610"  [ label = "DDG: wpa_printf(2, \"STA included WPA IE in (Re)AssocReq\")"] 
  "1000353" -> "1000610"  [ label = "DDG: ie"] 
  "1000586" -> "1000610"  [ label = "DDG: WPA_ASSOC_FT"] 
  "1000371" -> "1000610"  [ label = "DDG: v5"] 
  "1000597" -> "1000610"  [ label = "DDG: hapda"] 
  "1000390" -> "1000610"  [ label = "DDG: hapda->iface->freq"] 
  "1000171" -> "1000610"  [ label = "DDG: req_ies_lena"] 
  "1000282" -> "1000610"  [ label = "DDG: addra"] 
  "1000237" -> "1000610"  [ label = "DDG: elems.wpa_ie_len"] 
  "1000511" -> "1000610"  [ label = "DDG: hc_BN_cmp(hapda, sta)"] 
  "1000603" -> "1000610"  [ label = "DDG: sta->eapol_sm"] 
  "1000579" -> "1000610"  [ label = "DDG: reassoca"] 
  "1000295" -> "1000610"  [ label = "DDG: addra[4]"] 
  "1000520" -> "1000610"  [ label = "DDG: hapda"] 
  "1000496" -> "1000610"  [ label = "DDG: sta->sa_query_timed_out"] 
  "1000252" -> "1000610"  [ label = "DDG: ap_get_sta(hapda, addra)"] 
  "1000390" -> "1000610"  [ label = "DDG: elems.owe_dh_len"] 
  "1000473" -> "1000610"  [ label = "DDG: !sta->sa_query_timed_out"] 
  "1000325" -> "1000610"  [ label = "DDG: hapda"] 
  "1000171" -> "1000610"  [ label = "DDG: req_iesa"] 
  "1000152" -> "1000610"  [ label = "DDG: reassoc"] 
  "1000336" -> "1000610"  [ label = "DDG: elems.supp_op_classes"] 
  "1000319" -> "1000610"  [ label = "DDG: reason"] 
  "1000358" -> "1000610"  [ label = "DDG: wpa_printf(2, \"No WPA/RSN IE from STA\")"] 
  "1000295" -> "1000610"  [ label = "DDG: addra[5]"] 
  "1000425" -> "1000610"  [ label = "DDG: ielen"] 
  "1000386" -> "1000610"  [ label = "DDG: -1"] 
  "1000165" -> "1000610"  [ label = "DDG: hostapd_logger(hapda, addra, 1u, 2, \"associated\")"] 
  "1000388" -> "1000610"  [ label = "DDG: wpa_validate_wpa_ie(\n            hapda->wpa_auth,\n            sta->wpa_sm,\n            hapda->iface->freq,\n            ie,\n            ielen,\n            elems.mdie,\n            elems.mdie_len,\n            elems.owe_dh,\n            elems.owe_dh_len)"] 
  "1000219" -> "1000610"  [ label = "DDG: wpa_printf(2, \"STA included RSN IE in (Re)AssocReq\")"] 
  "1000149" -> "1000610"  [ label = "DDG: req_ies_len"] 
  "1000385" -> "1000610"  [ label = "DDG: <RET>"] 
  "1000608" -> "1000610"  [ label = "DDG: <RET>"] 
  "1000529" -> "1000610"  [ label = "DDG: <RET>"] 
  "1000162" -> "1000610"  [ label = "DDG: <RET>"] 
  "1000286" -> "1000610"  [ label = "DDG: <RET>"] 
  "1000117" -> "1000118"  [ label = "DDG: "] 
  "1000117" -> "1000119"  [ label = "DDG: "] 
  "1000117" -> "1000120"  [ label = "DDG: "] 
  "1000117" -> "1000121"  [ label = "DDG: "] 
  "1000117" -> "1000122"  [ label = "DDG: "] 
  "1000117" -> "1000140"  [ label = "DDG: "] 
  "1000117" -> "1000143"  [ label = "DDG: "] 
  "1000117" -> "1000146"  [ label = "DDG: "] 
  "1000117" -> "1000149"  [ label = "DDG: "] 
  "1000122" -> "1000152"  [ label = "DDG: reassoc"] 
  "1000117" -> "1000152"  [ label = "DDG: "] 
  "1000117" -> "1000156"  [ label = "DDG: "] 
  "1000117" -> "1000159"  [ label = "DDG: "] 
  "1000163" -> "1000162"  [ label = "DDG: -1"] 
  "1000117" -> "1000163"  [ label = "DDG: "] 
  "1000140" -> "1000165"  [ label = "DDG: hapda"] 
  "1000117" -> "1000165"  [ label = "DDG: "] 
  "1000143" -> "1000165"  [ label = "DDG: addra"] 
  "1000146" -> "1000171"  [ label = "DDG: req_iesa"] 
  "1000117" -> "1000171"  [ label = "DDG: "] 
  "1000149" -> "1000171"  [ label = "DDG: req_ies_lena"] 
  "1000184" -> "1000182"  [ label = "DDG: elems.wps_ie"] 
  "1000184" -> "1000182"  [ label = "DDG: 2"] 
  "1000117" -> "1000182"  [ label = "DDG: "] 
  "1000117" -> "1000184"  [ label = "DDG: "] 
  "1000117" -> "1000189"  [ label = "DDG: "] 
  "1000117" -> "1000191"  [ label = "DDG: "] 
  "1000117" -> "1000196"  [ label = "DDG: "] 
  "1000207" -> "1000205"  [ label = "DDG: elems.rsn_ie"] 
  "1000207" -> "1000205"  [ label = "DDG: 2"] 
  "1000117" -> "1000205"  [ label = "DDG: "] 
  "1000117" -> "1000207"  [ label = "DDG: "] 
  "1000117" -> "1000212"  [ label = "DDG: "] 
  "1000117" -> "1000214"  [ label = "DDG: "] 
  "1000117" -> "1000219"  [ label = "DDG: "] 
  "1000230" -> "1000228"  [ label = "DDG: elems.wpa_ie"] 
  "1000230" -> "1000228"  [ label = "DDG: 2"] 
  "1000117" -> "1000228"  [ label = "DDG: "] 
  "1000117" -> "1000230"  [ label = "DDG: "] 
  "1000117" -> "1000235"  [ label = "DDG: "] 
  "1000117" -> "1000237"  [ label = "DDG: "] 
  "1000117" -> "1000242"  [ label = "DDG: "] 
  "1000117" -> "1000247"  [ label = "DDG: "] 
  "1000117" -> "1000248"  [ label = "DDG: "] 
  "1000117" -> "1000249"  [ label = "DDG: "] 
  "1000254" -> "1000252"  [ label = "DDG: hapda"] 
  "1000254" -> "1000252"  [ label = "DDG: addra"] 
  "1000117" -> "1000252"  [ label = "DDG: "] 
  "1000165" -> "1000254"  [ label = "DDG: hapda"] 
  "1000117" -> "1000254"  [ label = "DDG: "] 
  "1000165" -> "1000254"  [ label = "DDG: addra"] 
  "1000117" -> "1000258"  [ label = "DDG: "] 
  "1000254" -> "1000260"  [ label = "DDG: hapda"] 
  "1000117" -> "1000260"  [ label = "DDG: "] 
  "1000252" -> "1000260"  [ label = "DDG: sta"] 
  "1000260" -> "1000263"  [ label = "DDG: hapda"] 
  "1000117" -> "1000263"  [ label = "DDG: "] 
  "1000260" -> "1000263"  [ label = "DDG: sta"] 
  "1000117" -> "1000266"  [ label = "DDG: "] 
  "1000275" -> "1000273"  [ label = "DDG: hapda"] 
  "1000275" -> "1000273"  [ label = "DDG: addra"] 
  "1000117" -> "1000273"  [ label = "DDG: "] 
  "1000254" -> "1000275"  [ label = "DDG: hapda"] 
  "1000117" -> "1000275"  [ label = "DDG: "] 
  "1000254" -> "1000275"  [ label = "DDG: addra"] 
  "1000273" -> "1000279"  [ label = "DDG: sta"] 
  "1000117" -> "1000279"  [ label = "DDG: "] 
  "1000275" -> "1000282"  [ label = "DDG: hapda"] 
  "1000117" -> "1000282"  [ label = "DDG: "] 
  "1000275" -> "1000282"  [ label = "DDG: addra"] 
  "1000287" -> "1000286"  [ label = "DDG: -1"] 
  "1000117" -> "1000287"  [ label = "DDG: "] 
  "1000117" -> "1000289"  [ label = "DDG: "] 
  "1000117" -> "1000295"  [ label = "DDG: "] 
  "1000254" -> "1000295"  [ label = "DDG: addra"] 
  "1000275" -> "1000295"  [ label = "DDG: addra"] 
  "1000117" -> "1000315"  [ label = "DDG: "] 
  "1000331" -> "1000319"  [ label = "DDG: hapda"] 
  "1000263" -> "1000319"  [ label = "DDG: hapda"] 
  "1000275" -> "1000319"  [ label = "DDG: hapda"] 
  "1000117" -> "1000319"  [ label = "DDG: "] 
  "1000439" -> "1000319"  [ label = "DDG: reason"] 
  "1000454" -> "1000319"  [ label = "DDG: reason"] 
  "1000449" -> "1000319"  [ label = "DDG: reason"] 
  "1000434" -> "1000319"  [ label = "DDG: reason"] 
  "1000444" -> "1000319"  [ label = "DDG: reason"] 
  "1000315" -> "1000319"  [ label = "DDG: reason"] 
  "1000361" -> "1000319"  [ label = "DDG: reason"] 
  "1000459" -> "1000319"  [ label = "DDG: reason"] 
  "1000319" -> "1000325"  [ label = "DDG: hapda"] 
  "1000117" -> "1000325"  [ label = "DDG: "] 
  "1000279" -> "1000325"  [ label = "DDG: sta"] 
  "1000336" -> "1000325"  [ label = "DDG: sta"] 
  "1000263" -> "1000325"  [ label = "DDG: sta"] 
  "1000329" -> "1000328"  [ label = "DDG: -1"] 
  "1000117" -> "1000329"  [ label = "DDG: "] 
  "1000117" -> "1000331"  [ label = "DDG: "] 
  "1000331" -> "1000336"  [ label = "DDG: sta"] 
  "1000117" -> "1000336"  [ label = "DDG: "] 
  "1000353" -> "1000352"  [ label = "DDG: ie"] 
  "1000117" -> "1000353"  [ label = "DDG: "] 
  "1000355" -> "1000352"  [ label = "DDG: ielen"] 
  "1000117" -> "1000355"  [ label = "DDG: "] 
  "1000117" -> "1000358"  [ label = "DDG: "] 
  "1000117" -> "1000361"  [ label = "DDG: "] 
  "1000117" -> "1000371"  [ label = "DDG: "] 
  "1000366" -> "1000377"  [ label = "DDG: sta->wpa_sm"] 
  "1000371" -> "1000377"  [ label = "DDG: sta->wpa_sm"] 
  "1000117" -> "1000382"  [ label = "DDG: "] 
  "1000386" -> "1000385"  [ label = "DDG: -1"] 
  "1000117" -> "1000386"  [ label = "DDG: "] 
  "1000390" -> "1000388"  [ label = "DDG: elems.owe_dh"] 
  "1000390" -> "1000388"  [ label = "DDG: ie"] 
  "1000390" -> "1000388"  [ label = "DDG: hapda->iface->freq"] 
  "1000390" -> "1000388"  [ label = "DDG: elems.owe_dh_len"] 
  "1000390" -> "1000388"  [ label = "DDG: ielen"] 
  "1000390" -> "1000388"  [ label = "DDG: elems.mdie_len"] 
  "1000390" -> "1000388"  [ label = "DDG: sta->wpa_sm"] 
  "1000390" -> "1000388"  [ label = "DDG: elems.mdie"] 
  "1000390" -> "1000388"  [ label = "DDG: hapda->wpa_auth"] 
  "1000117" -> "1000388"  [ label = "DDG: "] 
  "1000377" -> "1000390"  [ label = "DDG: sta->wpa_sm"] 
  "1000353" -> "1000390"  [ label = "DDG: ie"] 
  "1000117" -> "1000390"  [ label = "DDG: "] 
  "1000355" -> "1000390"  [ label = "DDG: ielen"] 
  "1000117" -> "1000417"  [ label = "DDG: "] 
  "1000117" -> "1000419"  [ label = "DDG: "] 
  "1000422" -> "1000419"  [ label = "DDG: res"] 
  "1000388" -> "1000422"  [ label = "DDG: res"] 
  "1000117" -> "1000422"  [ label = "DDG: "] 
  "1000117" -> "1000425"  [ label = "DDG: "] 
  "1000390" -> "1000425"  [ label = "DDG: ie"] 
  "1000390" -> "1000425"  [ label = "DDG: ielen"] 
  "1000117" -> "1000431"  [ label = "DDG: "] 
  "1000117" -> "1000434"  [ label = "DDG: "] 
  "1000117" -> "1000439"  [ label = "DDG: "] 
  "1000117" -> "1000444"  [ label = "DDG: "] 
  "1000117" -> "1000449"  [ label = "DDG: "] 
  "1000117" -> "1000454"  [ label = "DDG: "] 
  "1000117" -> "1000459"  [ label = "DDG: "] 
  "1000466" -> "1000465"  [ label = "DDG: sta->flags & 0x402"] 
  "1000466" -> "1000465"  [ label = "DDG: 1026"] 
  "1000467" -> "1000466"  [ label = "DDG: sta->flags"] 
  "1000467" -> "1000466"  [ label = "DDG: 0x402"] 
  "1000117" -> "1000467"  [ label = "DDG: "] 
  "1000117" -> "1000466"  [ label = "DDG: "] 
  "1000473" -> "1000465"  [ label = "DDG: !sta->sa_query_timed_out"] 
  "1000473" -> "1000465"  [ label = "DDG: sta->sa_query_count > 0"] 
  "1000474" -> "1000473"  [ label = "DDG: sta->sa_query_timed_out"] 
  "1000478" -> "1000473"  [ label = "DDG: sta->sa_query_count"] 
  "1000478" -> "1000473"  [ label = "DDG: 0"] 
  "1000117" -> "1000478"  [ label = "DDG: "] 
  "1000331" -> "1000483"  [ label = "DDG: hapda"] 
  "1000117" -> "1000483"  [ label = "DDG: "] 
  "1000336" -> "1000483"  [ label = "DDG: sta"] 
  "1000488" -> "1000487"  [ label = "DDG: sta->flags & 0x402"] 
  "1000488" -> "1000487"  [ label = "DDG: 1026"] 
  "1000489" -> "1000488"  [ label = "DDG: sta->flags"] 
  "1000489" -> "1000488"  [ label = "DDG: 0x402"] 
  "1000467" -> "1000489"  [ label = "DDG: sta->flags"] 
  "1000117" -> "1000489"  [ label = "DDG: "] 
  "1000117" -> "1000488"  [ label = "DDG: "] 
  "1000495" -> "1000487"  [ label = "DDG: !sta->sa_query_timed_out"] 
  "1000495" -> "1000487"  [ label = "DDG: sta->auth_alg != 2"] 
  "1000496" -> "1000495"  [ label = "DDG: sta->sa_query_timed_out"] 
  "1000474" -> "1000496"  [ label = "DDG: sta->sa_query_timed_out"] 
  "1000500" -> "1000495"  [ label = "DDG: sta->auth_alg"] 
  "1000500" -> "1000495"  [ label = "DDG: 2"] 
  "1000117" -> "1000500"  [ label = "DDG: "] 
  "1000478" -> "1000507"  [ label = "DDG: sta->sa_query_count"] 
  "1000331" -> "1000511"  [ label = "DDG: hapda"] 
  "1000483" -> "1000511"  [ label = "DDG: hapda"] 
  "1000117" -> "1000511"  [ label = "DDG: "] 
  "1000336" -> "1000511"  [ label = "DDG: sta"] 
  "1000483" -> "1000511"  [ label = "DDG: sta"] 
  "1000516" -> "1000514"  [ label = "DDG: hapda"] 
  "1000516" -> "1000514"  [ label = "DDG: sta"] 
  "1000516" -> "1000514"  [ label = "DDG: buf"] 
  "1000117" -> "1000514"  [ label = "DDG: "] 
  "1000511" -> "1000516"  [ label = "DDG: hapda"] 
  "1000331" -> "1000516"  [ label = "DDG: hapda"] 
  "1000483" -> "1000516"  [ label = "DDG: hapda"] 
  "1000117" -> "1000516"  [ label = "DDG: "] 
  "1000336" -> "1000516"  [ label = "DDG: sta"] 
  "1000511" -> "1000516"  [ label = "DDG: sta"] 
  "1000483" -> "1000516"  [ label = "DDG: sta"] 
  "1000516" -> "1000520"  [ label = "DDG: hapda"] 
  "1000117" -> "1000520"  [ label = "DDG: "] 
  "1000526" -> "1000520"  [ label = "DDG: buf"] 
  "1000526" -> "1000520"  [ label = "DDG: p"] 
  "1000514" -> "1000526"  [ label = "DDG: p"] 
  "1000117" -> "1000526"  [ label = "DDG: "] 
  "1000516" -> "1000526"  [ label = "DDG: buf"] 
  "1000530" -> "1000529"  [ label = "DDG: 0"] 
  "1000117" -> "1000529"  [ label = "DDG: "] 
  "1000117" -> "1000530"  [ label = "DDG: "] 
  "1000390" -> "1000532"  [ label = "DDG: sta->wpa_sm"] 
  "1000538" -> "1000536"  [ label = "DDG: sta->flags"] 
  "1000538" -> "1000536"  [ label = "DDG: 0x400"] 
  "1000117" -> "1000536"  [ label = "DDG: "] 
  "1000489" -> "1000538"  [ label = "DDG: sta->flags"] 
  "1000117" -> "1000538"  [ label = "DDG: "] 
  "1000546" -> "1000544"  [ label = "DDG: sta->flags"] 
  "1000546" -> "1000544"  [ label = "DDG: 0xFFFFFBFF"] 
  "1000117" -> "1000544"  [ label = "DDG: "] 
  "1000489" -> "1000546"  [ label = "DDG: sta->flags"] 
  "1000117" -> "1000546"  [ label = "DDG: "] 
  "1000536" -> "1000551"  [ label = "DDG: v6"] 
  "1000544" -> "1000551"  [ label = "DDG: v6"] 
  "1000117" -> "1000551"  [ label = "DDG: "] 
  "1000558" -> "1000556"  [ label = "DDG: sta->flags & 2"] 
  "1000558" -> "1000556"  [ label = "DDG: 0"] 
  "1000117" -> "1000556"  [ label = "DDG: "] 
  "1000559" -> "1000558"  [ label = "DDG: sta->flags"] 
  "1000559" -> "1000558"  [ label = "DDG: 2"] 
  "1000551" -> "1000559"  [ label = "DDG: sta->flags"] 
  "1000117" -> "1000559"  [ label = "DDG: "] 
  "1000117" -> "1000558"  [ label = "DDG: "] 
  "1000117" -> "1000565"  [ label = "DDG: "] 
  "1000559" -> "1000565"  [ label = "DDG: sta->flags"] 
  "1000117" -> "1000570"  [ label = "DDG: "] 
  "1000565" -> "1000570"  [ label = "DDG: sta->flags"] 
  "1000331" -> "1000575"  [ label = "DDG: hapda"] 
  "1000483" -> "1000575"  [ label = "DDG: hapda"] 
  "1000117" -> "1000575"  [ label = "DDG: "] 
  "1000336" -> "1000575"  [ label = "DDG: sta"] 
  "1000483" -> "1000575"  [ label = "DDG: sta"] 
  "1000117" -> "1000579"  [ label = "DDG: "] 
  "1000581" -> "1000579"  [ label = "DDG: sta->auth_alg"] 
  "1000581" -> "1000579"  [ label = "DDG: 2"] 
  "1000500" -> "1000581"  [ label = "DDG: sta->auth_alg"] 
  "1000117" -> "1000581"  [ label = "DDG: "] 
  "1000532" -> "1000586"  [ label = "DDG: sta->wpa_sm"] 
  "1000117" -> "1000586"  [ label = "DDG: "] 
  "1000532" -> "1000592"  [ label = "DDG: sta->wpa_sm"] 
  "1000117" -> "1000592"  [ label = "DDG: "] 
  "1000575" -> "1000597"  [ label = "DDG: hapda"] 
  "1000117" -> "1000597"  [ label = "DDG: "] 
  "1000575" -> "1000597"  [ label = "DDG: sta"] 
  "1000600" -> "1000597"  [ label = "DDG: new_assoc"] 
  "1000600" -> "1000597"  [ label = "DDG: 0"] 
  "1000556" -> "1000600"  [ label = "DDG: new_assoc"] 
  "1000117" -> "1000600"  [ label = "DDG: "] 
  "1000117" -> "1000603"  [ label = "DDG: "] 
  "1000609" -> "1000608"  [ label = "DDG: 0"] 
  "1000117" -> "1000608"  [ label = "DDG: "] 
  "1000117" -> "1000609"  [ label = "DDG: "] 
  "1000156" -> "1000159"  [ label = "CDG: "] 
  "1000156" -> "1000174"  [ label = "CDG: "] 
  "1000156" -> "1000171"  [ label = "CDG: "] 
  "1000156" -> "1000165"  [ label = "CDG: "] 
  "1000156" -> "1000163"  [ label = "CDG: "] 
  "1000156" -> "1000162"  [ label = "CDG: "] 
  "1000156" -> "1000180"  [ label = "CDG: "] 
  "1000156" -> "1000178"  [ label = "CDG: "] 
  "1000156" -> "1000254"  [ label = "CDG: "] 
  "1000156" -> "1000252"  [ label = "CDG: "] 
  "1000156" -> "1000269"  [ label = "CDG: "] 
  "1000156" -> "1000267"  [ label = "CDG: "] 
  "1000156" -> "1000266"  [ label = "CDG: "] 
  "1000156" -> "1000263"  [ label = "CDG: "] 
  "1000156" -> "1000260"  [ label = "CDG: "] 
  "1000156" -> "1000279"  [ label = "CDG: "] 
  "1000156" -> "1000275"  [ label = "CDG: "] 
  "1000156" -> "1000273"  [ label = "CDG: "] 
  "1000156" -> "1000303"  [ label = "CDG: "] 
  "1000156" -> "1000300"  [ label = "CDG: "] 
  "1000156" -> "1000298"  [ label = "CDG: "] 
  "1000156" -> "1000295"  [ label = "CDG: "] 
  "1000156" -> "1000292"  [ label = "CDG: "] 
  "1000156" -> "1000290"  [ label = "CDG: "] 
  "1000156" -> "1000289"  [ label = "CDG: "] 
  "1000156" -> "1000319"  [ label = "CDG: "] 
  "1000156" -> "1000315"  [ label = "CDG: "] 
  "1000156" -> "1000312"  [ label = "CDG: "] 
  "1000156" -> "1000309"  [ label = "CDG: "] 
  "1000156" -> "1000306"  [ label = "CDG: "] 
  "1000156" -> "1000329"  [ label = "CDG: "] 
  "1000156" -> "1000328"  [ label = "CDG: "] 
  "1000156" -> "1000325"  [ label = "CDG: "] 
  "1000156" -> "1000323"  [ label = "CDG: "] 
  "1000156" -> "1000321"  [ label = "CDG: "] 
  "1000178" -> "1000192"  [ label = "CDG: "] 
  "1000178" -> "1000191"  [ label = "CDG: "] 
  "1000178" -> "1000189"  [ label = "CDG: "] 
  "1000178" -> "1000187"  [ label = "CDG: "] 
  "1000178" -> "1000185"  [ label = "CDG: "] 
  "1000178" -> "1000184"  [ label = "CDG: "] 
  "1000178" -> "1000182"  [ label = "CDG: "] 
  "1000178" -> "1000203"  [ label = "CDG: "] 
  "1000178" -> "1000201"  [ label = "CDG: "] 
  "1000178" -> "1000196"  [ label = "CDG: "] 
  "1000178" -> "1000194"  [ label = "CDG: "] 
  "1000201" -> "1000208"  [ label = "CDG: "] 
  "1000201" -> "1000207"  [ label = "CDG: "] 
  "1000201" -> "1000205"  [ label = "CDG: "] 
  "1000201" -> "1000224"  [ label = "CDG: "] 
  "1000201" -> "1000219"  [ label = "CDG: "] 
  "1000201" -> "1000217"  [ label = "CDG: "] 
  "1000201" -> "1000215"  [ label = "CDG: "] 
  "1000201" -> "1000214"  [ label = "CDG: "] 
  "1000201" -> "1000212"  [ label = "CDG: "] 
  "1000201" -> "1000210"  [ label = "CDG: "] 
  "1000201" -> "1000226"  [ label = "CDG: "] 
  "1000224" -> "1000240"  [ label = "CDG: "] 
  "1000224" -> "1000238"  [ label = "CDG: "] 
  "1000224" -> "1000237"  [ label = "CDG: "] 
  "1000224" -> "1000235"  [ label = "CDG: "] 
  "1000224" -> "1000233"  [ label = "CDG: "] 
  "1000224" -> "1000231"  [ label = "CDG: "] 
  "1000224" -> "1000230"  [ label = "CDG: "] 
  "1000224" -> "1000228"  [ label = "CDG: "] 
  "1000224" -> "1000249"  [ label = "CDG: "] 
  "1000224" -> "1000242"  [ label = "CDG: "] 
  "1000279" -> "1000287"  [ label = "CDG: "] 
  "1000279" -> "1000286"  [ label = "CDG: "] 
  "1000279" -> "1000282"  [ label = "CDG: "] 
  "1000279" -> "1000303"  [ label = "CDG: "] 
  "1000279" -> "1000300"  [ label = "CDG: "] 
  "1000279" -> "1000298"  [ label = "CDG: "] 
  "1000279" -> "1000295"  [ label = "CDG: "] 
  "1000279" -> "1000292"  [ label = "CDG: "] 
  "1000279" -> "1000290"  [ label = "CDG: "] 
  "1000279" -> "1000289"  [ label = "CDG: "] 
  "1000279" -> "1000319"  [ label = "CDG: "] 
  "1000279" -> "1000315"  [ label = "CDG: "] 
  "1000279" -> "1000312"  [ label = "CDG: "] 
  "1000279" -> "1000309"  [ label = "CDG: "] 
  "1000279" -> "1000306"  [ label = "CDG: "] 
  "1000279" -> "1000329"  [ label = "CDG: "] 
  "1000279" -> "1000328"  [ label = "CDG: "] 
  "1000279" -> "1000325"  [ label = "CDG: "] 
  "1000279" -> "1000323"  [ label = "CDG: "] 
  "1000279" -> "1000321"  [ label = "CDG: "] 
  "1000345" -> "1000560"  [ label = "CDG: "] 
  "1000345" -> "1000559"  [ label = "CDG: "] 
  "1000345" -> "1000558"  [ label = "CDG: "] 
  "1000345" -> "1000556"  [ label = "CDG: "] 
  "1000345" -> "1000575"  [ label = "CDG: "] 
  "1000345" -> "1000573"  [ label = "CDG: "] 
  "1000345" -> "1000571"  [ label = "CDG: "] 
  "1000345" -> "1000570"  [ label = "CDG: "] 
  "1000345" -> "1000568"  [ label = "CDG: "] 
  "1000345" -> "1000566"  [ label = "CDG: "] 
  "1000345" -> "1000565"  [ label = "CDG: "] 
  "1000345" -> "1000562"  [ label = "CDG: "] 
  "1000345" -> "1000579"  [ label = "CDG: "] 
  "1000345" -> "1000608"  [ label = "CDG: "] 
  "1000345" -> "1000606"  [ label = "CDG: "] 
  "1000345" -> "1000604"  [ label = "CDG: "] 
  "1000345" -> "1000603"  [ label = "CDG: "] 
  "1000345" -> "1000600"  [ label = "CDG: "] 
  "1000345" -> "1000597"  [ label = "CDG: "] 
  "1000345" -> "1000352"  [ label = "CDG: "] 
  "1000345" -> "1000353"  [ label = "CDG: "] 
  "1000345" -> "1000584"  [ label = "CDG: "] 
  "1000345" -> "1000582"  [ label = "CDG: "] 
  "1000345" -> "1000581"  [ label = "CDG: "] 
  "1000352" -> "1000319"  [ label = "CDG: "] 
  "1000352" -> "1000329"  [ label = "CDG: "] 
  "1000352" -> "1000328"  [ label = "CDG: "] 
  "1000352" -> "1000325"  [ label = "CDG: "] 
  "1000352" -> "1000323"  [ label = "CDG: "] 
  "1000352" -> "1000321"  [ label = "CDG: "] 
  "1000352" -> "1000367"  [ label = "CDG: "] 
  "1000352" -> "1000366"  [ label = "CDG: "] 
  "1000352" -> "1000361"  [ label = "CDG: "] 
  "1000352" -> "1000358"  [ label = "CDG: "] 
  "1000352" -> "1000380"  [ label = "CDG: "] 
  "1000352" -> "1000378"  [ label = "CDG: "] 
  "1000352" -> "1000377"  [ label = "CDG: "] 
  "1000352" -> "1000369"  [ label = "CDG: "] 
  "1000353" -> "1000355"  [ label = "CDG: "] 
  "1000366" -> "1000374"  [ label = "CDG: "] 
  "1000366" -> "1000372"  [ label = "CDG: "] 
  "1000366" -> "1000371"  [ label = "CDG: "] 
  "1000377" -> "1000382"  [ label = "CDG: "] 
  "1000377" -> "1000400"  [ label = "CDG: "] 
  "1000377" -> "1000398"  [ label = "CDG: "] 
  "1000377" -> "1000397"  [ label = "CDG: "] 
  "1000377" -> "1000396"  [ label = "CDG: "] 
  "1000377" -> "1000394"  [ label = "CDG: "] 
  "1000377" -> "1000393"  [ label = "CDG: "] 
  "1000377" -> "1000391"  [ label = "CDG: "] 
  "1000377" -> "1000390"  [ label = "CDG: "] 
  "1000377" -> "1000388"  [ label = "CDG: "] 
  "1000377" -> "1000386"  [ label = "CDG: "] 
  "1000377" -> "1000385"  [ label = "CDG: "] 
  "1000377" -> "1000415"  [ label = "CDG: "] 
  "1000377" -> "1000413"  [ label = "CDG: "] 
  "1000377" -> "1000412"  [ label = "CDG: "] 
  "1000377" -> "1000410"  [ label = "CDG: "] 
  "1000377" -> "1000409"  [ label = "CDG: "] 
  "1000377" -> "1000407"  [ label = "CDG: "] 
  "1000377" -> "1000406"  [ label = "CDG: "] 
  "1000377" -> "1000404"  [ label = "CDG: "] 
  "1000377" -> "1000401"  [ label = "CDG: "] 
  "1000377" -> "1000425"  [ label = "CDG: "] 
  "1000377" -> "1000423"  [ label = "CDG: "] 
  "1000377" -> "1000422"  [ label = "CDG: "] 
  "1000377" -> "1000419"  [ label = "CDG: "] 
  "1000377" -> "1000470"  [ label = "CDG: "] 
  "1000377" -> "1000468"  [ label = "CDG: "] 
  "1000377" -> "1000467"  [ label = "CDG: "] 
  "1000377" -> "1000466"  [ label = "CDG: "] 
  "1000377" -> "1000465"  [ label = "CDG: "] 
  "1000377" -> "1000492"  [ label = "CDG: "] 
  "1000377" -> "1000490"  [ label = "CDG: "] 
  "1000377" -> "1000489"  [ label = "CDG: "] 
  "1000377" -> "1000488"  [ label = "CDG: "] 
  "1000377" -> "1000487"  [ label = "CDG: "] 
  "1000377" -> "1000319"  [ label = "CDG: "] 
  "1000377" -> "1000329"  [ label = "CDG: "] 
  "1000377" -> "1000328"  [ label = "CDG: "] 
  "1000377" -> "1000325"  [ label = "CDG: "] 
  "1000377" -> "1000323"  [ label = "CDG: "] 
  "1000377" -> "1000321"  [ label = "CDG: "] 
  "1000377" -> "1000444"  [ label = "CDG: "] 
  "1000377" -> "1000439"  [ label = "CDG: "] 
  "1000377" -> "1000434"  [ label = "CDG: "] 
  "1000377" -> "1000459"  [ label = "CDG: "] 
  "1000377" -> "1000454"  [ label = "CDG: "] 
  "1000377" -> "1000449"  [ label = "CDG: "] 
  "1000465" -> "1000483"  [ label = "CDG: "] 
  "1000466" -> "1000477"  [ label = "CDG: "] 
  "1000466" -> "1000475"  [ label = "CDG: "] 
  "1000466" -> "1000474"  [ label = "CDG: "] 
  "1000466" -> "1000473"  [ label = "CDG: "] 
  "1000474" -> "1000479"  [ label = "CDG: "] 
  "1000474" -> "1000478"  [ label = "CDG: "] 
  "1000474" -> "1000481"  [ label = "CDG: "] 
  "1000487" -> "1000510"  [ label = "CDG: "] 
  "1000487" -> "1000508"  [ label = "CDG: "] 
  "1000487" -> "1000507"  [ label = "CDG: "] 
  "1000487" -> "1000526"  [ label = "CDG: "] 
  "1000487" -> "1000520"  [ label = "CDG: "] 
  "1000487" -> "1000516"  [ label = "CDG: "] 
  "1000487" -> "1000514"  [ label = "CDG: "] 
  "1000487" -> "1000535"  [ label = "CDG: "] 
  "1000487" -> "1000533"  [ label = "CDG: "] 
  "1000487" -> "1000532"  [ label = "CDG: "] 
  "1000487" -> "1000529"  [ label = "CDG: "] 
  "1000487" -> "1000560"  [ label = "CDG: "] 
  "1000487" -> "1000559"  [ label = "CDG: "] 
  "1000487" -> "1000558"  [ label = "CDG: "] 
  "1000487" -> "1000556"  [ label = "CDG: "] 
  "1000487" -> "1000554"  [ label = "CDG: "] 
  "1000487" -> "1000552"  [ label = "CDG: "] 
  "1000487" -> "1000551"  [ label = "CDG: "] 
  "1000487" -> "1000575"  [ label = "CDG: "] 
  "1000487" -> "1000573"  [ label = "CDG: "] 
  "1000487" -> "1000571"  [ label = "CDG: "] 
  "1000487" -> "1000570"  [ label = "CDG: "] 
  "1000487" -> "1000568"  [ label = "CDG: "] 
  "1000487" -> "1000566"  [ label = "CDG: "] 
  "1000487" -> "1000565"  [ label = "CDG: "] 
  "1000487" -> "1000562"  [ label = "CDG: "] 
  "1000487" -> "1000579"  [ label = "CDG: "] 
  "1000487" -> "1000608"  [ label = "CDG: "] 
  "1000487" -> "1000606"  [ label = "CDG: "] 
  "1000487" -> "1000604"  [ label = "CDG: "] 
  "1000487" -> "1000603"  [ label = "CDG: "] 
  "1000487" -> "1000600"  [ label = "CDG: "] 
  "1000487" -> "1000597"  [ label = "CDG: "] 
  "1000487" -> "1000584"  [ label = "CDG: "] 
  "1000487" -> "1000582"  [ label = "CDG: "] 
  "1000487" -> "1000581"  [ label = "CDG: "] 
  "1000488" -> "1000496"  [ label = "CDG: "] 
  "1000488" -> "1000495"  [ label = "CDG: "] 
  "1000488" -> "1000499"  [ label = "CDG: "] 
  "1000488" -> "1000497"  [ label = "CDG: "] 
  "1000496" -> "1000503"  [ label = "CDG: "] 
  "1000496" -> "1000501"  [ label = "CDG: "] 
  "1000496" -> "1000500"  [ label = "CDG: "] 
  "1000507" -> "1000511"  [ label = "CDG: "] 
  "1000532" -> "1000544"  [ label = "CDG: "] 
  "1000532" -> "1000541"  [ label = "CDG: "] 
  "1000532" -> "1000539"  [ label = "CDG: "] 
  "1000532" -> "1000538"  [ label = "CDG: "] 
  "1000532" -> "1000536"  [ label = "CDG: "] 
  "1000532" -> "1000549"  [ label = "CDG: "] 
  "1000532" -> "1000547"  [ label = "CDG: "] 
  "1000532" -> "1000546"  [ label = "CDG: "] 
  "1000579" -> "1000592"  [ label = "CDG: "] 
  "1000579" -> "1000589"  [ label = "CDG: "] 
  "1000579" -> "1000587"  [ label = "CDG: "] 
  "1000579" -> "1000586"  [ label = "CDG: "] 
  "1000579" -> "1000595"  [ label = "CDG: "] 
  "1000579" -> "1000593"  [ label = "CDG: "] 
}
