digraph hostapd_notif_assoc {  
"1000136" [label = "(<operator>.assignment,ctx = hapd)" ]
"1000139" [label = "(<operator>.assignment,buf = (void *)addr)" ]
"1000141" [label = "(<operator>.cast,(void *)addr)" ]
"1000142" [label = "(UNKNOWN,void *,void *)" ]
"1000144" [label = "(<operator>.assignment,start = (u8 *)req_ies)" ]
"1000146" [label = "(<operator>.cast,(u8 *)req_ies)" ]
"1000147" [label = "(UNKNOWN,u8 *,u8 *)" ]
"1000149" [label = "(<operator>.assignment,len = req_ies_len)" ]
"1000153" [label = "(<operator>.logicalNot,!addr)" ]
"1000156" [label = "(wpa_printf,wpa_printf(2, \"hostapd_notif_assoc: Skip event with no address\"))" ]
"1000159" [label = "(RETURN,return -1;,return -1;)" ]
"1000160" [label = "(<operator>.minus,-1)" ]
"1000162" [label = "(random_add_randomness,random_add_randomness(buf, 6u))" ]
"1000165" [label = "(hostapd_logger,hostapd_logger(ctx, (const u8 *)buf, 1u, 2, \"associated\"))" ]
"1000167" [label = "(<operator>.cast,(const u8 *)buf)" ]
"1000168" [label = "(UNKNOWN,const u8 *,const u8 *)" ]
"1000173" [label = "(ieee802_11_parse_elems,ieee802_11_parse_elems(start, len, &v12, 0))" ]
"1000176" [label = "(<operator>.addressOf,&v12)" ]
"1000180" [label = "(<operator>.fieldAccess,v12.wps_ie)" ]
"1000182" [label = "(FIELD_IDENTIFIER,wps_ie,wps_ie)" ]
"1000184" [label = "(<operator>.assignment,wpa_ie = (u8 *)(v12.wps_ie - 2))" ]
"1000186" [label = "(<operator>.cast,(u8 *)(v12.wps_ie - 2))" ]
"1000187" [label = "(UNKNOWN,u8 *,u8 *)" ]
"1000188" [label = "(<operator>.subtraction,v12.wps_ie - 2)" ]
"1000189" [label = "(<operator>.fieldAccess,v12.wps_ie)" ]
"1000191" [label = "(FIELD_IDENTIFIER,wps_ie,wps_ie)" ]
"1000193" [label = "(<operator>.assignment,v10 = v12.wps_ie_len + 2)" ]
"1000195" [label = "(<operator>.addition,v12.wps_ie_len + 2)" ]
"1000196" [label = "(<operator>.fieldAccess,v12.wps_ie_len)" ]
"1000198" [label = "(FIELD_IDENTIFIER,wps_ie_len,wps_ie_len)" ]
"1000200" [label = "(wpa_printf,wpa_printf(2, \"STA included WPS IE in (Re)AssocReq\"))" ]
"1000205" [label = "(<operator>.fieldAccess,v12.rsn_ie)" ]
"1000207" [label = "(FIELD_IDENTIFIER,rsn_ie,rsn_ie)" ]
"1000209" [label = "(<operator>.assignment,wpa_ie = (u8 *)(v12.rsn_ie - 2))" ]
"1000211" [label = "(<operator>.cast,(u8 *)(v12.rsn_ie - 2))" ]
"1000212" [label = "(UNKNOWN,u8 *,u8 *)" ]
"1000213" [label = "(<operator>.subtraction,v12.rsn_ie - 2)" ]
"1000214" [label = "(<operator>.fieldAccess,v12.rsn_ie)" ]
"1000216" [label = "(FIELD_IDENTIFIER,rsn_ie,rsn_ie)" ]
"1000218" [label = "(<operator>.assignment,v10 = v12.rsn_ie_len + 2)" ]
"1000220" [label = "(<operator>.addition,v12.rsn_ie_len + 2)" ]
"1000221" [label = "(<operator>.fieldAccess,v12.rsn_ie_len)" ]
"1000223" [label = "(FIELD_IDENTIFIER,rsn_ie_len,rsn_ie_len)" ]
"1000225" [label = "(wpa_printf,wpa_printf(2, \"STA included RSN IE in (Re)AssocReq\"))" ]
"1000230" [label = "(<operator>.fieldAccess,v12.wpa_ie)" ]
"1000232" [label = "(FIELD_IDENTIFIER,wpa_ie,wpa_ie)" ]
"1000234" [label = "(<operator>.assignment,wpa_ie = (u8 *)(v12.wpa_ie - 2))" ]
"1000236" [label = "(<operator>.cast,(u8 *)(v12.wpa_ie - 2))" ]
"1000237" [label = "(UNKNOWN,u8 *,u8 *)" ]
"1000238" [label = "(<operator>.subtraction,v12.wpa_ie - 2)" ]
"1000239" [label = "(<operator>.fieldAccess,v12.wpa_ie)" ]
"1000241" [label = "(FIELD_IDENTIFIER,wpa_ie,wpa_ie)" ]
"1000243" [label = "(<operator>.assignment,v10 = v12.wpa_ie_len + 2)" ]
"1000245" [label = "(<operator>.addition,v12.wpa_ie_len + 2)" ]
"1000246" [label = "(<operator>.fieldAccess,v12.wpa_ie_len)" ]
"1000248" [label = "(FIELD_IDENTIFIER,wpa_ie_len,wpa_ie_len)" ]
"1000250" [label = "(wpa_printf,wpa_printf(2, \"STA included WPA IE in (Re)AssocReq\"))" ]
"1000255" [label = "(<operator>.assignment,wpa_ie = 0)" ]
"1000258" [label = "(<operator>.assignment,v10 = 0)" ]
"1000261" [label = "(wpa_printf,wpa_printf(2, \"STA did not include WPS/RSN/WPA IE in (Re)AssocReq\"))" ]
"1000264" [label = "(<operator>.assignment,sta = ap_get_sta((hostapd_data *)ctx, (const u8 *)buf))" ]
"1000266" [label = "(ap_get_sta,ap_get_sta((hostapd_data *)ctx, (const u8 *)buf))" ]
"1000267" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000268" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000270" [label = "(<operator>.cast,(const u8 *)buf)" ]
"1000271" [label = "(UNKNOWN,const u8 *,const u8 *)" ]
"1000276" [label = "(ap_sta_no_session_timeout,ap_sta_no_session_timeout((hostapd_data *)ctx, sta))" ]
"1000277" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000278" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000281" [label = "(accounting_sta_stop,accounting_sta_stop((hostapd_data *)ctx, sta))" ]
"1000282" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000283" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000286" [label = "(<operator>.assignment,sta->timeout_next = STA_NULLFUNC)" ]
"1000287" [label = "(<operator>.indirectFieldAccess,sta->timeout_next)" ]
"1000289" [label = "(FIELD_IDENTIFIER,timeout_next,timeout_next)" ]
"1000293" [label = "(<operator>.assignment,sta = ap_sta_add((hostapd_data *)ctx, (const u8 *)buf))" ]
"1000295" [label = "(ap_sta_add,ap_sta_add((hostapd_data *)ctx, (const u8 *)buf))" ]
"1000296" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000297" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000299" [label = "(<operator>.cast,(const u8 *)buf)" ]
"1000300" [label = "(UNKNOWN,const u8 *,const u8 *)" ]
"1000303" [label = "(<operator>.logicalNot,!sta)" ]
"1000306" [label = "(hostapd_drv_sta_disassoc,hostapd_drv_sta_disassoc((hostapd_data *)ctx, (const u8 *)buf, 5))" ]
"1000307" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000308" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000310" [label = "(<operator>.cast,(const u8 *)buf)" ]
"1000311" [label = "(UNKNOWN,const u8 *,const u8 *)" ]
"1000314" [label = "(RETURN,return -1;,return -1;)" ]
"1000315" [label = "(<operator>.minus,-1)" ]
"1000317" [label = "(<operators>.assignmentAnd,sta->flags &= 0xFFFECFFF)" ]
"1000318" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000320" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000323" [label = "(<operator>.logicalAnd,!*(_DWORD *)(*(_DWORD *)ctx + 1108) && hostapd_check_acl((hostapd_data *)ctx, (const u8 *)buf, 0) != 1)" ]
"1000324" [label = "(<operator>.logicalNot,!*(_DWORD *)(*(_DWORD *)ctx + 1108))" ]
"1000325" [label = "(<operator>.indirection,*(_DWORD *)(*(_DWORD *)ctx + 1108))" ]
"1000326" [label = "(<operator>.cast,(_DWORD *)(*(_DWORD *)ctx + 1108))" ]
"1000327" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000328" [label = "(<operator>.addition,*(_DWORD *)ctx + 1108)" ]
"1000329" [label = "(<operator>.indirection,*(_DWORD *)ctx)" ]
"1000330" [label = "(<operator>.cast,(_DWORD *)ctx)" ]
"1000331" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000334" [label = "(<operator>.notEquals,hostapd_check_acl((hostapd_data *)ctx, (const u8 *)buf, 0) != 1)" ]
"1000335" [label = "(hostapd_check_acl,hostapd_check_acl((hostapd_data *)ctx, (const u8 *)buf, 0))" ]
"1000336" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000337" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000339" [label = "(<operator>.cast,(const u8 *)buf)" ]
"1000340" [label = "(UNKNOWN,const u8 *,const u8 *)" ]
"1000345" [label = "(wpa_printf,wpa_printf(\n      3,\n      \"STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect\",\n      *(unsigned __int8 *)buf,\n      *((unsigned __int8 *)buf + 1),\n      *((unsigned __int8 *)buf + 2),\n      *((unsigned __int8 *)buf + 3),\n      *((unsigned __int8 *)buf + 4),\n      *((unsigned __int8 *)buf + 5)))" ]
"1000348" [label = "(<operator>.indirection,*(unsigned __int8 *)buf)" ]
"1000349" [label = "(<operator>.cast,(unsigned __int8 *)buf)" ]
"1000350" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000352" [label = "(<operator>.indirection,*((unsigned __int8 *)buf + 1))" ]
"1000353" [label = "(<operator>.addition,(unsigned __int8 *)buf + 1)" ]
"1000354" [label = "(<operator>.cast,(unsigned __int8 *)buf)" ]
"1000355" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000358" [label = "(<operator>.indirection,*((unsigned __int8 *)buf + 2))" ]
"1000359" [label = "(<operator>.addition,(unsigned __int8 *)buf + 2)" ]
"1000360" [label = "(<operator>.cast,(unsigned __int8 *)buf)" ]
"1000361" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000364" [label = "(<operator>.indirection,*((unsigned __int8 *)buf + 3))" ]
"1000365" [label = "(<operator>.addition,(unsigned __int8 *)buf + 3)" ]
"1000366" [label = "(<operator>.cast,(unsigned __int8 *)buf)" ]
"1000367" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000370" [label = "(<operator>.indirection,*((unsigned __int8 *)buf + 4))" ]
"1000371" [label = "(<operator>.addition,(unsigned __int8 *)buf + 4)" ]
"1000372" [label = "(<operator>.cast,(unsigned __int8 *)buf)" ]
"1000373" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000376" [label = "(<operator>.indirection,*((unsigned __int8 *)buf + 5))" ]
"1000377" [label = "(<operator>.addition,(unsigned __int8 *)buf + 5)" ]
"1000378" [label = "(<operator>.cast,(unsigned __int8 *)buf)" ]
"1000379" [label = "(UNKNOWN,unsigned __int8 *,unsigned __int8 *)" ]
"1000382" [label = "(<operator>.assignment,v7 = 1)" ]
"1000386" [label = "(hostapd_drv_sta_disassoc,hostapd_drv_sta_disassoc((hostapd_data *)ctx, sta->addr, v7))" ]
"1000387" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000388" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000390" [label = "(<operator>.indirectFieldAccess,sta->addr)" ]
"1000392" [label = "(FIELD_IDENTIFIER,addr,addr)" ]
"1000394" [label = "(ap_free_sta,ap_free_sta((hostapd_data *)ctx, sta))" ]
"1000395" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000396" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000399" [label = "(RETURN,return -1;,return -1;)" ]
"1000400" [label = "(<operator>.minus,-1)" ]
"1000402" [label = "(mbo_ap_check_sta_assoc,mbo_ap_check_sta_assoc((hostapd_data *)ctx, sta, &v12))" ]
"1000403" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000404" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000407" [label = "(<operator>.addressOf,&v12)" ]
"1000409" [label = "(ap_copy_sta_supp_op_classes,ap_copy_sta_supp_op_classes(sta, v12.supp_op_classes, v12.supp_op_classes_len))" ]
"1000411" [label = "(<operator>.fieldAccess,v12.supp_op_classes)" ]
"1000413" [label = "(FIELD_IDENTIFIER,supp_op_classes,supp_op_classes)" ]
"1000414" [label = "(<operator>.fieldAccess,v12.supp_op_classes_len)" ]
"1000416" [label = "(FIELD_IDENTIFIER,supp_op_classes_len,supp_op_classes_len)" ]
"1000418" [label = "(<operator>.indirection,*(_DWORD *)(*((_DWORD *)ctx + 2) + 456))" ]
"1000419" [label = "(<operator>.cast,(_DWORD *)(*((_DWORD *)ctx + 2) + 456))" ]
"1000420" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000421" [label = "(<operator>.addition,*((_DWORD *)ctx + 2) + 456)" ]
"1000422" [label = "(<operator>.indirection,*((_DWORD *)ctx + 2))" ]
"1000423" [label = "(<operator>.addition,(_DWORD *)ctx + 2)" ]
"1000424" [label = "(<operator>.cast,(_DWORD *)ctx)" ]
"1000425" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000431" [label = "(<operator>.logicalOr,!wpa_ie || !v10)" ]
"1000432" [label = "(<operator>.logicalNot,!wpa_ie)" ]
"1000434" [label = "(<operator>.logicalNot,!v10)" ]
"1000437" [label = "(wpa_printf,wpa_printf(2, \"No WPA/RSN IE from STA\"))" ]
"1000440" [label = "(<operator>.assignment,v7 = 13)" ]
"1000445" [label = "(<operator>.logicalNot,!sta->wpa_sm)" ]
"1000446" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000448" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000450" [label = "(<operator>.assignment,v5 = wpa_auth_sta_init(*((wpa_authenticator **)ctx + 340), sta->addr, 0))" ]
"1000452" [label = "(wpa_auth_sta_init,wpa_auth_sta_init(*((wpa_authenticator **)ctx + 340), sta->addr, 0))" ]
"1000453" [label = "(<operator>.indirection,*((wpa_authenticator **)ctx + 340))" ]
"1000454" [label = "(<operator>.addition,(wpa_authenticator **)ctx + 340)" ]
"1000455" [label = "(<operator>.cast,(wpa_authenticator **)ctx)" ]
"1000456" [label = "(UNKNOWN,wpa_authenticator **,wpa_authenticator **)" ]
"1000459" [label = "(<operator>.indirectFieldAccess,sta->addr)" ]
"1000461" [label = "(FIELD_IDENTIFIER,addr,addr)" ]
"1000463" [label = "(<operator>.assignment,sta->wpa_sm = v5)" ]
"1000464" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000466" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000469" [label = "(<operator>.logicalNot,!sta->wpa_sm)" ]
"1000470" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000472" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000474" [label = "(wpa_printf,wpa_printf(5, \"Failed to initialize WPA state machine\"))" ]
"1000477" [label = "(RETURN,return -1;,return -1;)" ]
"1000478" [label = "(<operator>.minus,-1)" ]
"1000480" [label = "(<operator>.assignment,v13 = wpa_validate_wpa_ie(\n            *((wpa_authenticator **)ctx + 340),\n            sta->wpa_sm,\n            *(_DWORD *)(*(_DWORD *)ctx + 1136),\n            wpa_ie,\n            v10,\n            v12.mdie,\n            v12.mdie_len,\n            v12.owe_dh,\n            v12.owe_dh_len))" ]
"1000482" [label = "(wpa_validate_wpa_ie,wpa_validate_wpa_ie(\n            *((wpa_authenticator **)ctx + 340),\n            sta->wpa_sm,\n            *(_DWORD *)(*(_DWORD *)ctx + 1136),\n            wpa_ie,\n            v10,\n            v12.mdie,\n            v12.mdie_len,\n            v12.owe_dh,\n            v12.owe_dh_len))" ]
"1000483" [label = "(<operator>.indirection,*((wpa_authenticator **)ctx + 340))" ]
"1000484" [label = "(<operator>.addition,(wpa_authenticator **)ctx + 340)" ]
"1000485" [label = "(<operator>.cast,(wpa_authenticator **)ctx)" ]
"1000486" [label = "(UNKNOWN,wpa_authenticator **,wpa_authenticator **)" ]
"1000489" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000491" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000492" [label = "(<operator>.indirection,*(_DWORD *)(*(_DWORD *)ctx + 1136))" ]
"1000493" [label = "(<operator>.cast,(_DWORD *)(*(_DWORD *)ctx + 1136))" ]
"1000494" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000495" [label = "(<operator>.addition,*(_DWORD *)ctx + 1136)" ]
"1000496" [label = "(<operator>.indirection,*(_DWORD *)ctx)" ]
"1000497" [label = "(<operator>.cast,(_DWORD *)ctx)" ]
"1000498" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000503" [label = "(<operator>.fieldAccess,v12.mdie)" ]
"1000505" [label = "(FIELD_IDENTIFIER,mdie,mdie)" ]
"1000506" [label = "(<operator>.fieldAccess,v12.mdie_len)" ]
"1000508" [label = "(FIELD_IDENTIFIER,mdie_len,mdie_len)" ]
"1000509" [label = "(<operator>.fieldAccess,v12.owe_dh)" ]
"1000511" [label = "(FIELD_IDENTIFIER,owe_dh,owe_dh)" ]
"1000512" [label = "(<operator>.fieldAccess,v12.owe_dh_len)" ]
"1000514" [label = "(FIELD_IDENTIFIER,owe_dh_len,owe_dh_len)" ]
"1000518" [label = "(wpa_printf,wpa_printf(2, \"WPA/RSN information element rejected? (res %u)\", v13))" ]
"1000522" [label = "(wpa_hexdump,wpa_hexdump(2, \"IE\", wpa_ie, v10))" ]
"1000531" [label = "(<operator>.assignment,v7 = 18)" ]
"1000536" [label = "(<operator>.assignment,v7 = 19)" ]
"1000541" [label = "(<operator>.assignment,v7 = 20)" ]
"1000546" [label = "(<operator>.assignment,v7 = 13)" ]
"1000551" [label = "(<operator>.assignment,v7 = 24)" ]
"1000556" [label = "(<operator>.assignment,v7 = 13)" ]
"1000562" [label = "(<operator>.logicalAnd,(sta->flags & 0x402) == 1026 && !sta->sa_query_timed_out && sta->sa_query_count > 0)" ]
"1000563" [label = "(<operator>.equals,(sta->flags & 0x402) == 1026)" ]
"1000564" [label = "(<operator>.and,sta->flags & 0x402)" ]
"1000565" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000567" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000570" [label = "(<operator>.logicalAnd,!sta->sa_query_timed_out && sta->sa_query_count > 0)" ]
"1000571" [label = "(<operator>.logicalNot,!sta->sa_query_timed_out)" ]
"1000572" [label = "(<operator>.indirectFieldAccess,sta->sa_query_timed_out)" ]
"1000574" [label = "(FIELD_IDENTIFIER,sa_query_timed_out,sa_query_timed_out)" ]
"1000575" [label = "(<operator>.greaterThan,sta->sa_query_count > 0)" ]
"1000576" [label = "(<operator>.indirectFieldAccess,sta->sa_query_count)" ]
"1000578" [label = "(FIELD_IDENTIFIER,sa_query_count,sa_query_count)" ]
"1000580" [label = "(ap_check_sa_query_timeout,ap_check_sa_query_timeout((hostapd_data *)ctx, sta))" ]
"1000581" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000582" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000586" [label = "(<operator>.logicalAnd,(sta->flags & 0x402) == 1026 && !sta->sa_query_timed_out && sta->auth_alg != 2)" ]
"1000587" [label = "(<operator>.equals,(sta->flags & 0x402) == 1026)" ]
"1000588" [label = "(<operator>.and,sta->flags & 0x402)" ]
"1000589" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000591" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000594" [label = "(<operator>.logicalAnd,!sta->sa_query_timed_out && sta->auth_alg != 2)" ]
"1000595" [label = "(<operator>.logicalNot,!sta->sa_query_timed_out)" ]
"1000596" [label = "(<operator>.indirectFieldAccess,sta->sa_query_timed_out)" ]
"1000598" [label = "(FIELD_IDENTIFIER,sa_query_timed_out,sa_query_timed_out)" ]
"1000599" [label = "(<operator>.notEquals,sta->auth_alg != 2)" ]
"1000600" [label = "(<operator>.indirectFieldAccess,sta->auth_alg)" ]
"1000602" [label = "(FIELD_IDENTIFIER,auth_alg,auth_alg)" ]
"1000606" [label = "(<operator>.logicalNot,!sta->sa_query_count)" ]
"1000607" [label = "(<operator>.indirectFieldAccess,sta->sa_query_count)" ]
"1000609" [label = "(FIELD_IDENTIFIER,sa_query_count,sa_query_count)" ]
"1000610" [label = "(ap_sta_start_sa_query,ap_sta_start_sa_query((hostapd_data *)ctx, sta))" ]
"1000611" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000612" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000615" [label = "(<operator>.assignment,eid = hostapd_eid_assoc_comeback_time((hostapd_data *)ctx, sta, v9))" ]
"1000617" [label = "(hostapd_eid_assoc_comeback_time,hostapd_eid_assoc_comeback_time((hostapd_data *)ctx, sta, v9))" ]
"1000618" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000619" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000623" [label = "(hostapd_sta_assoc,hostapd_sta_assoc((hostapd_data *)ctx, (const u8 *)buf, reassoc, 0x1Eu, v9, eid - v9))" ]
"1000624" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000625" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000627" [label = "(<operator>.cast,(const u8 *)buf)" ]
"1000628" [label = "(UNKNOWN,const u8 *,const u8 *)" ]
"1000633" [label = "(<operator>.subtraction,eid - v9)" ]
"1000636" [label = "(RETURN,return 0;,return 0;)" ]
"1000639" [label = "(wpa_auth_uses_mfp,wpa_auth_uses_mfp(sta->wpa_sm))" ]
"1000640" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000642" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000643" [label = "(<operators>.assignmentOr,sta->flags |= 0x400u)" ]
"1000644" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000646" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000649" [label = "(<operators>.assignmentAnd,sta->flags &= 0xFFFFFBFF)" ]
"1000650" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000652" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000654" [label = "(<operator>.assignment,v14 = (sta->flags & 2) == 0)" ]
"1000656" [label = "(<operator>.equals,(sta->flags & 2) == 0)" ]
"1000657" [label = "(<operator>.and,sta->flags & 2)" ]
"1000658" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000660" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000663" [label = "(<operators>.assignmentOr,sta->flags |= 3u)" ]
"1000664" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000666" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000668" [label = "(<operators>.assignmentAnd,sta->flags &= 0xFFF7FFFF)" ]
"1000669" [label = "(<operator>.indirectFieldAccess,sta->flags)" ]
"1000671" [label = "(FIELD_IDENTIFIER,flags,flags)" ]
"1000673" [label = "(hostapd_set_sta_flags,hostapd_set_sta_flags((hostapd_data *)ctx, sta))" ]
"1000674" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000675" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000679" [label = "(<operator>.logicalAnd,reassoc && sta->auth_alg == 2)" ]
"1000681" [label = "(<operator>.equals,sta->auth_alg == 2)" ]
"1000682" [label = "(<operator>.indirectFieldAccess,sta->auth_alg)" ]
"1000684" [label = "(FIELD_IDENTIFIER,auth_alg,auth_alg)" ]
"1000686" [label = "(wpa_auth_sm_event,wpa_auth_sm_event(sta->wpa_sm, WPA_ASSOC_FT))" ]
"1000687" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000689" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000692" [label = "(wpa_auth_sm_event,wpa_auth_sm_event(sta->wpa_sm, WPA_ASSOC))" ]
"1000693" [label = "(<operator>.indirectFieldAccess,sta->wpa_sm)" ]
"1000695" [label = "(FIELD_IDENTIFIER,wpa_sm,wpa_sm)" ]
"1000697" [label = "(hostapd_new_assoc_sta,hostapd_new_assoc_sta((hostapd_data *)ctx, sta, !v14))" ]
"1000698" [label = "(<operator>.cast,(hostapd_data *)ctx)" ]
"1000699" [label = "(UNKNOWN,hostapd_data *,hostapd_data *)" ]
"1000702" [label = "(<operator>.logicalNot,!v14)" ]
"1000704" [label = "(ieee802_1x_notify_port_enabled,ieee802_1x_notify_port_enabled(sta->eapol_sm, 1))" ]
"1000705" [label = "(<operator>.indirectFieldAccess,sta->eapol_sm)" ]
"1000707" [label = "(FIELD_IDENTIFIER,eapol_sm,eapol_sm)" ]
"1000709" [label = "(RETURN,return 0;,return 0;)" ]
"1000115" [label = "(METHOD,hostapd_notif_assoc)" ]
"1000711" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000136" -> "1000142" 
  "1000139" -> "1000147" 
  "1000141" -> "1000139" 
  "1000142" -> "1000141" 
  "1000144" -> "1000149" 
  "1000146" -> "1000144" 
  "1000147" -> "1000146" 
  "1000149" -> "1000153" 
  "1000153" -> "1000156" 
  "1000153" -> "1000162" 
  "1000156" -> "1000160" 
  "1000159" -> "1000711" 
  "1000160" -> "1000159" 
  "1000162" -> "1000168" 
  "1000165" -> "1000176" 
  "1000167" -> "1000165" 
  "1000168" -> "1000167" 
  "1000173" -> "1000182" 
  "1000176" -> "1000173" 
  "1000180" -> "1000187" 
  "1000180" -> "1000207" 
  "1000182" -> "1000180" 
  "1000184" -> "1000198" 
  "1000186" -> "1000184" 
  "1000187" -> "1000191" 
  "1000188" -> "1000186" 
  "1000189" -> "1000188" 
  "1000191" -> "1000189" 
  "1000193" -> "1000200" 
  "1000195" -> "1000193" 
  "1000196" -> "1000195" 
  "1000198" -> "1000196" 
  "1000200" -> "1000268" 
  "1000205" -> "1000212" 
  "1000205" -> "1000232" 
  "1000207" -> "1000205" 
  "1000209" -> "1000223" 
  "1000211" -> "1000209" 
  "1000212" -> "1000216" 
  "1000213" -> "1000211" 
  "1000214" -> "1000213" 
  "1000216" -> "1000214" 
  "1000218" -> "1000225" 
  "1000220" -> "1000218" 
  "1000221" -> "1000220" 
  "1000223" -> "1000221" 
  "1000225" -> "1000268" 
  "1000230" -> "1000237" 
  "1000230" -> "1000255" 
  "1000232" -> "1000230" 
  "1000234" -> "1000248" 
  "1000236" -> "1000234" 
  "1000237" -> "1000241" 
  "1000238" -> "1000236" 
  "1000239" -> "1000238" 
  "1000241" -> "1000239" 
  "1000243" -> "1000250" 
  "1000245" -> "1000243" 
  "1000246" -> "1000245" 
  "1000248" -> "1000246" 
  "1000250" -> "1000268" 
  "1000255" -> "1000258" 
  "1000258" -> "1000261" 
  "1000261" -> "1000268" 
  "1000264" -> "1000278" 
  "1000264" -> "1000297" 
  "1000266" -> "1000264" 
  "1000267" -> "1000271" 
  "1000268" -> "1000267" 
  "1000270" -> "1000266" 
  "1000271" -> "1000270" 
  "1000276" -> "1000283" 
  "1000277" -> "1000276" 
  "1000278" -> "1000277" 
  "1000281" -> "1000289" 
  "1000282" -> "1000281" 
  "1000283" -> "1000282" 
  "1000286" -> "1000320" 
  "1000287" -> "1000286" 
  "1000289" -> "1000287" 
  "1000293" -> "1000303" 
  "1000295" -> "1000293" 
  "1000296" -> "1000300" 
  "1000297" -> "1000296" 
  "1000299" -> "1000295" 
  "1000300" -> "1000299" 
  "1000303" -> "1000308" 
  "1000303" -> "1000320" 
  "1000306" -> "1000315" 
  "1000307" -> "1000311" 
  "1000308" -> "1000307" 
  "1000310" -> "1000306" 
  "1000311" -> "1000310" 
  "1000314" -> "1000711" 
  "1000315" -> "1000314" 
  "1000317" -> "1000327" 
  "1000318" -> "1000317" 
  "1000320" -> "1000318" 
  "1000323" -> "1000404" 
  "1000323" -> "1000350" 
  "1000324" -> "1000337" 
  "1000324" -> "1000323" 
  "1000325" -> "1000324" 
  "1000326" -> "1000325" 
  "1000327" -> "1000331" 
  "1000328" -> "1000326" 
  "1000329" -> "1000328" 
  "1000330" -> "1000329" 
  "1000331" -> "1000330" 
  "1000334" -> "1000323" 
  "1000335" -> "1000334" 
  "1000336" -> "1000340" 
  "1000337" -> "1000336" 
  "1000339" -> "1000335" 
  "1000340" -> "1000339" 
  "1000345" -> "1000382" 
  "1000348" -> "1000355" 
  "1000349" -> "1000348" 
  "1000350" -> "1000349" 
  "1000352" -> "1000361" 
  "1000353" -> "1000352" 
  "1000354" -> "1000353" 
  "1000355" -> "1000354" 
  "1000358" -> "1000367" 
  "1000359" -> "1000358" 
  "1000360" -> "1000359" 
  "1000361" -> "1000360" 
  "1000364" -> "1000373" 
  "1000365" -> "1000364" 
  "1000366" -> "1000365" 
  "1000367" -> "1000366" 
  "1000370" -> "1000379" 
  "1000371" -> "1000370" 
  "1000372" -> "1000371" 
  "1000373" -> "1000372" 
  "1000376" -> "1000345" 
  "1000377" -> "1000376" 
  "1000378" -> "1000377" 
  "1000379" -> "1000378" 
  "1000382" -> "1000388" 
  "1000386" -> "1000396" 
  "1000387" -> "1000392" 
  "1000388" -> "1000387" 
  "1000390" -> "1000386" 
  "1000392" -> "1000390" 
  "1000394" -> "1000400" 
  "1000395" -> "1000394" 
  "1000396" -> "1000395" 
  "1000399" -> "1000711" 
  "1000400" -> "1000399" 
  "1000402" -> "1000413" 
  "1000403" -> "1000407" 
  "1000404" -> "1000403" 
  "1000407" -> "1000402" 
  "1000409" -> "1000420" 
  "1000411" -> "1000416" 
  "1000413" -> "1000411" 
  "1000414" -> "1000409" 
  "1000416" -> "1000414" 
  "1000418" -> "1000432" 
  "1000418" -> "1000660" 
  "1000419" -> "1000418" 
  "1000420" -> "1000425" 
  "1000421" -> "1000419" 
  "1000422" -> "1000421" 
  "1000423" -> "1000422" 
  "1000424" -> "1000423" 
  "1000425" -> "1000424" 
  "1000431" -> "1000437" 
  "1000431" -> "1000448" 
  "1000432" -> "1000431" 
  "1000432" -> "1000434" 
  "1000434" -> "1000431" 
  "1000437" -> "1000440" 
  "1000440" -> "1000388" 
  "1000445" -> "1000456" 
  "1000445" -> "1000472" 
  "1000446" -> "1000445" 
  "1000448" -> "1000446" 
  "1000450" -> "1000466" 
  "1000452" -> "1000450" 
  "1000453" -> "1000461" 
  "1000454" -> "1000453" 
  "1000455" -> "1000454" 
  "1000456" -> "1000455" 
  "1000459" -> "1000452" 
  "1000461" -> "1000459" 
  "1000463" -> "1000472" 
  "1000464" -> "1000463" 
  "1000466" -> "1000464" 
  "1000469" -> "1000474" 
  "1000469" -> "1000486" 
  "1000470" -> "1000469" 
  "1000472" -> "1000470" 
  "1000474" -> "1000478" 
  "1000477" -> "1000711" 
  "1000478" -> "1000477" 
  "1000480" -> "1000518" 
  "1000480" -> "1000567" 
  "1000482" -> "1000480" 
  "1000483" -> "1000491" 
  "1000484" -> "1000483" 
  "1000485" -> "1000484" 
  "1000486" -> "1000485" 
  "1000489" -> "1000494" 
  "1000491" -> "1000489" 
  "1000492" -> "1000505" 
  "1000493" -> "1000492" 
  "1000494" -> "1000498" 
  "1000495" -> "1000493" 
  "1000496" -> "1000495" 
  "1000497" -> "1000496" 
  "1000498" -> "1000497" 
  "1000503" -> "1000508" 
  "1000505" -> "1000503" 
  "1000506" -> "1000511" 
  "1000508" -> "1000506" 
  "1000509" -> "1000514" 
  "1000511" -> "1000509" 
  "1000512" -> "1000482" 
  "1000514" -> "1000512" 
  "1000518" -> "1000522" 
  "1000522" -> "1000531" 
  "1000522" -> "1000536" 
  "1000522" -> "1000541" 
  "1000522" -> "1000546" 
  "1000522" -> "1000551" 
  "1000522" -> "1000556" 
  "1000531" -> "1000388" 
  "1000536" -> "1000388" 
  "1000541" -> "1000388" 
  "1000546" -> "1000388" 
  "1000551" -> "1000388" 
  "1000556" -> "1000388" 
  "1000562" -> "1000582" 
  "1000562" -> "1000591" 
  "1000563" -> "1000562" 
  "1000563" -> "1000574" 
  "1000564" -> "1000563" 
  "1000565" -> "1000564" 
  "1000567" -> "1000565" 
  "1000570" -> "1000562" 
  "1000571" -> "1000570" 
  "1000571" -> "1000578" 
  "1000572" -> "1000571" 
  "1000574" -> "1000572" 
  "1000575" -> "1000570" 
  "1000576" -> "1000575" 
  "1000578" -> "1000576" 
  "1000580" -> "1000591" 
  "1000581" -> "1000580" 
  "1000582" -> "1000581" 
  "1000586" -> "1000609" 
  "1000586" -> "1000642" 
  "1000587" -> "1000586" 
  "1000587" -> "1000598" 
  "1000588" -> "1000587" 
  "1000589" -> "1000588" 
  "1000591" -> "1000589" 
  "1000594" -> "1000586" 
  "1000595" -> "1000594" 
  "1000595" -> "1000602" 
  "1000596" -> "1000595" 
  "1000598" -> "1000596" 
  "1000599" -> "1000594" 
  "1000600" -> "1000599" 
  "1000602" -> "1000600" 
  "1000606" -> "1000612" 
  "1000606" -> "1000619" 
  "1000607" -> "1000606" 
  "1000609" -> "1000607" 
  "1000610" -> "1000619" 
  "1000611" -> "1000610" 
  "1000612" -> "1000611" 
  "1000615" -> "1000625" 
  "1000617" -> "1000615" 
  "1000618" -> "1000617" 
  "1000619" -> "1000618" 
  "1000623" -> "1000636" 
  "1000624" -> "1000628" 
  "1000625" -> "1000624" 
  "1000627" -> "1000633" 
  "1000628" -> "1000627" 
  "1000633" -> "1000623" 
  "1000636" -> "1000711" 
  "1000639" -> "1000646" 
  "1000639" -> "1000652" 
  "1000640" -> "1000639" 
  "1000642" -> "1000640" 
  "1000643" -> "1000660" 
  "1000644" -> "1000643" 
  "1000646" -> "1000644" 
  "1000649" -> "1000660" 
  "1000650" -> "1000649" 
  "1000652" -> "1000650" 
  "1000654" -> "1000666" 
  "1000656" -> "1000654" 
  "1000657" -> "1000656" 
  "1000658" -> "1000657" 
  "1000660" -> "1000658" 
  "1000663" -> "1000671" 
  "1000664" -> "1000663" 
  "1000666" -> "1000664" 
  "1000668" -> "1000675" 
  "1000669" -> "1000668" 
  "1000671" -> "1000669" 
  "1000673" -> "1000679" 
  "1000673" -> "1000684" 
  "1000674" -> "1000673" 
  "1000675" -> "1000674" 
  "1000679" -> "1000689" 
  "1000679" -> "1000695" 
  "1000681" -> "1000679" 
  "1000682" -> "1000681" 
  "1000684" -> "1000682" 
  "1000686" -> "1000699" 
  "1000687" -> "1000686" 
  "1000689" -> "1000687" 
  "1000692" -> "1000699" 
  "1000693" -> "1000692" 
  "1000695" -> "1000693" 
  "1000697" -> "1000707" 
  "1000698" -> "1000702" 
  "1000699" -> "1000698" 
  "1000702" -> "1000697" 
  "1000704" -> "1000709" 
  "1000705" -> "1000704" 
  "1000707" -> "1000705" 
  "1000709" -> "1000711" 
  "1000115" -> "1000136" 
}
