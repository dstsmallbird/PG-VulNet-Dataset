digraph tftp_connect {  
"1000131" [label = "(<operator>.assignment,v14 = __readgsdword(0x14u))" ]
"1000133" [label = "(__readgsdword,__readgsdword(0x14u))" ]
"1000135" [label = "(<operator>.assignment,v2 = Curl_ccalloc(1, 336))" ]
"1000137" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000140" [label = "(<operator>.assignment,a1[185] = v2)" ]
"1000141" [label = "(<operator>.indirectIndexAccess,a1[185])" ]
"1000146" [label = "(<operator>.logicalNot,!v2)" ]
"1000148" [label = "(RETURN,return 27;,return 27;)" ]
"1000150" [label = "(<operator>.assignment,v3 = v2)" ]
"1000153" [label = "(<operator>.assignment,v4 = *(_DWORD *)(*a1 + 1568))" ]
"1000155" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1568))" ]
"1000156" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1568))" ]
"1000157" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000158" [label = "(<operator>.addition,*a1 + 1568)" ]
"1000159" [label = "(<operator>.indirection,*a1)" ]
"1000165" [label = "(<operator>.assignment,result = 71)" ]
"1000169" [label = "(<operator>.greaterThan,(unsigned int)(v4 - 8) > 0xFFB0)" ]
"1000170" [label = "(<operator>.cast,(unsigned int)(v4 - 8))" ]
"1000171" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000172" [label = "(<operator>.subtraction,v4 - 8)" ]
"1000176" [label = "(RETURN,return result;,return result;)" ]
"1000178" [label = "(<operator>.assignment,v5 = 512)" ]
"1000182" [label = "(<operator>.greaterEqualsThan,v4 >= 512)" ]
"1000185" [label = "(<operator>.assignment,v5 = *(_DWORD *)(*a1 + 1568))" ]
"1000187" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1568))" ]
"1000188" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1568))" ]
"1000189" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000190" [label = "(<operator>.addition,*a1 + 1568)" ]
"1000191" [label = "(<operator>.indirection,*a1)" ]
"1000196" [label = "(<operator>.assignment,v4 = 512)" ]
"1000199" [label = "(<operator>.assignment,v5 = 512)" ]
"1000203" [label = "(<operator>.logicalNot,!*(_DWORD *)(v3 + 328))" ]
"1000204" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 328))" ]
"1000205" [label = "(<operator>.cast,(_DWORD *)(v3 + 328))" ]
"1000206" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000207" [label = "(<operator>.addition,v3 + 328)" ]
"1000211" [label = "(<operator>.assignment,v12 = v5)" ]
"1000214" [label = "(<operator>.assignment,v8 = Curl_ccalloc(1, v5 + 4))" ]
"1000216" [label = "(Curl_ccalloc,Curl_ccalloc(1, v5 + 4))" ]
"1000218" [label = "(<operator>.addition,v5 + 4)" ]
"1000221" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 328) = v8)" ]
"1000222" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 328))" ]
"1000223" [label = "(<operator>.cast,(_DWORD *)(v3 + 328))" ]
"1000224" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000225" [label = "(<operator>.addition,v3 + 328)" ]
"1000229" [label = "(<operator>.assignment,v5 = v12)" ]
"1000233" [label = "(<operator>.logicalNot,!v8)" ]
"1000235" [label = "(RETURN,return 27;,return 27;)" ]
"1000238" [label = "(<operator>.logicalNot,!*(_DWORD *)(v3 + 332))" ]
"1000239" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 332))" ]
"1000240" [label = "(<operator>.cast,(_DWORD *)(v3 + 332))" ]
"1000241" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000242" [label = "(<operator>.addition,v3 + 332)" ]
"1000246" [label = "(<operator>.assignment,v11 = Curl_ccalloc(1, v5 + 4))" ]
"1000248" [label = "(Curl_ccalloc,Curl_ccalloc(1, v5 + 4))" ]
"1000250" [label = "(<operator>.addition,v5 + 4)" ]
"1000253" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 332) = v11)" ]
"1000254" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 332))" ]
"1000255" [label = "(<operator>.cast,(_DWORD *)(v3 + 332))" ]
"1000256" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000257" [label = "(<operator>.addition,v3 + 332)" ]
"1000262" [label = "(<operator>.logicalNot,!v11)" ]
"1000264" [label = "(RETURN,return 27;,return 27;)" ]
"1000266" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000269" [label = "(<operator>.assignment,v6 = a1[103])" ]
"1000271" [label = "(<operator>.indirectIndexAccess,a1[103])" ]
"1000274" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 16) = a1)" ]
"1000275" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 16))" ]
"1000276" [label = "(<operator>.cast,(_DWORD *)(v3 + 16))" ]
"1000277" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000278" [label = "(<operator>.addition,v3 + 16)" ]
"1000282" [label = "(<operator>.assignment,*(_DWORD *)v3 = 0)" ]
"1000283" [label = "(<operator>.indirection,*(_DWORD *)v3)" ]
"1000284" [label = "(<operator>.cast,(_DWORD *)v3)" ]
"1000285" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000288" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 8) = -100)" ]
"1000289" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 8))" ]
"1000290" [label = "(<operator>.cast,(_DWORD *)(v3 + 8))" ]
"1000291" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000292" [label = "(<operator>.addition,v3 + 8)" ]
"1000295" [label = "(<operator>.minus,-100)" ]
"1000297" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 320) = 512)" ]
"1000298" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 320))" ]
"1000299" [label = "(<operator>.cast,(_DWORD *)(v3 + 320))" ]
"1000300" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000301" [label = "(<operator>.addition,v3 + 320)" ]
"1000305" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 324) = v4)" ]
"1000306" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 324))" ]
"1000307" [label = "(<operator>.cast,(_DWORD *)(v3 + 324))" ]
"1000308" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000309" [label = "(<operator>.addition,v3 + 324)" ]
"1000313" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 20) = v6)" ]
"1000314" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 20))" ]
"1000315" [label = "(<operator>.cast,(_DWORD *)(v3 + 20))" ]
"1000316" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000317" [label = "(<operator>.addition,v3 + 20)" ]
"1000321" [label = "(<operator>.assignment,*(_WORD *)(v3 + 52) = *(_DWORD *)(a1[18] + 4))" ]
"1000322" [label = "(<operator>.indirection,*(_WORD *)(v3 + 52))" ]
"1000323" [label = "(<operator>.cast,(_WORD *)(v3 + 52))" ]
"1000324" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000325" [label = "(<operator>.addition,v3 + 52)" ]
"1000328" [label = "(<operator>.indirection,*(_DWORD *)(a1[18] + 4))" ]
"1000329" [label = "(<operator>.cast,(_DWORD *)(a1[18] + 4))" ]
"1000330" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000331" [label = "(<operator>.addition,a1[18] + 4)" ]
"1000332" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000336" [label = "(tftp_set_timeouts,tftp_set_timeouts())" ]
"1000338" [label = "(<operator>.notEquals,(*((_BYTE *)a1 + 583) & 2) != 0)" ]
"1000339" [label = "(<operator>.and,*((_BYTE *)a1 + 583) & 2)" ]
"1000340" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000341" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000342" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000343" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000350" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000351" [label = "(<operator>.indirection,*a1)" ]
"1000353" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000354" [label = "(<operator>.indirection,*a2)" ]
"1000357" [label = "(RETURN,return 0;,return 0;)" ]
"1000360" [label = "(<operator>.logicalNot,!bind(*(_DWORD *)(v3 + 20), (const struct sockaddr *)(v3 + 52), *(_DWORD *)(a1[18] + 16)))" ]
"1000361" [label = "(bind,bind(*(_DWORD *)(v3 + 20), (const struct sockaddr *)(v3 + 52), *(_DWORD *)(a1[18] + 16)))" ]
"1000362" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 20))" ]
"1000363" [label = "(<operator>.cast,(_DWORD *)(v3 + 20))" ]
"1000364" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000365" [label = "(<operator>.addition,v3 + 20)" ]
"1000368" [label = "(<operator>.cast,(const struct sockaddr *)(v3 + 52))" ]
"1000369" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000370" [label = "(<operator>.addition,v3 + 52)" ]
"1000373" [label = "(<operator>.indirection,*(_DWORD *)(a1[18] + 16))" ]
"1000374" [label = "(<operator>.cast,(_DWORD *)(a1[18] + 16))" ]
"1000375" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000376" [label = "(<operator>.addition,a1[18] + 16)" ]
"1000377" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000382" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 583) |= 2u)" ]
"1000383" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000384" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000385" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000386" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000391" [label = "(<operator>.assignment,v9 = __errno_location())" ]
"1000393" [label = "(__errno_location,__errno_location())" ]
"1000394" [label = "(<operator>.assignment,v10 = Curl_strerror(*v9, buf, 128))" ]
"1000396" [label = "(Curl_strerror,Curl_strerror(*v9, buf, 128))" ]
"1000397" [label = "(<operator>.indirection,*v9)" ]
"1000401" [label = "(Curl_failf,Curl_failf(*a1, \"bind() failed; %s\", v10))" ]
"1000402" [label = "(<operator>.indirection,*a1)" ]
"1000406" [label = "(RETURN,return 7;,return 7;)" ]
"1000114" [label = "(METHOD,tftp_connect)" ]
"1000408" [label = "(METHOD_RETURN,int __cdecl)" ]
  "1000131" -> "1000137" 
  "1000133" -> "1000131" 
  "1000135" -> "1000141" 
  "1000137" -> "1000135" 
  "1000140" -> "1000146" 
  "1000141" -> "1000140" 
  "1000146" -> "1000148" 
  "1000146" -> "1000150" 
  "1000148" -> "1000408" 
  "1000150" -> "1000157" 
  "1000153" -> "1000165" 
  "1000153" -> "1000196" 
  "1000155" -> "1000153" 
  "1000156" -> "1000155" 
  "1000157" -> "1000159" 
  "1000158" -> "1000156" 
  "1000159" -> "1000158" 
  "1000165" -> "1000171" 
  "1000169" -> "1000176" 
  "1000169" -> "1000178" 
  "1000170" -> "1000169" 
  "1000171" -> "1000172" 
  "1000172" -> "1000170" 
  "1000176" -> "1000408" 
  "1000178" -> "1000182" 
  "1000182" -> "1000206" 
  "1000182" -> "1000189" 
  "1000185" -> "1000206" 
  "1000187" -> "1000185" 
  "1000188" -> "1000187" 
  "1000189" -> "1000191" 
  "1000190" -> "1000188" 
  "1000191" -> "1000190" 
  "1000196" -> "1000199" 
  "1000199" -> "1000206" 
  "1000203" -> "1000241" 
  "1000203" -> "1000211" 
  "1000204" -> "1000203" 
  "1000205" -> "1000204" 
  "1000206" -> "1000207" 
  "1000207" -> "1000205" 
  "1000211" -> "1000218" 
  "1000214" -> "1000224" 
  "1000216" -> "1000214" 
  "1000218" -> "1000216" 
  "1000221" -> "1000229" 
  "1000222" -> "1000221" 
  "1000223" -> "1000222" 
  "1000224" -> "1000225" 
  "1000225" -> "1000223" 
  "1000229" -> "1000233" 
  "1000233" -> "1000241" 
  "1000233" -> "1000235" 
  "1000235" -> "1000408" 
  "1000238" -> "1000250" 
  "1000238" -> "1000266" 
  "1000239" -> "1000238" 
  "1000240" -> "1000239" 
  "1000241" -> "1000242" 
  "1000242" -> "1000240" 
  "1000246" -> "1000256" 
  "1000248" -> "1000246" 
  "1000250" -> "1000248" 
  "1000253" -> "1000262" 
  "1000254" -> "1000253" 
  "1000255" -> "1000254" 
  "1000256" -> "1000257" 
  "1000257" -> "1000255" 
  "1000262" -> "1000264" 
  "1000262" -> "1000266" 
  "1000264" -> "1000408" 
  "1000266" -> "1000271" 
  "1000269" -> "1000277" 
  "1000271" -> "1000269" 
  "1000274" -> "1000285" 
  "1000275" -> "1000274" 
  "1000276" -> "1000275" 
  "1000277" -> "1000278" 
  "1000278" -> "1000276" 
  "1000282" -> "1000291" 
  "1000283" -> "1000282" 
  "1000284" -> "1000283" 
  "1000285" -> "1000284" 
  "1000288" -> "1000300" 
  "1000289" -> "1000295" 
  "1000290" -> "1000289" 
  "1000291" -> "1000292" 
  "1000292" -> "1000290" 
  "1000295" -> "1000288" 
  "1000297" -> "1000308" 
  "1000298" -> "1000297" 
  "1000299" -> "1000298" 
  "1000300" -> "1000301" 
  "1000301" -> "1000299" 
  "1000305" -> "1000316" 
  "1000306" -> "1000305" 
  "1000307" -> "1000306" 
  "1000308" -> "1000309" 
  "1000309" -> "1000307" 
  "1000313" -> "1000324" 
  "1000314" -> "1000313" 
  "1000315" -> "1000314" 
  "1000316" -> "1000317" 
  "1000317" -> "1000315" 
  "1000321" -> "1000336" 
  "1000322" -> "1000330" 
  "1000323" -> "1000322" 
  "1000324" -> "1000325" 
  "1000325" -> "1000323" 
  "1000328" -> "1000321" 
  "1000329" -> "1000328" 
  "1000330" -> "1000332" 
  "1000331" -> "1000329" 
  "1000332" -> "1000331" 
  "1000336" -> "1000343" 
  "1000338" -> "1000364" 
  "1000338" -> "1000351" 
  "1000339" -> "1000338" 
  "1000340" -> "1000339" 
  "1000341" -> "1000340" 
  "1000342" -> "1000341" 
  "1000343" -> "1000342" 
  "1000350" -> "1000354" 
  "1000351" -> "1000350" 
  "1000353" -> "1000357" 
  "1000354" -> "1000353" 
  "1000357" -> "1000408" 
  "1000360" -> "1000386" 
  "1000360" -> "1000393" 
  "1000361" -> "1000360" 
  "1000362" -> "1000369" 
  "1000363" -> "1000362" 
  "1000364" -> "1000365" 
  "1000365" -> "1000363" 
  "1000368" -> "1000375" 
  "1000369" -> "1000370" 
  "1000370" -> "1000368" 
  "1000373" -> "1000361" 
  "1000374" -> "1000373" 
  "1000375" -> "1000377" 
  "1000376" -> "1000374" 
  "1000377" -> "1000376" 
  "1000382" -> "1000351" 
  "1000383" -> "1000382" 
  "1000384" -> "1000383" 
  "1000385" -> "1000384" 
  "1000386" -> "1000385" 
  "1000391" -> "1000397" 
  "1000393" -> "1000391" 
  "1000394" -> "1000402" 
  "1000396" -> "1000394" 
  "1000397" -> "1000396" 
  "1000401" -> "1000406" 
  "1000402" -> "1000401" 
  "1000406" -> "1000408" 
  "1000114" -> "1000133" 
}
