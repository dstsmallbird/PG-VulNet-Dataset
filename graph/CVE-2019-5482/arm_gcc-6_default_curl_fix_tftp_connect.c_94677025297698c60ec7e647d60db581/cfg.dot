digraph tftp_connect {  
"1000131" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000133" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000136" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000137" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000142" [label = "(<operator>.logicalNot,!v4)" ]
"1000144" [label = "(RETURN,return 27;,return 27;)" ]
"1000146" [label = "(<operator>.assignment,v5 = v4)" ]
"1000149" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000151" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000152" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000153" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000154" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000155" [label = "(<operator>.indirection,*a1)" ]
"1000162" [label = "(<operator>.greaterThan,(unsigned int)(v6 - 8) > 0xFFB0)" ]
"1000163" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000164" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000165" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000169" [label = "(RETURN,return 71;,return 71;)" ]
"1000171" [label = "(<operator>.assignment,v8 = v6 < 512 ? 512 : *(_DWORD *)(*a1 + 1576))" ]
"1000173" [label = "(<operator>.conditional,v6 < 512 ? 512 : *(_DWORD *)(*a1 + 1576))" ]
"1000174" [label = "(<operator>.lessThan,v6 < 512)" ]
"1000178" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000179" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000180" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000181" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000182" [label = "(<operator>.indirection,*a1)" ]
"1000185" [label = "(<operator>.assignment,v7 = *(_DWORD *)(*a1 + 1576))" ]
"1000187" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000188" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000189" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000190" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000191" [label = "(<operator>.indirection,*a1)" ]
"1000196" [label = "(<operator>.assignment,v7 = 512)" ]
"1000199" [label = "(<operator>.assignment,v8 = 512)" ]
"1000203" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000204" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000205" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000206" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000207" [label = "(<operator>.addition,v4 + 328)" ]
"1000211" [label = "(<operator>.assignment,v11 = Curl_ccalloc(1, v8 + 4))" ]
"1000213" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000215" [label = "(<operator>.addition,v8 + 4)" ]
"1000218" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v11)" ]
"1000219" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000220" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000221" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000222" [label = "(<operator>.addition,v5 + 328)" ]
"1000227" [label = "(<operator>.logicalNot,!v11)" ]
"1000229" [label = "(RETURN,return 27;,return 27;)" ]
"1000232" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 332))" ]
"1000233" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000234" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000235" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000236" [label = "(<operator>.addition,v5 + 332)" ]
"1000240" [label = "(<operator>.assignment,v15 = Curl_ccalloc(1, v8 + 4))" ]
"1000242" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000244" [label = "(<operator>.addition,v8 + 4)" ]
"1000247" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v15)" ]
"1000248" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000249" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000250" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000251" [label = "(<operator>.addition,v5 + 332)" ]
"1000256" [label = "(<operator>.logicalNot,!v15)" ]
"1000258" [label = "(RETURN,return 27;,return 27;)" ]
"1000260" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000263" [label = "(<operator>.assignment,v9 = *(_DWORD *)(a1[20] + 4))" ]
"1000265" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000266" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000267" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000268" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000269" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000273" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = a1[105])" ]
"1000274" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000275" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000276" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000277" [label = "(<operator>.addition,v5 + 20)" ]
"1000280" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000283" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = 512)" ]
"1000284" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000285" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000286" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000287" [label = "(<operator>.addition,v5 + 320)" ]
"1000291" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000292" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000293" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000294" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000295" [label = "(<operator>.addition,v5 + 16)" ]
"1000299" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = v9)" ]
"1000300" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000301" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000302" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000303" [label = "(<operator>.addition,v5 + 52)" ]
"1000307" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v7)" ]
"1000308" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000309" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000310" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000311" [label = "(<operator>.addition,v5 + 324)" ]
"1000315" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000316" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000317" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000318" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000321" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000322" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000323" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000324" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000325" [label = "(<operator>.addition,v5 + 8)" ]
"1000328" [label = "(<operator>.minus,-100)" ]
"1000330" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000333" [label = "(<operator>.notEquals,(*((_BYTE *)a1 + 591) & 2) != 0)" ]
"1000334" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000335" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000336" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000337" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000338" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000345" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000346" [label = "(<operator>.indirection,*a1)" ]
"1000348" [label = "(<operator>.assignment,result = 0)" ]
"1000351" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000352" [label = "(<operator>.indirection,*a2)" ]
"1000355" [label = "(RETURN,return result;,return result;)" ]
"1000358" [label = "(<operator>.logicalNot,!bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000359" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000360" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000361" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000362" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000363" [label = "(<operator>.addition,v5 + 20)" ]
"1000366" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000367" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000368" [label = "(<operator>.addition,v5 + 52)" ]
"1000371" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000372" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000373" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000374" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000375" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000380" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 591) |= 2u)" ]
"1000381" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000382" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000383" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000384" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000389" [label = "(<operator>.assignment,v12 = _errno_location())" ]
"1000391" [label = "(_errno_location,_errno_location())" ]
"1000392" [label = "(<operator>.assignment,v13 = *a1)" ]
"1000394" [label = "(<operator>.indirection,*a1)" ]
"1000396" [label = "(<operator>.assignment,v14 = (const char *)Curl_strerror(*v12, v16, 128))" ]
"1000398" [label = "(<operator>.cast,(const char *)Curl_strerror(*v12, v16, 128))" ]
"1000399" [label = "(UNKNOWN,const char *,const char *)" ]
"1000400" [label = "(Curl_strerror,Curl_strerror(*v12, v16, 128))" ]
"1000401" [label = "(<operator>.indirection,*v12)" ]
"1000405" [label = "(Curl_failf,Curl_failf(v13, \"bind() failed; %s\", v14))" ]
"1000409" [label = "(RETURN,return 7;,return 7;)" ]
"1000114" [label = "(METHOD,tftp_connect)" ]
"1000411" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000131" -> "1000137" 
  "1000133" -> "1000131" 
  "1000136" -> "1000142" 
  "1000137" -> "1000136" 
  "1000142" -> "1000144" 
  "1000142" -> "1000146" 
  "1000144" -> "1000411" 
  "1000146" -> "1000153" 
  "1000149" -> "1000164" 
  "1000149" -> "1000196" 
  "1000151" -> "1000149" 
  "1000152" -> "1000151" 
  "1000153" -> "1000155" 
  "1000154" -> "1000152" 
  "1000155" -> "1000154" 
  "1000162" -> "1000169" 
  "1000162" -> "1000174" 
  "1000163" -> "1000162" 
  "1000164" -> "1000165" 
  "1000165" -> "1000163" 
  "1000169" -> "1000411" 
  "1000171" -> "1000189" 
  "1000173" -> "1000171" 
  "1000174" -> "1000180" 
  "1000174" -> "1000173" 
  "1000178" -> "1000173" 
  "1000179" -> "1000178" 
  "1000180" -> "1000182" 
  "1000181" -> "1000179" 
  "1000182" -> "1000181" 
  "1000185" -> "1000206" 
  "1000187" -> "1000185" 
  "1000188" -> "1000187" 
  "1000189" -> "1000191" 
  "1000190" -> "1000188" 
  "1000191" -> "1000190" 
  "1000196" -> "1000199" 
  "1000199" -> "1000206" 
  "1000203" -> "1000235" 
  "1000203" -> "1000215" 
  "1000204" -> "1000203" 
  "1000205" -> "1000204" 
  "1000206" -> "1000207" 
  "1000207" -> "1000205" 
  "1000211" -> "1000221" 
  "1000213" -> "1000211" 
  "1000215" -> "1000213" 
  "1000218" -> "1000227" 
  "1000219" -> "1000218" 
  "1000220" -> "1000219" 
  "1000221" -> "1000222" 
  "1000222" -> "1000220" 
  "1000227" -> "1000235" 
  "1000227" -> "1000229" 
  "1000229" -> "1000411" 
  "1000232" -> "1000244" 
  "1000232" -> "1000260" 
  "1000233" -> "1000232" 
  "1000234" -> "1000233" 
  "1000235" -> "1000236" 
  "1000236" -> "1000234" 
  "1000240" -> "1000250" 
  "1000242" -> "1000240" 
  "1000244" -> "1000242" 
  "1000247" -> "1000256" 
  "1000248" -> "1000247" 
  "1000249" -> "1000248" 
  "1000250" -> "1000251" 
  "1000251" -> "1000249" 
  "1000256" -> "1000258" 
  "1000256" -> "1000260" 
  "1000258" -> "1000411" 
  "1000260" -> "1000267" 
  "1000263" -> "1000276" 
  "1000265" -> "1000263" 
  "1000266" -> "1000265" 
  "1000267" -> "1000269" 
  "1000268" -> "1000266" 
  "1000269" -> "1000268" 
  "1000273" -> "1000286" 
  "1000274" -> "1000280" 
  "1000275" -> "1000274" 
  "1000276" -> "1000277" 
  "1000277" -> "1000275" 
  "1000280" -> "1000273" 
  "1000283" -> "1000294" 
  "1000284" -> "1000283" 
  "1000285" -> "1000284" 
  "1000286" -> "1000287" 
  "1000287" -> "1000285" 
  "1000291" -> "1000302" 
  "1000292" -> "1000291" 
  "1000293" -> "1000292" 
  "1000294" -> "1000295" 
  "1000295" -> "1000293" 
  "1000299" -> "1000310" 
  "1000300" -> "1000299" 
  "1000301" -> "1000300" 
  "1000302" -> "1000303" 
  "1000303" -> "1000301" 
  "1000307" -> "1000318" 
  "1000308" -> "1000307" 
  "1000309" -> "1000308" 
  "1000310" -> "1000311" 
  "1000311" -> "1000309" 
  "1000315" -> "1000324" 
  "1000316" -> "1000315" 
  "1000317" -> "1000316" 
  "1000318" -> "1000317" 
  "1000321" -> "1000330" 
  "1000322" -> "1000328" 
  "1000323" -> "1000322" 
  "1000324" -> "1000325" 
  "1000325" -> "1000323" 
  "1000328" -> "1000321" 
  "1000330" -> "1000338" 
  "1000333" -> "1000362" 
  "1000333" -> "1000346" 
  "1000334" -> "1000333" 
  "1000335" -> "1000334" 
  "1000336" -> "1000335" 
  "1000337" -> "1000336" 
  "1000338" -> "1000337" 
  "1000345" -> "1000348" 
  "1000346" -> "1000345" 
  "1000348" -> "1000352" 
  "1000351" -> "1000355" 
  "1000352" -> "1000351" 
  "1000355" -> "1000411" 
  "1000358" -> "1000384" 
  "1000358" -> "1000391" 
  "1000359" -> "1000358" 
  "1000360" -> "1000367" 
  "1000361" -> "1000360" 
  "1000362" -> "1000363" 
  "1000363" -> "1000361" 
  "1000366" -> "1000373" 
  "1000367" -> "1000368" 
  "1000368" -> "1000366" 
  "1000371" -> "1000359" 
  "1000372" -> "1000371" 
  "1000373" -> "1000375" 
  "1000374" -> "1000372" 
  "1000375" -> "1000374" 
  "1000380" -> "1000346" 
  "1000381" -> "1000380" 
  "1000382" -> "1000381" 
  "1000383" -> "1000382" 
  "1000384" -> "1000383" 
  "1000389" -> "1000394" 
  "1000391" -> "1000389" 
  "1000392" -> "1000399" 
  "1000394" -> "1000392" 
  "1000396" -> "1000405" 
  "1000398" -> "1000396" 
  "1000399" -> "1000401" 
  "1000400" -> "1000398" 
  "1000401" -> "1000400" 
  "1000405" -> "1000409" 
  "1000409" -> "1000411" 
  "1000114" -> "1000133" 
}
