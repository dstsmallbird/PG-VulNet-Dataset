digraph tftp_connect {  
"1000125" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000127" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000130" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000131" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000136" [label = "(<operator>.logicalNot,!v4)" ]
"1000138" [label = "(RETURN,return 27;,return 27;)" ]
"1000140" [label = "(<operator>.assignment,v5 = v4)" ]
"1000143" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000145" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000146" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000147" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000148" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000149" [label = "(<operator>.indirection,*a1)" ]
"1000156" [label = "(<operator>.greaterEqualsThan,(unsigned int)(v6 - 8) >= 0xFFB1)" ]
"1000157" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000158" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000159" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000163" [label = "(RETURN,return 71;,return 71;)" ]
"1000165" [label = "(<operator>.assignment,v7 = *(_DWORD *)(v4 + 328))" ]
"1000167" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000168" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000169" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000170" [label = "(<operator>.addition,v4 + 328)" ]
"1000175" [label = "(<operator>.assignment,v6 = 512)" ]
"1000178" [label = "(<operator>.assignment,v7 = *(_DWORD *)(v4 + 328))" ]
"1000180" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000181" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000182" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000183" [label = "(<operator>.addition,v4 + 328)" ]
"1000187" [label = "(<operator>.logicalNot,!v7)" ]
"1000190" [label = "(<operator>.assignment,v8 = Curl_ccalloc(1, v6 + 4))" ]
"1000192" [label = "(Curl_ccalloc,Curl_ccalloc(1, v6 + 4))" ]
"1000194" [label = "(<operator>.addition,v6 + 4)" ]
"1000197" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v8)" ]
"1000198" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000199" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000200" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000201" [label = "(<operator>.addition,v5 + 328)" ]
"1000206" [label = "(<operator>.logicalNot,!v8)" ]
"1000208" [label = "(RETURN,return 27;,return 27;)" ]
"1000211" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 332))" ]
"1000212" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000213" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000214" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000215" [label = "(<operator>.addition,v5 + 332)" ]
"1000219" [label = "(<operator>.assignment,v9 = Curl_ccalloc(1, v6 + 4))" ]
"1000221" [label = "(Curl_ccalloc,Curl_ccalloc(1, v6 + 4))" ]
"1000223" [label = "(<operator>.addition,v6 + 4)" ]
"1000226" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v9)" ]
"1000227" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000228" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000229" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000230" [label = "(<operator>.addition,v5 + 332)" ]
"1000235" [label = "(<operator>.logicalNot,!v9)" ]
"1000237" [label = "(RETURN,return 27;,return 27;)" ]
"1000239" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000242" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000243" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000244" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000245" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000246" [label = "(<operator>.addition,v5 + 16)" ]
"1000250" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = a1[105])" ]
"1000251" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000252" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000253" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000254" [label = "(<operator>.addition,v5 + 20)" ]
"1000257" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000260" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000261" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000262" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000263" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000266" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000267" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000268" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000269" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000270" [label = "(<operator>.addition,v5 + 8)" ]
"1000273" [label = "(<operator>.minus,-100)" ]
"1000275" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = v6)" ]
"1000276" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000277" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000278" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000279" [label = "(<operator>.addition,v5 + 320)" ]
"1000283" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v6)" ]
"1000284" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000285" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000286" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000287" [label = "(<operator>.addition,v5 + 324)" ]
"1000291" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000292" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000293" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000294" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000295" [label = "(<operator>.addition,v5 + 52)" ]
"1000298" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000299" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000300" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000301" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000302" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000306" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000309" [label = "(<operator>.equals,(a1[147] & 0x2000000) == 0)" ]
"1000310" [label = "(<operator>.and,a1[147] & 0x2000000)" ]
"1000311" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000318" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000319" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000320" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000321" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000322" [label = "(<operator>.addition,v5 + 20)" ]
"1000325" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000326" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000327" [label = "(<operator>.addition,v5 + 52)" ]
"1000330" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000331" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000332" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000333" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000334" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000339" [label = "(<operator>.assignment,v10 = *a1)" ]
"1000341" [label = "(<operator>.indirection,*a1)" ]
"1000343" [label = "(<operator>.assignment,v11 = _errno_location())" ]
"1000345" [label = "(_errno_location,_errno_location())" ]
"1000346" [label = "(<operator>.assignment,v12 = (const char *)Curl_strerror(*v11, v14, 128))" ]
"1000348" [label = "(<operator>.cast,(const char *)Curl_strerror(*v11, v14, 128))" ]
"1000349" [label = "(UNKNOWN,const char *,const char *)" ]
"1000350" [label = "(Curl_strerror,Curl_strerror(*v11, v14, 128))" ]
"1000351" [label = "(<operator>.indirection,*v11)" ]
"1000355" [label = "(Curl_failf,Curl_failf(v10, \"bind() failed; %s\", v12))" ]
"1000359" [label = "(RETURN,return 7;,return 7;)" ]
"1000361" [label = "(<operators>.assignmentOr,a1[147] |= 0x2000000u)" ]
"1000362" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000366" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000367" [label = "(<operator>.indirection,*a1)" ]
"1000369" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000370" [label = "(<operator>.indirection,*a2)" ]
"1000373" [label = "(RETURN,return 0;,return 0;)" ]
"1000111" [label = "(METHOD,tftp_connect)" ]
"1000375" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000125" -> "1000131" 
  "1000127" -> "1000125" 
  "1000130" -> "1000136" 
  "1000131" -> "1000130" 
  "1000136" -> "1000138" 
  "1000136" -> "1000140" 
  "1000138" -> "1000375" 
  "1000140" -> "1000147" 
  "1000143" -> "1000158" 
  "1000143" -> "1000175" 
  "1000145" -> "1000143" 
  "1000146" -> "1000145" 
  "1000147" -> "1000149" 
  "1000148" -> "1000146" 
  "1000149" -> "1000148" 
  "1000156" -> "1000163" 
  "1000156" -> "1000169" 
  "1000157" -> "1000156" 
  "1000158" -> "1000159" 
  "1000159" -> "1000157" 
  "1000163" -> "1000375" 
  "1000165" -> "1000187" 
  "1000167" -> "1000165" 
  "1000168" -> "1000167" 
  "1000169" -> "1000170" 
  "1000170" -> "1000168" 
  "1000175" -> "1000182" 
  "1000178" -> "1000187" 
  "1000180" -> "1000178" 
  "1000181" -> "1000180" 
  "1000182" -> "1000183" 
  "1000183" -> "1000181" 
  "1000187" -> "1000214" 
  "1000187" -> "1000194" 
  "1000190" -> "1000200" 
  "1000192" -> "1000190" 
  "1000194" -> "1000192" 
  "1000197" -> "1000206" 
  "1000198" -> "1000197" 
  "1000199" -> "1000198" 
  "1000200" -> "1000201" 
  "1000201" -> "1000199" 
  "1000206" -> "1000214" 
  "1000206" -> "1000208" 
  "1000208" -> "1000375" 
  "1000211" -> "1000223" 
  "1000211" -> "1000239" 
  "1000212" -> "1000211" 
  "1000213" -> "1000212" 
  "1000214" -> "1000215" 
  "1000215" -> "1000213" 
  "1000219" -> "1000229" 
  "1000221" -> "1000219" 
  "1000223" -> "1000221" 
  "1000226" -> "1000235" 
  "1000227" -> "1000226" 
  "1000228" -> "1000227" 
  "1000229" -> "1000230" 
  "1000230" -> "1000228" 
  "1000235" -> "1000237" 
  "1000235" -> "1000239" 
  "1000237" -> "1000375" 
  "1000239" -> "1000245" 
  "1000242" -> "1000253" 
  "1000243" -> "1000242" 
  "1000244" -> "1000243" 
  "1000245" -> "1000246" 
  "1000246" -> "1000244" 
  "1000250" -> "1000263" 
  "1000251" -> "1000257" 
  "1000252" -> "1000251" 
  "1000253" -> "1000254" 
  "1000254" -> "1000252" 
  "1000257" -> "1000250" 
  "1000260" -> "1000269" 
  "1000261" -> "1000260" 
  "1000262" -> "1000261" 
  "1000263" -> "1000262" 
  "1000266" -> "1000278" 
  "1000267" -> "1000273" 
  "1000268" -> "1000267" 
  "1000269" -> "1000270" 
  "1000270" -> "1000268" 
  "1000273" -> "1000266" 
  "1000275" -> "1000286" 
  "1000276" -> "1000275" 
  "1000277" -> "1000276" 
  "1000278" -> "1000279" 
  "1000279" -> "1000277" 
  "1000283" -> "1000294" 
  "1000284" -> "1000283" 
  "1000285" -> "1000284" 
  "1000286" -> "1000287" 
  "1000287" -> "1000285" 
  "1000291" -> "1000306" 
  "1000292" -> "1000300" 
  "1000293" -> "1000292" 
  "1000294" -> "1000295" 
  "1000295" -> "1000293" 
  "1000298" -> "1000291" 
  "1000299" -> "1000298" 
  "1000300" -> "1000302" 
  "1000301" -> "1000299" 
  "1000302" -> "1000301" 
  "1000306" -> "1000311" 
  "1000309" -> "1000321" 
  "1000309" -> "1000367" 
  "1000310" -> "1000309" 
  "1000311" -> "1000310" 
  "1000318" -> "1000341" 
  "1000318" -> "1000362" 
  "1000319" -> "1000326" 
  "1000320" -> "1000319" 
  "1000321" -> "1000322" 
  "1000322" -> "1000320" 
  "1000325" -> "1000332" 
  "1000326" -> "1000327" 
  "1000327" -> "1000325" 
  "1000330" -> "1000318" 
  "1000331" -> "1000330" 
  "1000332" -> "1000334" 
  "1000333" -> "1000331" 
  "1000334" -> "1000333" 
  "1000339" -> "1000345" 
  "1000341" -> "1000339" 
  "1000343" -> "1000349" 
  "1000345" -> "1000343" 
  "1000346" -> "1000355" 
  "1000348" -> "1000346" 
  "1000349" -> "1000351" 
  "1000350" -> "1000348" 
  "1000351" -> "1000350" 
  "1000355" -> "1000359" 
  "1000359" -> "1000375" 
  "1000361" -> "1000367" 
  "1000362" -> "1000361" 
  "1000366" -> "1000370" 
  "1000367" -> "1000366" 
  "1000369" -> "1000373" 
  "1000370" -> "1000369" 
  "1000373" -> "1000375" 
  "1000111" -> "1000127" 
}
