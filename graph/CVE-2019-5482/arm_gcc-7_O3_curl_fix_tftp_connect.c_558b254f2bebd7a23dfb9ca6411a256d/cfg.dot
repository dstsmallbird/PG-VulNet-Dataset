digraph tftp_connect {  
"1000129" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000131" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000134" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000135" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000140" [label = "(<operator>.logicalNot,!v4)" ]
"1000142" [label = "(RETURN,return 27;,return 27;)" ]
"1000144" [label = "(<operator>.assignment,v5 = v4)" ]
"1000147" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000149" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000150" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000151" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000152" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000153" [label = "(<operator>.indirection,*a1)" ]
"1000160" [label = "(<operator>.greaterThan,(unsigned int)(v6 - 8) > 0xFFB0)" ]
"1000161" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000162" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000163" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000167" [label = "(RETURN,return 71;,return 71;)" ]
"1000169" [label = "(<operator>.assignment,v7 = v6 < 512 ? 512 : *(_DWORD *)(*a1 + 1576))" ]
"1000171" [label = "(<operator>.conditional,v6 < 512 ? 512 : *(_DWORD *)(*a1 + 1576))" ]
"1000172" [label = "(<operator>.lessThan,v6 < 512)" ]
"1000176" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000177" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000178" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000179" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000180" [label = "(<operator>.indirection,*a1)" ]
"1000185" [label = "(<operator>.assignment,v6 = 512)" ]
"1000188" [label = "(<operator>.assignment,v7 = 512)" ]
"1000192" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000193" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000194" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000195" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000196" [label = "(<operator>.addition,v4 + 328)" ]
"1000200" [label = "(<operator>.assignment,v8 = Curl_ccalloc(1, v7 + 4))" ]
"1000202" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000204" [label = "(<operator>.addition,v7 + 4)" ]
"1000207" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v8)" ]
"1000208" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000209" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000210" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000211" [label = "(<operator>.addition,v5 + 328)" ]
"1000216" [label = "(<operator>.logicalNot,!v8)" ]
"1000218" [label = "(RETURN,return 27;,return 27;)" ]
"1000221" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 332))" ]
"1000222" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000223" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000224" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000225" [label = "(<operator>.addition,v5 + 332)" ]
"1000229" [label = "(<operator>.assignment,v9 = Curl_ccalloc(1, v7 + 4))" ]
"1000231" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000233" [label = "(<operator>.addition,v7 + 4)" ]
"1000236" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v9)" ]
"1000237" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000238" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000239" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000240" [label = "(<operator>.addition,v5 + 332)" ]
"1000245" [label = "(<operator>.logicalNot,!v9)" ]
"1000247" [label = "(RETURN,return 27;,return 27;)" ]
"1000249" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000252" [label = "(<operator>.assignment,v10 = *(_DWORD *)(a1[20] + 4))" ]
"1000254" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000255" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000256" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000257" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000258" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000262" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = a1[105])" ]
"1000263" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000264" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000265" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000266" [label = "(<operator>.addition,v5 + 20)" ]
"1000269" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000272" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = 512)" ]
"1000273" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000274" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000275" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000276" [label = "(<operator>.addition,v5 + 320)" ]
"1000280" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000281" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000282" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000283" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000284" [label = "(<operator>.addition,v5 + 16)" ]
"1000288" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = v10)" ]
"1000289" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000290" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000291" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000292" [label = "(<operator>.addition,v5 + 52)" ]
"1000296" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v6)" ]
"1000297" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000298" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000299" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000300" [label = "(<operator>.addition,v5 + 324)" ]
"1000304" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000305" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000306" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000307" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000310" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000311" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000312" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000313" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000314" [label = "(<operator>.addition,v5 + 8)" ]
"1000317" [label = "(<operator>.minus,-100)" ]
"1000319" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000322" [label = "(<operator>.equals,(*((_BYTE *)a1 + 591) & 2) == 0)" ]
"1000323" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000324" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000325" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000326" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000327" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000334" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000335" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000336" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000337" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000338" [label = "(<operator>.addition,v5 + 20)" ]
"1000341" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000342" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000343" [label = "(<operator>.addition,v5 + 52)" ]
"1000346" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000347" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000348" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000349" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000350" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000355" [label = "(<operator>.assignment,v12 = _errno_location())" ]
"1000357" [label = "(_errno_location,_errno_location())" ]
"1000358" [label = "(<operator>.assignment,v13 = *a1)" ]
"1000360" [label = "(<operator>.indirection,*a1)" ]
"1000362" [label = "(<operator>.assignment,v14 = (const char *)Curl_strerror(*v12, v15, 128))" ]
"1000364" [label = "(<operator>.cast,(const char *)Curl_strerror(*v12, v15, 128))" ]
"1000365" [label = "(UNKNOWN,const char *,const char *)" ]
"1000366" [label = "(Curl_strerror,Curl_strerror(*v12, v15, 128))" ]
"1000367" [label = "(<operator>.indirection,*v12)" ]
"1000371" [label = "(Curl_failf,Curl_failf(v13, \"bind() failed; %s\", v14))" ]
"1000375" [label = "(RETURN,return 7;,return 7;)" ]
"1000377" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 591) |= 2u)" ]
"1000378" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000379" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000380" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000381" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000385" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000386" [label = "(<operator>.indirection,*a1)" ]
"1000388" [label = "(<operator>.assignment,result = 0)" ]
"1000391" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000392" [label = "(<operator>.indirection,*a2)" ]
"1000395" [label = "(RETURN,return result;,return result;)" ]
"1000113" [label = "(METHOD,tftp_connect)" ]
"1000397" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000129" -> "1000135" 
  "1000131" -> "1000129" 
  "1000134" -> "1000140" 
  "1000135" -> "1000134" 
  "1000140" -> "1000142" 
  "1000140" -> "1000144" 
  "1000142" -> "1000397" 
  "1000144" -> "1000151" 
  "1000147" -> "1000162" 
  "1000147" -> "1000185" 
  "1000149" -> "1000147" 
  "1000150" -> "1000149" 
  "1000151" -> "1000153" 
  "1000152" -> "1000150" 
  "1000153" -> "1000152" 
  "1000160" -> "1000167" 
  "1000160" -> "1000172" 
  "1000161" -> "1000160" 
  "1000162" -> "1000163" 
  "1000163" -> "1000161" 
  "1000167" -> "1000397" 
  "1000169" -> "1000195" 
  "1000171" -> "1000169" 
  "1000172" -> "1000178" 
  "1000172" -> "1000171" 
  "1000176" -> "1000171" 
  "1000177" -> "1000176" 
  "1000178" -> "1000180" 
  "1000179" -> "1000177" 
  "1000180" -> "1000179" 
  "1000185" -> "1000188" 
  "1000188" -> "1000195" 
  "1000192" -> "1000224" 
  "1000192" -> "1000204" 
  "1000193" -> "1000192" 
  "1000194" -> "1000193" 
  "1000195" -> "1000196" 
  "1000196" -> "1000194" 
  "1000200" -> "1000210" 
  "1000202" -> "1000200" 
  "1000204" -> "1000202" 
  "1000207" -> "1000216" 
  "1000208" -> "1000207" 
  "1000209" -> "1000208" 
  "1000210" -> "1000211" 
  "1000211" -> "1000209" 
  "1000216" -> "1000224" 
  "1000216" -> "1000218" 
  "1000218" -> "1000397" 
  "1000221" -> "1000233" 
  "1000221" -> "1000249" 
  "1000222" -> "1000221" 
  "1000223" -> "1000222" 
  "1000224" -> "1000225" 
  "1000225" -> "1000223" 
  "1000229" -> "1000239" 
  "1000231" -> "1000229" 
  "1000233" -> "1000231" 
  "1000236" -> "1000245" 
  "1000237" -> "1000236" 
  "1000238" -> "1000237" 
  "1000239" -> "1000240" 
  "1000240" -> "1000238" 
  "1000245" -> "1000247" 
  "1000245" -> "1000249" 
  "1000247" -> "1000397" 
  "1000249" -> "1000256" 
  "1000252" -> "1000265" 
  "1000254" -> "1000252" 
  "1000255" -> "1000254" 
  "1000256" -> "1000258" 
  "1000257" -> "1000255" 
  "1000258" -> "1000257" 
  "1000262" -> "1000275" 
  "1000263" -> "1000269" 
  "1000264" -> "1000263" 
  "1000265" -> "1000266" 
  "1000266" -> "1000264" 
  "1000269" -> "1000262" 
  "1000272" -> "1000283" 
  "1000273" -> "1000272" 
  "1000274" -> "1000273" 
  "1000275" -> "1000276" 
  "1000276" -> "1000274" 
  "1000280" -> "1000291" 
  "1000281" -> "1000280" 
  "1000282" -> "1000281" 
  "1000283" -> "1000284" 
  "1000284" -> "1000282" 
  "1000288" -> "1000299" 
  "1000289" -> "1000288" 
  "1000290" -> "1000289" 
  "1000291" -> "1000292" 
  "1000292" -> "1000290" 
  "1000296" -> "1000307" 
  "1000297" -> "1000296" 
  "1000298" -> "1000297" 
  "1000299" -> "1000300" 
  "1000300" -> "1000298" 
  "1000304" -> "1000313" 
  "1000305" -> "1000304" 
  "1000306" -> "1000305" 
  "1000307" -> "1000306" 
  "1000310" -> "1000319" 
  "1000311" -> "1000317" 
  "1000312" -> "1000311" 
  "1000313" -> "1000314" 
  "1000314" -> "1000312" 
  "1000317" -> "1000310" 
  "1000319" -> "1000327" 
  "1000322" -> "1000337" 
  "1000322" -> "1000386" 
  "1000323" -> "1000322" 
  "1000324" -> "1000323" 
  "1000325" -> "1000324" 
  "1000326" -> "1000325" 
  "1000327" -> "1000326" 
  "1000334" -> "1000381" 
  "1000334" -> "1000357" 
  "1000335" -> "1000342" 
  "1000336" -> "1000335" 
  "1000337" -> "1000338" 
  "1000338" -> "1000336" 
  "1000341" -> "1000348" 
  "1000342" -> "1000343" 
  "1000343" -> "1000341" 
  "1000346" -> "1000334" 
  "1000347" -> "1000346" 
  "1000348" -> "1000350" 
  "1000349" -> "1000347" 
  "1000350" -> "1000349" 
  "1000355" -> "1000360" 
  "1000357" -> "1000355" 
  "1000358" -> "1000365" 
  "1000360" -> "1000358" 
  "1000362" -> "1000371" 
  "1000364" -> "1000362" 
  "1000365" -> "1000367" 
  "1000366" -> "1000364" 
  "1000367" -> "1000366" 
  "1000371" -> "1000375" 
  "1000375" -> "1000397" 
  "1000377" -> "1000386" 
  "1000378" -> "1000377" 
  "1000379" -> "1000378" 
  "1000380" -> "1000379" 
  "1000381" -> "1000380" 
  "1000385" -> "1000388" 
  "1000386" -> "1000385" 
  "1000388" -> "1000392" 
  "1000391" -> "1000395" 
  "1000392" -> "1000391" 
  "1000395" -> "1000397" 
  "1000113" -> "1000131" 
}
