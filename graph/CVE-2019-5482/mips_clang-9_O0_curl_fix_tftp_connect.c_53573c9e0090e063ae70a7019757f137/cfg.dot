digraph tftp_connect {  
"1000129" [label = "(<operator>.assignment,v15 = a1)" ]
"1000132" [label = "(<operator>.assignment,v14 = a2)" ]
"1000135" [label = "(<operator>.assignment,v12 = 512)" ]
"1000138" [label = "(<operator>.assignment,v2 = Curl_ccalloc(1, 336))" ]
"1000140" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000143" [label = "(<operator>.assignment,v15[188] = v2)" ]
"1000144" [label = "(<operator>.indirectIndexAccess,v15[188])" ]
"1000148" [label = "(<operator>.assignment,v13 = v2)" ]
"1000152" [label = "(<operator>.logicalNot,!v2)" ]
"1000154" [label = "(RETURN,return 27;,return 27;)" ]
"1000157" [label = "(<operator>.indirection,*(_DWORD *)(*v15 + 1576))" ]
"1000158" [label = "(<operator>.cast,(_DWORD *)(*v15 + 1576))" ]
"1000159" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000160" [label = "(<operator>.addition,*v15 + 1576)" ]
"1000161" [label = "(<operator>.indirection,*v15)" ]
"1000165" [label = "(<operator>.assignment,v12 = *(_DWORD *)(*v15 + 1576))" ]
"1000167" [label = "(<operator>.indirection,*(_DWORD *)(*v15 + 1576))" ]
"1000168" [label = "(<operator>.cast,(_DWORD *)(*v15 + 1576))" ]
"1000169" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000170" [label = "(<operator>.addition,*v15 + 1576)" ]
"1000171" [label = "(<operator>.indirection,*v15)" ]
"1000175" [label = "(<operator>.logicalOr,v12 > 65464 || v12 < 8)" ]
"1000176" [label = "(<operator>.greaterThan,v12 > 65464)" ]
"1000179" [label = "(<operator>.lessThan,v12 < 8)" ]
"1000182" [label = "(RETURN,return 71;,return 71;)" ]
"1000184" [label = "(<operator>.assignment,v11 = v12)" ]
"1000188" [label = "(<operator>.lessThan,v12 < 512)" ]
"1000191" [label = "(<operator>.assignment,v11 = 512)" ]
"1000195" [label = "(<operator>.logicalNot,!*(_DWORD *)(v13 + 328))" ]
"1000196" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 328))" ]
"1000197" [label = "(<operator>.cast,(_DWORD *)(v13 + 328))" ]
"1000198" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000199" [label = "(<operator>.addition,v13 + 328)" ]
"1000203" [label = "(<operator>.assignment,*(_DWORD *)(v13 + 328) = Curl_ccalloc(1, v11 + 4))" ]
"1000204" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 328))" ]
"1000205" [label = "(<operator>.cast,(_DWORD *)(v13 + 328))" ]
"1000206" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000207" [label = "(<operator>.addition,v13 + 328)" ]
"1000210" [label = "(Curl_ccalloc,Curl_ccalloc(1, v11 + 4))" ]
"1000212" [label = "(<operator>.addition,v11 + 4)" ]
"1000216" [label = "(<operator>.logicalNot,!*(_DWORD *)(v13 + 328))" ]
"1000217" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 328))" ]
"1000218" [label = "(<operator>.cast,(_DWORD *)(v13 + 328))" ]
"1000219" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000220" [label = "(<operator>.addition,v13 + 328)" ]
"1000223" [label = "(RETURN,return 27;,return 27;)" ]
"1000226" [label = "(<operator>.logicalOr,*(_DWORD *)(v13 + 332) || (*(_DWORD *)(v13 + 332) = Curl_ccalloc(1, v11 + 4)) != 0)" ]
"1000227" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 332))" ]
"1000228" [label = "(<operator>.cast,(_DWORD *)(v13 + 332))" ]
"1000229" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000230" [label = "(<operator>.addition,v13 + 332)" ]
"1000233" [label = "(<operator>.notEquals,(*(_DWORD *)(v13 + 332) = Curl_ccalloc(1, v11 + 4)) != 0)" ]
"1000234" [label = "(<operator>.assignment,*(_DWORD *)(v13 + 332) = Curl_ccalloc(1, v11 + 4))" ]
"1000235" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 332))" ]
"1000236" [label = "(<operator>.cast,(_DWORD *)(v13 + 332))" ]
"1000237" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000238" [label = "(<operator>.addition,v13 + 332)" ]
"1000241" [label = "(Curl_ccalloc,Curl_ccalloc(1, v11 + 4))" ]
"1000243" [label = "(<operator>.addition,v11 + 4)" ]
"1000248" [label = "(Curl_conncontrol,Curl_conncontrol(v15, 1))" ]
"1000251" [label = "(<operator>.assignment,*(_DWORD *)(v13 + 16) = v15)" ]
"1000252" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 16))" ]
"1000253" [label = "(<operator>.cast,(_DWORD *)(v13 + 16))" ]
"1000254" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000255" [label = "(<operator>.addition,v13 + 16)" ]
"1000259" [label = "(<operator>.assignment,*(_DWORD *)(v13 + 20) = *(_DWORD *)(*(_DWORD *)(v13 + 16) + 420))" ]
"1000260" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 20))" ]
"1000261" [label = "(<operator>.cast,(_DWORD *)(v13 + 20))" ]
"1000262" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000263" [label = "(<operator>.addition,v13 + 20)" ]
"1000266" [label = "(<operator>.indirection,*(_DWORD *)(*(_DWORD *)(v13 + 16) + 420))" ]
"1000267" [label = "(<operator>.cast,(_DWORD *)(*(_DWORD *)(v13 + 16) + 420))" ]
"1000268" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000269" [label = "(<operator>.addition,*(_DWORD *)(v13 + 16) + 420)" ]
"1000270" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 16))" ]
"1000271" [label = "(<operator>.cast,(_DWORD *)(v13 + 16))" ]
"1000272" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000273" [label = "(<operator>.addition,v13 + 16)" ]
"1000277" [label = "(<operator>.assignment,*(_DWORD *)v13 = 0)" ]
"1000278" [label = "(<operator>.indirection,*(_DWORD *)v13)" ]
"1000279" [label = "(<operator>.cast,(_DWORD *)v13)" ]
"1000280" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000283" [label = "(<operator>.assignment,*(_DWORD *)(v13 + 8) = -100)" ]
"1000284" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 8))" ]
"1000285" [label = "(<operator>.cast,(_DWORD *)(v13 + 8))" ]
"1000286" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000287" [label = "(<operator>.addition,v13 + 8)" ]
"1000290" [label = "(<operator>.minus,-100)" ]
"1000292" [label = "(<operator>.assignment,*(_DWORD *)(v13 + 320) = 512)" ]
"1000293" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 320))" ]
"1000294" [label = "(<operator>.cast,(_DWORD *)(v13 + 320))" ]
"1000295" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000296" [label = "(<operator>.addition,v13 + 320)" ]
"1000300" [label = "(<operator>.assignment,*(_DWORD *)(v13 + 324) = v12)" ]
"1000301" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 324))" ]
"1000302" [label = "(<operator>.cast,(_DWORD *)(v13 + 324))" ]
"1000303" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000304" [label = "(<operator>.addition,v13 + 324)" ]
"1000308" [label = "(<operator>.assignment,*(_WORD *)(v13 + 52) = *(_DWORD *)(v15[20] + 4))" ]
"1000309" [label = "(<operator>.indirection,*(_WORD *)(v13 + 52))" ]
"1000310" [label = "(<operator>.cast,(_WORD *)(v13 + 52))" ]
"1000311" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000312" [label = "(<operator>.addition,v13 + 52)" ]
"1000315" [label = "(<operator>.indirection,*(_DWORD *)(v15[20] + 4))" ]
"1000316" [label = "(<operator>.cast,(_DWORD *)(v15[20] + 4))" ]
"1000317" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000318" [label = "(<operator>.addition,v15[20] + 4)" ]
"1000319" [label = "(<operator>.indirectIndexAccess,v15[20])" ]
"1000323" [label = "(tftp_set_timeouts,tftp_set_timeouts(v13))" ]
"1000326" [label = "(<operator>.equals,((v15[147] >> 6) & 1) == 0)" ]
"1000327" [label = "(<operator>.and,(v15[147] >> 6) & 1)" ]
"1000328" [label = "(<operator>.arithmeticShiftRight,v15[147] >> 6)" ]
"1000329" [label = "(<operator>.indirectIndexAccess,v15[147])" ]
"1000337" [label = "(bind,bind(*(_DWORD *)(v13 + 20), (const struct sockaddr *)(v13 + 52), *(_DWORD *)(v15[20] + 16)))" ]
"1000338" [label = "(<operator>.indirection,*(_DWORD *)(v13 + 20))" ]
"1000339" [label = "(<operator>.cast,(_DWORD *)(v13 + 20))" ]
"1000340" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000341" [label = "(<operator>.addition,v13 + 20)" ]
"1000344" [label = "(<operator>.cast,(const struct sockaddr *)(v13 + 52))" ]
"1000345" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000346" [label = "(<operator>.addition,v13 + 52)" ]
"1000349" [label = "(<operator>.indirection,*(_DWORD *)(v15[20] + 16))" ]
"1000350" [label = "(<operator>.cast,(_DWORD *)(v15[20] + 16))" ]
"1000351" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000352" [label = "(<operator>.addition,v15[20] + 16)" ]
"1000353" [label = "(<operator>.indirectIndexAccess,v15[20])" ]
"1000358" [label = "(<operator>.assignment,v8 = *v15)" ]
"1000360" [label = "(<operator>.indirection,*v15)" ]
"1000362" [label = "(<operator>.assignment,v3 = _errno_location())" ]
"1000364" [label = "(_errno_location,_errno_location())" ]
"1000365" [label = "(<operator>.assignment,v4 = Curl_strerror(*v3, v9, 128))" ]
"1000367" [label = "(Curl_strerror,Curl_strerror(*v3, v9, 128))" ]
"1000368" [label = "(<operator>.indirection,*v3)" ]
"1000377" [label = "(RETURN,return 7;,return 7;)" ]
"1000379" [label = "(<operator>.assignment,v5 = v15)" ]
"1000382" [label = "(<operator>.assignment,v6 = v15[147] | 0x40)" ]
"1000384" [label = "(<operator>.or,v15[147] | 0x40)" ]
"1000385" [label = "(<operator>.indirectIndexAccess,v15[147])" ]
"1000389" [label = "(<operator>.assignment,v15[148] = v15[148])" ]
"1000390" [label = "(<operator>.indirectIndexAccess,v15[148])" ]
"1000393" [label = "(<operator>.indirectIndexAccess,v15[148])" ]
"1000396" [label = "(<operator>.assignment,v5[147] = v6)" ]
"1000397" [label = "(<operator>.indirectIndexAccess,v5[147])" ]
"1000401" [label = "(<operator>.indirection,*v15)" ]
"1000403" [label = "(<operator>.assignment,*v14 = 1)" ]
"1000404" [label = "(<operator>.indirection,*v14)" ]
"1000407" [label = "(RETURN,return 0;,return 0;)" ]
"1000409" [label = "(RETURN,return 27;,return 27;)" ]
"1000113" [label = "(METHOD,tftp_connect)" ]
"1000411" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000129" -> "1000132" 
  "1000132" -> "1000135" 
  "1000135" -> "1000140" 
  "1000138" -> "1000144" 
  "1000140" -> "1000138" 
  "1000143" -> "1000148" 
  "1000144" -> "1000143" 
  "1000148" -> "1000152" 
  "1000152" -> "1000159" 
  "1000152" -> "1000154" 
  "1000154" -> "1000411" 
  "1000157" -> "1000169" 
  "1000157" -> "1000184" 
  "1000158" -> "1000157" 
  "1000159" -> "1000161" 
  "1000160" -> "1000158" 
  "1000161" -> "1000160" 
  "1000165" -> "1000176" 
  "1000167" -> "1000165" 
  "1000168" -> "1000167" 
  "1000169" -> "1000171" 
  "1000170" -> "1000168" 
  "1000171" -> "1000170" 
  "1000175" -> "1000182" 
  "1000175" -> "1000184" 
  "1000176" -> "1000175" 
  "1000176" -> "1000179" 
  "1000179" -> "1000175" 
  "1000182" -> "1000411" 
  "1000184" -> "1000188" 
  "1000188" -> "1000198" 
  "1000188" -> "1000191" 
  "1000191" -> "1000198" 
  "1000195" -> "1000206" 
  "1000195" -> "1000229" 
  "1000196" -> "1000195" 
  "1000197" -> "1000196" 
  "1000198" -> "1000199" 
  "1000199" -> "1000197" 
  "1000203" -> "1000219" 
  "1000204" -> "1000212" 
  "1000205" -> "1000204" 
  "1000206" -> "1000207" 
  "1000207" -> "1000205" 
  "1000210" -> "1000203" 
  "1000212" -> "1000210" 
  "1000216" -> "1000229" 
  "1000216" -> "1000223" 
  "1000217" -> "1000216" 
  "1000218" -> "1000217" 
  "1000219" -> "1000220" 
  "1000220" -> "1000218" 
  "1000223" -> "1000411" 
  "1000226" -> "1000248" 
  "1000226" -> "1000409" 
  "1000227" -> "1000237" 
  "1000227" -> "1000226" 
  "1000228" -> "1000227" 
  "1000229" -> "1000230" 
  "1000230" -> "1000228" 
  "1000233" -> "1000226" 
  "1000234" -> "1000233" 
  "1000235" -> "1000243" 
  "1000236" -> "1000235" 
  "1000237" -> "1000238" 
  "1000238" -> "1000236" 
  "1000241" -> "1000234" 
  "1000243" -> "1000241" 
  "1000248" -> "1000254" 
  "1000251" -> "1000262" 
  "1000252" -> "1000251" 
  "1000253" -> "1000252" 
  "1000254" -> "1000255" 
  "1000255" -> "1000253" 
  "1000259" -> "1000280" 
  "1000260" -> "1000268" 
  "1000261" -> "1000260" 
  "1000262" -> "1000263" 
  "1000263" -> "1000261" 
  "1000266" -> "1000259" 
  "1000267" -> "1000266" 
  "1000268" -> "1000272" 
  "1000269" -> "1000267" 
  "1000270" -> "1000269" 
  "1000271" -> "1000270" 
  "1000272" -> "1000273" 
  "1000273" -> "1000271" 
  "1000277" -> "1000286" 
  "1000278" -> "1000277" 
  "1000279" -> "1000278" 
  "1000280" -> "1000279" 
  "1000283" -> "1000295" 
  "1000284" -> "1000290" 
  "1000285" -> "1000284" 
  "1000286" -> "1000287" 
  "1000287" -> "1000285" 
  "1000290" -> "1000283" 
  "1000292" -> "1000303" 
  "1000293" -> "1000292" 
  "1000294" -> "1000293" 
  "1000295" -> "1000296" 
  "1000296" -> "1000294" 
  "1000300" -> "1000311" 
  "1000301" -> "1000300" 
  "1000302" -> "1000301" 
  "1000303" -> "1000304" 
  "1000304" -> "1000302" 
  "1000308" -> "1000323" 
  "1000309" -> "1000317" 
  "1000310" -> "1000309" 
  "1000311" -> "1000312" 
  "1000312" -> "1000310" 
  "1000315" -> "1000308" 
  "1000316" -> "1000315" 
  "1000317" -> "1000319" 
  "1000318" -> "1000316" 
  "1000319" -> "1000318" 
  "1000323" -> "1000329" 
  "1000326" -> "1000340" 
  "1000326" -> "1000401" 
  "1000327" -> "1000326" 
  "1000328" -> "1000327" 
  "1000329" -> "1000328" 
  "1000337" -> "1000360" 
  "1000337" -> "1000379" 
  "1000338" -> "1000345" 
  "1000339" -> "1000338" 
  "1000340" -> "1000341" 
  "1000341" -> "1000339" 
  "1000344" -> "1000351" 
  "1000345" -> "1000346" 
  "1000346" -> "1000344" 
  "1000349" -> "1000337" 
  "1000350" -> "1000349" 
  "1000351" -> "1000353" 
  "1000352" -> "1000350" 
  "1000353" -> "1000352" 
  "1000358" -> "1000364" 
  "1000360" -> "1000358" 
  "1000362" -> "1000368" 
  "1000364" -> "1000362" 
  "1000365" -> "1000377" 
  "1000367" -> "1000365" 
  "1000368" -> "1000367" 
  "1000377" -> "1000411" 
  "1000379" -> "1000385" 
  "1000382" -> "1000390" 
  "1000384" -> "1000382" 
  "1000385" -> "1000384" 
  "1000389" -> "1000397" 
  "1000390" -> "1000393" 
  "1000393" -> "1000389" 
  "1000396" -> "1000401" 
  "1000397" -> "1000396" 
  "1000401" -> "1000404" 
  "1000403" -> "1000407" 
  "1000404" -> "1000403" 
  "1000407" -> "1000411" 
  "1000409" -> "1000411" 
  "1000113" -> "1000129" 
}
