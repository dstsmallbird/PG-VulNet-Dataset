digraph tftp_connect {  
"1000129" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000131" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000134" [label = "(<operator>.assignment,v5 = v4)" ]
"1000137" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000138" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000143" [label = "(<operator>.logicalNot,!v4)" ]
"1000145" [label = "(RETURN,return 27;,return 27;)" ]
"1000147" [label = "(<operator>.assignment,v7 = *(_DWORD *)(*a1 + 1576))" ]
"1000149" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000150" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000151" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000152" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000153" [label = "(<operator>.indirection,*a1)" ]
"1000160" [label = "(<operator>.greaterThan,(unsigned int)(v7 - 8) > 0xFFB0)" ]
"1000161" [label = "(<operator>.cast,(unsigned int)(v7 - 8))" ]
"1000162" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000163" [label = "(<operator>.subtraction,v7 - 8)" ]
"1000167" [label = "(RETURN,return 71;,return 71;)" ]
"1000171" [label = "(<operator>.assignment,v7 = 512)" ]
"1000175" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000176" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000177" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000178" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000179" [label = "(<operator>.addition,v4 + 328)" ]
"1000183" [label = "(<operator>.assignment,v8 = Curl_ccalloc(1, v7 + 4))" ]
"1000185" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000187" [label = "(<operator>.addition,v7 + 4)" ]
"1000190" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v8)" ]
"1000191" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000192" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000193" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000194" [label = "(<operator>.addition,v5 + 328)" ]
"1000199" [label = "(<operator>.logicalNot,!v8)" ]
"1000201" [label = "(RETURN,return 27;,return 27;)" ]
"1000204" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 332))" ]
"1000205" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000206" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000207" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000208" [label = "(<operator>.addition,v5 + 332)" ]
"1000212" [label = "(<operator>.assignment,v9 = Curl_ccalloc(1, v7 + 4))" ]
"1000214" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000216" [label = "(<operator>.addition,v7 + 4)" ]
"1000219" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v9)" ]
"1000220" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000221" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000222" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000223" [label = "(<operator>.addition,v5 + 332)" ]
"1000228" [label = "(<operator>.logicalNot,!v9)" ]
"1000230" [label = "(RETURN,return 27;,return 27;)" ]
"1000232" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000235" [label = "(<operator>.assignment,v10 = a1[105])" ]
"1000237" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000240" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000241" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000242" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000243" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000244" [label = "(<operator>.addition,v5 + 16)" ]
"1000248" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = v7)" ]
"1000249" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000250" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000251" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000252" [label = "(<operator>.addition,v5 + 320)" ]
"1000256" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = v10)" ]
"1000257" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000258" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000259" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000260" [label = "(<operator>.addition,v5 + 20)" ]
"1000264" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000265" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000266" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000267" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000270" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000271" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000272" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000273" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000274" [label = "(<operator>.addition,v5 + 8)" ]
"1000277" [label = "(<operator>.minus,-100)" ]
"1000279" [label = "(<operator>.assignment,v11 = a1[20])" ]
"1000281" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000284" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v7)" ]
"1000285" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000286" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000287" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000288" [label = "(<operator>.addition,v5 + 324)" ]
"1000292" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = *(_DWORD *)(v11 + 4))" ]
"1000293" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000294" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000295" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000296" [label = "(<operator>.addition,v5 + 52)" ]
"1000299" [label = "(<operator>.indirection,*(_DWORD *)(v11 + 4))" ]
"1000300" [label = "(<operator>.cast,(_DWORD *)(v11 + 4))" ]
"1000301" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000302" [label = "(<operator>.addition,v11 + 4)" ]
"1000305" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000308" [label = "(<operator>.equals,(*((_BYTE *)a1 + 591) & 2) == 0)" ]
"1000309" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000310" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000311" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000312" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000313" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000320" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000321" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000322" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000323" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000324" [label = "(<operator>.addition,v5 + 20)" ]
"1000327" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000328" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000329" [label = "(<operator>.addition,v5 + 52)" ]
"1000332" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000333" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000334" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000335" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000336" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000341" [label = "(<operator>.assignment,v12 = _errno_location())" ]
"1000343" [label = "(_errno_location,_errno_location())" ]
"1000344" [label = "(<operator>.assignment,v13 = *a1)" ]
"1000346" [label = "(<operator>.indirection,*a1)" ]
"1000348" [label = "(<operator>.assignment,v14 = (const char *)Curl_strerror(*v12, v15, 128))" ]
"1000350" [label = "(<operator>.cast,(const char *)Curl_strerror(*v12, v15, 128))" ]
"1000351" [label = "(UNKNOWN,const char *,const char *)" ]
"1000352" [label = "(Curl_strerror,Curl_strerror(*v12, v15, 128))" ]
"1000353" [label = "(<operator>.indirection,*v12)" ]
"1000357" [label = "(Curl_failf,Curl_failf(v13, \"bind() failed; %s\", v14))" ]
"1000361" [label = "(RETURN,return 7;,return 7;)" ]
"1000363" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 591) |= 2u)" ]
"1000364" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000365" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000366" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000367" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000371" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000372" [label = "(<operator>.indirection,*a1)" ]
"1000374" [label = "(<operator>.assignment,result = 0)" ]
"1000377" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000378" [label = "(<operator>.indirection,*a2)" ]
"1000381" [label = "(RETURN,return result;,return result;)" ]
"1000113" [label = "(METHOD,tftp_connect)" ]
"1000383" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000129" -> "1000134" 
  "1000131" -> "1000129" 
  "1000134" -> "1000138" 
  "1000137" -> "1000143" 
  "1000138" -> "1000137" 
  "1000143" -> "1000145" 
  "1000143" -> "1000151" 
  "1000145" -> "1000383" 
  "1000147" -> "1000162" 
  "1000147" -> "1000171" 
  "1000149" -> "1000147" 
  "1000150" -> "1000149" 
  "1000151" -> "1000153" 
  "1000152" -> "1000150" 
  "1000153" -> "1000152" 
  "1000160" -> "1000178" 
  "1000160" -> "1000167" 
  "1000161" -> "1000160" 
  "1000162" -> "1000163" 
  "1000163" -> "1000161" 
  "1000167" -> "1000383" 
  "1000171" -> "1000178" 
  "1000175" -> "1000207" 
  "1000175" -> "1000187" 
  "1000176" -> "1000175" 
  "1000177" -> "1000176" 
  "1000178" -> "1000179" 
  "1000179" -> "1000177" 
  "1000183" -> "1000193" 
  "1000185" -> "1000183" 
  "1000187" -> "1000185" 
  "1000190" -> "1000199" 
  "1000191" -> "1000190" 
  "1000192" -> "1000191" 
  "1000193" -> "1000194" 
  "1000194" -> "1000192" 
  "1000199" -> "1000207" 
  "1000199" -> "1000201" 
  "1000201" -> "1000383" 
  "1000204" -> "1000216" 
  "1000204" -> "1000232" 
  "1000205" -> "1000204" 
  "1000206" -> "1000205" 
  "1000207" -> "1000208" 
  "1000208" -> "1000206" 
  "1000212" -> "1000222" 
  "1000214" -> "1000212" 
  "1000216" -> "1000214" 
  "1000219" -> "1000228" 
  "1000220" -> "1000219" 
  "1000221" -> "1000220" 
  "1000222" -> "1000223" 
  "1000223" -> "1000221" 
  "1000228" -> "1000230" 
  "1000228" -> "1000232" 
  "1000230" -> "1000383" 
  "1000232" -> "1000237" 
  "1000235" -> "1000243" 
  "1000237" -> "1000235" 
  "1000240" -> "1000251" 
  "1000241" -> "1000240" 
  "1000242" -> "1000241" 
  "1000243" -> "1000244" 
  "1000244" -> "1000242" 
  "1000248" -> "1000259" 
  "1000249" -> "1000248" 
  "1000250" -> "1000249" 
  "1000251" -> "1000252" 
  "1000252" -> "1000250" 
  "1000256" -> "1000267" 
  "1000257" -> "1000256" 
  "1000258" -> "1000257" 
  "1000259" -> "1000260" 
  "1000260" -> "1000258" 
  "1000264" -> "1000273" 
  "1000265" -> "1000264" 
  "1000266" -> "1000265" 
  "1000267" -> "1000266" 
  "1000270" -> "1000281" 
  "1000271" -> "1000277" 
  "1000272" -> "1000271" 
  "1000273" -> "1000274" 
  "1000274" -> "1000272" 
  "1000277" -> "1000270" 
  "1000279" -> "1000287" 
  "1000281" -> "1000279" 
  "1000284" -> "1000295" 
  "1000285" -> "1000284" 
  "1000286" -> "1000285" 
  "1000287" -> "1000288" 
  "1000288" -> "1000286" 
  "1000292" -> "1000305" 
  "1000293" -> "1000301" 
  "1000294" -> "1000293" 
  "1000295" -> "1000296" 
  "1000296" -> "1000294" 
  "1000299" -> "1000292" 
  "1000300" -> "1000299" 
  "1000301" -> "1000302" 
  "1000302" -> "1000300" 
  "1000305" -> "1000313" 
  "1000308" -> "1000323" 
  "1000308" -> "1000372" 
  "1000309" -> "1000308" 
  "1000310" -> "1000309" 
  "1000311" -> "1000310" 
  "1000312" -> "1000311" 
  "1000313" -> "1000312" 
  "1000320" -> "1000367" 
  "1000320" -> "1000343" 
  "1000321" -> "1000328" 
  "1000322" -> "1000321" 
  "1000323" -> "1000324" 
  "1000324" -> "1000322" 
  "1000327" -> "1000334" 
  "1000328" -> "1000329" 
  "1000329" -> "1000327" 
  "1000332" -> "1000320" 
  "1000333" -> "1000332" 
  "1000334" -> "1000336" 
  "1000335" -> "1000333" 
  "1000336" -> "1000335" 
  "1000341" -> "1000346" 
  "1000343" -> "1000341" 
  "1000344" -> "1000351" 
  "1000346" -> "1000344" 
  "1000348" -> "1000357" 
  "1000350" -> "1000348" 
  "1000351" -> "1000353" 
  "1000352" -> "1000350" 
  "1000353" -> "1000352" 
  "1000357" -> "1000361" 
  "1000361" -> "1000383" 
  "1000363" -> "1000372" 
  "1000364" -> "1000363" 
  "1000365" -> "1000364" 
  "1000366" -> "1000365" 
  "1000367" -> "1000366" 
  "1000371" -> "1000374" 
  "1000372" -> "1000371" 
  "1000374" -> "1000378" 
  "1000377" -> "1000381" 
  "1000378" -> "1000377" 
  "1000381" -> "1000383" 
  "1000113" -> "1000131" 
}
