digraph tftp_connect {  
"1000127" [label = "(<operator>.assignment,v12 = __readgsdword(0x14u))" ]
"1000129" [label = "(__readgsdword,__readgsdword(0x14u))" ]
"1000131" [label = "(<operator>.assignment,v2 = Curl_ccalloc(1, 336))" ]
"1000133" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000136" [label = "(<operator>.assignment,a1[185] = v2)" ]
"1000137" [label = "(<operator>.indirectIndexAccess,a1[185])" ]
"1000142" [label = "(<operator>.logicalNot,!v2)" ]
"1000144" [label = "(RETURN,return 27;,return 27;)" ]
"1000146" [label = "(<operator>.assignment,v3 = v2)" ]
"1000149" [label = "(<operator>.assignment,v4 = *(_DWORD *)(*a1 + 1568))" ]
"1000151" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1568))" ]
"1000152" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1568))" ]
"1000153" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000154" [label = "(<operator>.addition,*a1 + 1568)" ]
"1000155" [label = "(<operator>.indirection,*a1)" ]
"1000161" [label = "(<operator>.assignment,result = 71)" ]
"1000165" [label = "(<operator>.greaterThan,(unsigned int)(v4 - 8) > 0xFFB0)" ]
"1000166" [label = "(<operator>.cast,(unsigned int)(v4 - 8))" ]
"1000167" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000168" [label = "(<operator>.subtraction,v4 - 8)" ]
"1000172" [label = "(RETURN,return result;,return result;)" ]
"1000176" [label = "(<operator>.assignment,v4 = 512)" ]
"1000180" [label = "(<operator>.logicalNot,!*(_DWORD *)(v3 + 328))" ]
"1000181" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 328))" ]
"1000182" [label = "(<operator>.cast,(_DWORD *)(v3 + 328))" ]
"1000183" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000184" [label = "(<operator>.addition,v3 + 328)" ]
"1000188" [label = "(<operator>.assignment,v5 = Curl_ccalloc(1, v4 + 4))" ]
"1000190" [label = "(Curl_ccalloc,Curl_ccalloc(1, v4 + 4))" ]
"1000192" [label = "(<operator>.addition,v4 + 4)" ]
"1000195" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 328) = v5)" ]
"1000196" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 328))" ]
"1000197" [label = "(<operator>.cast,(_DWORD *)(v3 + 328))" ]
"1000198" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000199" [label = "(<operator>.addition,v3 + 328)" ]
"1000204" [label = "(<operator>.logicalNot,!v5)" ]
"1000206" [label = "(RETURN,return 27;,return 27;)" ]
"1000209" [label = "(<operator>.logicalNot,!*(_DWORD *)(v3 + 332))" ]
"1000210" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 332))" ]
"1000211" [label = "(<operator>.cast,(_DWORD *)(v3 + 332))" ]
"1000212" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000213" [label = "(<operator>.addition,v3 + 332)" ]
"1000217" [label = "(<operator>.assignment,v6 = Curl_ccalloc(1, v4 + 4))" ]
"1000219" [label = "(Curl_ccalloc,Curl_ccalloc(1, v4 + 4))" ]
"1000221" [label = "(<operator>.addition,v4 + 4)" ]
"1000224" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 332) = v6)" ]
"1000225" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 332))" ]
"1000226" [label = "(<operator>.cast,(_DWORD *)(v3 + 332))" ]
"1000227" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000228" [label = "(<operator>.addition,v3 + 332)" ]
"1000233" [label = "(<operator>.logicalNot,!v6)" ]
"1000235" [label = "(RETURN,return 27;,return 27;)" ]
"1000237" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000240" [label = "(<operator>.assignment,v7 = a1[103])" ]
"1000242" [label = "(<operator>.indirectIndexAccess,a1[103])" ]
"1000245" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 16) = a1)" ]
"1000246" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 16))" ]
"1000247" [label = "(<operator>.cast,(_DWORD *)(v3 + 16))" ]
"1000248" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000249" [label = "(<operator>.addition,v3 + 16)" ]
"1000253" [label = "(<operator>.assignment,*(_DWORD *)v3 = 0)" ]
"1000254" [label = "(<operator>.indirection,*(_DWORD *)v3)" ]
"1000255" [label = "(<operator>.cast,(_DWORD *)v3)" ]
"1000256" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000259" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 8) = -100)" ]
"1000260" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 8))" ]
"1000261" [label = "(<operator>.cast,(_DWORD *)(v3 + 8))" ]
"1000262" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000263" [label = "(<operator>.addition,v3 + 8)" ]
"1000266" [label = "(<operator>.minus,-100)" ]
"1000268" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 320) = v4)" ]
"1000269" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 320))" ]
"1000270" [label = "(<operator>.cast,(_DWORD *)(v3 + 320))" ]
"1000271" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000272" [label = "(<operator>.addition,v3 + 320)" ]
"1000276" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 324) = v4)" ]
"1000277" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 324))" ]
"1000278" [label = "(<operator>.cast,(_DWORD *)(v3 + 324))" ]
"1000279" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000280" [label = "(<operator>.addition,v3 + 324)" ]
"1000284" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 20) = v7)" ]
"1000285" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 20))" ]
"1000286" [label = "(<operator>.cast,(_DWORD *)(v3 + 20))" ]
"1000287" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000288" [label = "(<operator>.addition,v3 + 20)" ]
"1000292" [label = "(<operator>.assignment,*(_WORD *)(v3 + 52) = *(_DWORD *)(a1[18] + 4))" ]
"1000293" [label = "(<operator>.indirection,*(_WORD *)(v3 + 52))" ]
"1000294" [label = "(<operator>.cast,(_WORD *)(v3 + 52))" ]
"1000295" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000296" [label = "(<operator>.addition,v3 + 52)" ]
"1000299" [label = "(<operator>.indirection,*(_DWORD *)(a1[18] + 4))" ]
"1000300" [label = "(<operator>.cast,(_DWORD *)(a1[18] + 4))" ]
"1000301" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000302" [label = "(<operator>.addition,a1[18] + 4)" ]
"1000303" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000307" [label = "(tftp_set_timeouts,tftp_set_timeouts())" ]
"1000309" [label = "(<operator>.notEquals,(*((_BYTE *)a1 + 583) & 2) != 0)" ]
"1000310" [label = "(<operator>.and,*((_BYTE *)a1 + 583) & 2)" ]
"1000311" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000312" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000313" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000314" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000321" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000322" [label = "(<operator>.indirection,*a1)" ]
"1000324" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000325" [label = "(<operator>.indirection,*a2)" ]
"1000328" [label = "(RETURN,return 0;,return 0;)" ]
"1000331" [label = "(<operator>.logicalNot,!bind(*(_DWORD *)(v3 + 20), (const struct sockaddr *)(v3 + 52), *(_DWORD *)(a1[18] + 16)))" ]
"1000332" [label = "(bind,bind(*(_DWORD *)(v3 + 20), (const struct sockaddr *)(v3 + 52), *(_DWORD *)(a1[18] + 16)))" ]
"1000333" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 20))" ]
"1000334" [label = "(<operator>.cast,(_DWORD *)(v3 + 20))" ]
"1000335" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000336" [label = "(<operator>.addition,v3 + 20)" ]
"1000339" [label = "(<operator>.cast,(const struct sockaddr *)(v3 + 52))" ]
"1000340" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000341" [label = "(<operator>.addition,v3 + 52)" ]
"1000344" [label = "(<operator>.indirection,*(_DWORD *)(a1[18] + 16))" ]
"1000345" [label = "(<operator>.cast,(_DWORD *)(a1[18] + 16))" ]
"1000346" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000347" [label = "(<operator>.addition,a1[18] + 16)" ]
"1000348" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000353" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 583) |= 2u)" ]
"1000354" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000355" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000356" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000357" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000362" [label = "(<operator>.assignment,v9 = __errno_location())" ]
"1000364" [label = "(__errno_location,__errno_location())" ]
"1000365" [label = "(<operator>.assignment,v10 = Curl_strerror(*v9, buf, 128))" ]
"1000367" [label = "(Curl_strerror,Curl_strerror(*v9, buf, 128))" ]
"1000368" [label = "(<operator>.indirection,*v9)" ]
"1000372" [label = "(Curl_failf,Curl_failf(*a1, \"bind() failed; %s\", v10))" ]
"1000373" [label = "(<operator>.indirection,*a1)" ]
"1000377" [label = "(RETURN,return 7;,return 7;)" ]
"1000112" [label = "(METHOD,tftp_connect)" ]
"1000379" [label = "(METHOD_RETURN,int __cdecl)" ]
  "1000127" -> "1000133" 
  "1000129" -> "1000127" 
  "1000131" -> "1000137" 
  "1000133" -> "1000131" 
  "1000136" -> "1000142" 
  "1000137" -> "1000136" 
  "1000142" -> "1000144" 
  "1000142" -> "1000146" 
  "1000144" -> "1000379" 
  "1000146" -> "1000153" 
  "1000149" -> "1000161" 
  "1000149" -> "1000176" 
  "1000151" -> "1000149" 
  "1000152" -> "1000151" 
  "1000153" -> "1000155" 
  "1000154" -> "1000152" 
  "1000155" -> "1000154" 
  "1000161" -> "1000167" 
  "1000165" -> "1000183" 
  "1000165" -> "1000172" 
  "1000166" -> "1000165" 
  "1000167" -> "1000168" 
  "1000168" -> "1000166" 
  "1000172" -> "1000379" 
  "1000176" -> "1000183" 
  "1000180" -> "1000212" 
  "1000180" -> "1000192" 
  "1000181" -> "1000180" 
  "1000182" -> "1000181" 
  "1000183" -> "1000184" 
  "1000184" -> "1000182" 
  "1000188" -> "1000198" 
  "1000190" -> "1000188" 
  "1000192" -> "1000190" 
  "1000195" -> "1000204" 
  "1000196" -> "1000195" 
  "1000197" -> "1000196" 
  "1000198" -> "1000199" 
  "1000199" -> "1000197" 
  "1000204" -> "1000212" 
  "1000204" -> "1000206" 
  "1000206" -> "1000379" 
  "1000209" -> "1000221" 
  "1000209" -> "1000237" 
  "1000210" -> "1000209" 
  "1000211" -> "1000210" 
  "1000212" -> "1000213" 
  "1000213" -> "1000211" 
  "1000217" -> "1000227" 
  "1000219" -> "1000217" 
  "1000221" -> "1000219" 
  "1000224" -> "1000233" 
  "1000225" -> "1000224" 
  "1000226" -> "1000225" 
  "1000227" -> "1000228" 
  "1000228" -> "1000226" 
  "1000233" -> "1000235" 
  "1000233" -> "1000237" 
  "1000235" -> "1000379" 
  "1000237" -> "1000242" 
  "1000240" -> "1000248" 
  "1000242" -> "1000240" 
  "1000245" -> "1000256" 
  "1000246" -> "1000245" 
  "1000247" -> "1000246" 
  "1000248" -> "1000249" 
  "1000249" -> "1000247" 
  "1000253" -> "1000262" 
  "1000254" -> "1000253" 
  "1000255" -> "1000254" 
  "1000256" -> "1000255" 
  "1000259" -> "1000271" 
  "1000260" -> "1000266" 
  "1000261" -> "1000260" 
  "1000262" -> "1000263" 
  "1000263" -> "1000261" 
  "1000266" -> "1000259" 
  "1000268" -> "1000279" 
  "1000269" -> "1000268" 
  "1000270" -> "1000269" 
  "1000271" -> "1000272" 
  "1000272" -> "1000270" 
  "1000276" -> "1000287" 
  "1000277" -> "1000276" 
  "1000278" -> "1000277" 
  "1000279" -> "1000280" 
  "1000280" -> "1000278" 
  "1000284" -> "1000295" 
  "1000285" -> "1000284" 
  "1000286" -> "1000285" 
  "1000287" -> "1000288" 
  "1000288" -> "1000286" 
  "1000292" -> "1000307" 
  "1000293" -> "1000301" 
  "1000294" -> "1000293" 
  "1000295" -> "1000296" 
  "1000296" -> "1000294" 
  "1000299" -> "1000292" 
  "1000300" -> "1000299" 
  "1000301" -> "1000303" 
  "1000302" -> "1000300" 
  "1000303" -> "1000302" 
  "1000307" -> "1000314" 
  "1000309" -> "1000335" 
  "1000309" -> "1000322" 
  "1000310" -> "1000309" 
  "1000311" -> "1000310" 
  "1000312" -> "1000311" 
  "1000313" -> "1000312" 
  "1000314" -> "1000313" 
  "1000321" -> "1000325" 
  "1000322" -> "1000321" 
  "1000324" -> "1000328" 
  "1000325" -> "1000324" 
  "1000328" -> "1000379" 
  "1000331" -> "1000357" 
  "1000331" -> "1000364" 
  "1000332" -> "1000331" 
  "1000333" -> "1000340" 
  "1000334" -> "1000333" 
  "1000335" -> "1000336" 
  "1000336" -> "1000334" 
  "1000339" -> "1000346" 
  "1000340" -> "1000341" 
  "1000341" -> "1000339" 
  "1000344" -> "1000332" 
  "1000345" -> "1000344" 
  "1000346" -> "1000348" 
  "1000347" -> "1000345" 
  "1000348" -> "1000347" 
  "1000353" -> "1000322" 
  "1000354" -> "1000353" 
  "1000355" -> "1000354" 
  "1000356" -> "1000355" 
  "1000357" -> "1000356" 
  "1000362" -> "1000368" 
  "1000364" -> "1000362" 
  "1000365" -> "1000373" 
  "1000367" -> "1000365" 
  "1000368" -> "1000367" 
  "1000372" -> "1000377" 
  "1000373" -> "1000372" 
  "1000377" -> "1000379" 
  "1000112" -> "1000129" 
}
