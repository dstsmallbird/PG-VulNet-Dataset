digraph tftp_connect {  
"1000131" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000133" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000136" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000137" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000142" [label = "(<operator>.logicalNot,!v4)" ]
"1000144" [label = "(RETURN,return 27;,return 27;)" ]
"1000146" [label = "(<operator>.assignment,v5 = v4)" ]
"1000149" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000151" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000152" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000153" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000154" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000155" [label = "(<operator>.indirection,*a1)" ]
"1000161" [label = "(<operator>.assignment,v7 = 71)" ]
"1000165" [label = "(<operator>.greaterThan,(unsigned int)(v6 - 8) > 0xFFB0)" ]
"1000166" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000167" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000168" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000172" [label = "(RETURN,return v7;,return v7;)" ]
"1000174" [label = "(<operator>.assignment,v8 = *(_DWORD *)(*a1 + 1576))" ]
"1000176" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000177" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000178" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000179" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000180" [label = "(<operator>.indirection,*a1)" ]
"1000184" [label = "(<operator>.lessEqualsThan,v6 <= 512)" ]
"1000187" [label = "(<operator>.assignment,v8 = 512)" ]
"1000190" [label = "(<operator>.assignment,v9 = v8 + 4)" ]
"1000192" [label = "(<operator>.addition,v8 + 4)" ]
"1000197" [label = "(<operator>.assignment,v9 = 516)" ]
"1000200" [label = "(<operator>.assignment,v6 = 512)" ]
"1000204" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 328))" ]
"1000205" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000206" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000207" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000208" [label = "(<operator>.addition,v5 + 328)" ]
"1000212" [label = "(<operator>.assignment,v10 = Curl_ccalloc(1, v9))" ]
"1000214" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9))" ]
"1000217" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v10)" ]
"1000218" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000219" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000220" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000221" [label = "(<operator>.addition,v5 + 328)" ]
"1000226" [label = "(<operator>.logicalNot,!v10)" ]
"1000228" [label = "(RETURN,return 27;,return 27;)" ]
"1000231" [label = "(<operator>.logicalOr,*(_DWORD *)(v5 + 332) || (v11 = Curl_ccalloc(1, v9), v7 = 27, (*(_DWORD *)(v5 + 332) = v11) != 0))" ]
"1000232" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000233" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000234" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000235" [label = "(<operator>.addition,v5 + 332)" ]
"1000239" [label = "(<operator>.assignment,v11 = Curl_ccalloc(1, v9))" ]
"1000241" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9))" ]
"1000245" [label = "(<operator>.assignment,v7 = 27)" ]
"1000248" [label = "(<operator>.notEquals,(*(_DWORD *)(v5 + 332) = v11) != 0)" ]
"1000249" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v11)" ]
"1000250" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000251" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000252" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000253" [label = "(<operator>.addition,v5 + 332)" ]
"1000259" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000262" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000263" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000264" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000265" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000266" [label = "(<operator>.addition,v5 + 16)" ]
"1000270" [label = "(<operator>.assignment,v7 = 0)" ]
"1000273" [label = "(<operator>.assignment,v12 = a1[105])" ]
"1000275" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000278" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = 512)" ]
"1000279" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000280" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000281" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000282" [label = "(<operator>.addition,v5 + 320)" ]
"1000286" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v6)" ]
"1000287" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000288" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000289" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000290" [label = "(<operator>.addition,v5 + 324)" ]
"1000294" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000295" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000296" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000297" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000298" [label = "(<operator>.addition,v5 + 8)" ]
"1000301" [label = "(<operator>.minus,-100)" ]
"1000303" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000304" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000305" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000306" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000309" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = v12)" ]
"1000310" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000311" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000312" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000313" [label = "(<operator>.addition,v5 + 20)" ]
"1000317" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000318" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000319" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000320" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000321" [label = "(<operator>.addition,v5 + 52)" ]
"1000324" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000325" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000326" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000327" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000328" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000332" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000335" [label = "(<operator>.equals,(*((_BYTE *)a1 + 591) & 2) == 0)" ]
"1000336" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000337" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000338" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000339" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000340" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000347" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000348" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000349" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000350" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000351" [label = "(<operator>.addition,v5 + 20)" ]
"1000354" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000355" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000356" [label = "(<operator>.addition,v5 + 52)" ]
"1000359" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000360" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000361" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000362" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000363" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000368" [label = "(<operator>.assignment,v13 = *a1)" ]
"1000370" [label = "(<operator>.indirection,*a1)" ]
"1000372" [label = "(<operator>.assignment,v14 = _errno_location())" ]
"1000374" [label = "(_errno_location,_errno_location())" ]
"1000375" [label = "(<operator>.assignment,v15 = (const char *)Curl_strerror(*v14, &v17, 128))" ]
"1000377" [label = "(<operator>.cast,(const char *)Curl_strerror(*v14, &v17, 128))" ]
"1000378" [label = "(UNKNOWN,const char *,const char *)" ]
"1000379" [label = "(Curl_strerror,Curl_strerror(*v14, &v17, 128))" ]
"1000380" [label = "(<operator>.indirection,*v14)" ]
"1000382" [label = "(<operator>.addressOf,&v17)" ]
"1000385" [label = "(Curl_failf,Curl_failf(v13, \"bind() failed; %s\", v15))" ]
"1000389" [label = "(RETURN,return 7;,return 7;)" ]
"1000391" [label = "(<operators>.assignmentOr,a1[147] |= 0x2000000u)" ]
"1000392" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000396" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000397" [label = "(<operator>.indirection,*a1)" ]
"1000399" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000400" [label = "(<operator>.indirection,*a2)" ]
"1000403" [label = "(RETURN,return v7;,return v7;)" ]
"1000114" [label = "(METHOD,tftp_connect)" ]
"1000405" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000131" -> "1000137" 
  "1000133" -> "1000131" 
  "1000136" -> "1000142" 
  "1000137" -> "1000136" 
  "1000142" -> "1000144" 
  "1000142" -> "1000146" 
  "1000144" -> "1000405" 
  "1000146" -> "1000153" 
  "1000149" -> "1000161" 
  "1000149" -> "1000197" 
  "1000151" -> "1000149" 
  "1000152" -> "1000151" 
  "1000153" -> "1000155" 
  "1000154" -> "1000152" 
  "1000155" -> "1000154" 
  "1000161" -> "1000167" 
  "1000165" -> "1000172" 
  "1000165" -> "1000178" 
  "1000166" -> "1000165" 
  "1000167" -> "1000168" 
  "1000168" -> "1000166" 
  "1000172" -> "1000405" 
  "1000174" -> "1000184" 
  "1000176" -> "1000174" 
  "1000177" -> "1000176" 
  "1000178" -> "1000180" 
  "1000179" -> "1000177" 
  "1000180" -> "1000179" 
  "1000184" -> "1000187" 
  "1000184" -> "1000192" 
  "1000187" -> "1000192" 
  "1000190" -> "1000207" 
  "1000192" -> "1000190" 
  "1000197" -> "1000200" 
  "1000200" -> "1000207" 
  "1000204" -> "1000234" 
  "1000204" -> "1000214" 
  "1000205" -> "1000204" 
  "1000206" -> "1000205" 
  "1000207" -> "1000208" 
  "1000208" -> "1000206" 
  "1000212" -> "1000220" 
  "1000214" -> "1000212" 
  "1000217" -> "1000226" 
  "1000218" -> "1000217" 
  "1000219" -> "1000218" 
  "1000220" -> "1000221" 
  "1000221" -> "1000219" 
  "1000226" -> "1000234" 
  "1000226" -> "1000228" 
  "1000228" -> "1000405" 
  "1000231" -> "1000259" 
  "1000231" -> "1000403" 
  "1000232" -> "1000231" 
  "1000232" -> "1000241" 
  "1000233" -> "1000232" 
  "1000234" -> "1000235" 
  "1000235" -> "1000233" 
  "1000239" -> "1000245" 
  "1000241" -> "1000239" 
  "1000245" -> "1000252" 
  "1000248" -> "1000231" 
  "1000249" -> "1000248" 
  "1000250" -> "1000249" 
  "1000251" -> "1000250" 
  "1000252" -> "1000253" 
  "1000253" -> "1000251" 
  "1000259" -> "1000265" 
  "1000262" -> "1000270" 
  "1000263" -> "1000262" 
  "1000264" -> "1000263" 
  "1000265" -> "1000266" 
  "1000266" -> "1000264" 
  "1000270" -> "1000275" 
  "1000273" -> "1000281" 
  "1000275" -> "1000273" 
  "1000278" -> "1000289" 
  "1000279" -> "1000278" 
  "1000280" -> "1000279" 
  "1000281" -> "1000282" 
  "1000282" -> "1000280" 
  "1000286" -> "1000297" 
  "1000287" -> "1000286" 
  "1000288" -> "1000287" 
  "1000289" -> "1000290" 
  "1000290" -> "1000288" 
  "1000294" -> "1000306" 
  "1000295" -> "1000301" 
  "1000296" -> "1000295" 
  "1000297" -> "1000298" 
  "1000298" -> "1000296" 
  "1000301" -> "1000294" 
  "1000303" -> "1000312" 
  "1000304" -> "1000303" 
  "1000305" -> "1000304" 
  "1000306" -> "1000305" 
  "1000309" -> "1000320" 
  "1000310" -> "1000309" 
  "1000311" -> "1000310" 
  "1000312" -> "1000313" 
  "1000313" -> "1000311" 
  "1000317" -> "1000332" 
  "1000318" -> "1000326" 
  "1000319" -> "1000318" 
  "1000320" -> "1000321" 
  "1000321" -> "1000319" 
  "1000324" -> "1000317" 
  "1000325" -> "1000324" 
  "1000326" -> "1000328" 
  "1000327" -> "1000325" 
  "1000328" -> "1000327" 
  "1000332" -> "1000340" 
  "1000335" -> "1000350" 
  "1000335" -> "1000397" 
  "1000336" -> "1000335" 
  "1000337" -> "1000336" 
  "1000338" -> "1000337" 
  "1000339" -> "1000338" 
  "1000340" -> "1000339" 
  "1000347" -> "1000370" 
  "1000347" -> "1000392" 
  "1000348" -> "1000355" 
  "1000349" -> "1000348" 
  "1000350" -> "1000351" 
  "1000351" -> "1000349" 
  "1000354" -> "1000361" 
  "1000355" -> "1000356" 
  "1000356" -> "1000354" 
  "1000359" -> "1000347" 
  "1000360" -> "1000359" 
  "1000361" -> "1000363" 
  "1000362" -> "1000360" 
  "1000363" -> "1000362" 
  "1000368" -> "1000374" 
  "1000370" -> "1000368" 
  "1000372" -> "1000378" 
  "1000374" -> "1000372" 
  "1000375" -> "1000385" 
  "1000377" -> "1000375" 
  "1000378" -> "1000380" 
  "1000379" -> "1000377" 
  "1000380" -> "1000382" 
  "1000382" -> "1000379" 
  "1000385" -> "1000389" 
  "1000389" -> "1000405" 
  "1000391" -> "1000397" 
  "1000392" -> "1000391" 
  "1000396" -> "1000400" 
  "1000397" -> "1000396" 
  "1000399" -> "1000403" 
  "1000400" -> "1000399" 
  "1000403" -> "1000405" 
  "1000114" -> "1000133" 
}
