digraph tftp_connect {  
"1000135" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000137" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000140" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000141" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000146" [label = "(<operator>.logicalNot,!v4)" ]
"1000148" [label = "(RETURN,return 27;,return 27;)" ]
"1000150" [label = "(<operator>.assignment,v5 = v4)" ]
"1000153" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000155" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000156" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000157" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000158" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000159" [label = "(<operator>.indirection,*a1)" ]
"1000166" [label = "(<operator>.greaterThan,(unsigned int)(v6 - 8) > 0xFFB0)" ]
"1000167" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000168" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000169" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000173" [label = "(RETURN,return 71;,return 71;)" ]
"1000175" [label = "(<operator>.assignment,v8 = *(_DWORD *)(*a1 + 1576))" ]
"1000177" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000178" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000179" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000180" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000181" [label = "(<operator>.indirection,*a1)" ]
"1000184" [label = "(<operator>.assignment,v7 = v8)" ]
"1000188" [label = "(<operator>.lessThan,v6 < 512)" ]
"1000191" [label = "(<operator>.assignment,v8 = 512)" ]
"1000196" [label = "(<operator>.assignment,v7 = 512)" ]
"1000199" [label = "(<operator>.assignment,v8 = 512)" ]
"1000203" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000204" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000205" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000206" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000207" [label = "(<operator>.addition,v4 + 328)" ]
"1000211" [label = "(<operator>.assignment,v13 = Curl_ccalloc(1, v8 + 4))" ]
"1000213" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000215" [label = "(<operator>.addition,v8 + 4)" ]
"1000218" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v13)" ]
"1000219" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000220" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000221" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000222" [label = "(<operator>.addition,v5 + 328)" ]
"1000227" [label = "(<operator>.logicalNot,!v13)" ]
"1000229" [label = "(RETURN,return 27;,return 27;)" ]
"1000232" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 332))" ]
"1000233" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000234" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000235" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000236" [label = "(<operator>.addition,v5 + 332)" ]
"1000240" [label = "(<operator>.assignment,v17 = Curl_ccalloc(1, v8 + 4))" ]
"1000242" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000244" [label = "(<operator>.addition,v8 + 4)" ]
"1000247" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v17)" ]
"1000248" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000249" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000250" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000251" [label = "(<operator>.addition,v5 + 332)" ]
"1000256" [label = "(<operator>.logicalNot,!v17)" ]
"1000258" [label = "(RETURN,return 27;,return 27;)" ]
"1000260" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000263" [label = "(<operator>.assignment,v9 = a1[20])" ]
"1000265" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000268" [label = "(<operator>.assignment,v10 = a1[105])" ]
"1000270" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000273" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000274" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000275" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000276" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000277" [label = "(<operator>.addition,v5 + 16)" ]
"1000281" [label = "(<operator>.assignment,v11 = *(_DWORD *)(v9 + 4))" ]
"1000283" [label = "(<operator>.indirection,*(_DWORD *)(v9 + 4))" ]
"1000284" [label = "(<operator>.cast,(_DWORD *)(v9 + 4))" ]
"1000285" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000286" [label = "(<operator>.addition,v9 + 4)" ]
"1000289" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = v10)" ]
"1000290" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000291" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000292" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000293" [label = "(<operator>.addition,v5 + 20)" ]
"1000297" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v7)" ]
"1000298" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000299" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000300" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000301" [label = "(<operator>.addition,v5 + 324)" ]
"1000305" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = v11)" ]
"1000306" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000307" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000308" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000309" [label = "(<operator>.addition,v5 + 52)" ]
"1000313" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = 512)" ]
"1000314" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000315" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000316" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000317" [label = "(<operator>.addition,v5 + 320)" ]
"1000321" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000322" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000323" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000324" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000327" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000328" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000329" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000330" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000331" [label = "(<operator>.addition,v5 + 8)" ]
"1000334" [label = "(<operator>.minus,-100)" ]
"1000336" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000339" [label = "(<operator>.notEquals,(*((_BYTE *)a1 + 591) & 2) != 0)" ]
"1000340" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000341" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000342" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000343" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000344" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000351" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000352" [label = "(<operator>.indirection,*a1)" ]
"1000354" [label = "(<operator>.assignment,result = 0)" ]
"1000357" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000358" [label = "(<operator>.indirection,*a2)" ]
"1000361" [label = "(RETURN,return result;,return result;)" ]
"1000364" [label = "(<operator>.logicalNot,!bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000365" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000366" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000367" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000368" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000369" [label = "(<operator>.addition,v5 + 20)" ]
"1000372" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000373" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000374" [label = "(<operator>.addition,v5 + 52)" ]
"1000377" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000378" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000379" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000380" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000381" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000386" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 591) |= 2u)" ]
"1000387" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000388" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000389" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000390" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000395" [label = "(<operator>.assignment,v14 = _errno_location())" ]
"1000397" [label = "(_errno_location,_errno_location())" ]
"1000398" [label = "(<operator>.assignment,v15 = *a1)" ]
"1000400" [label = "(<operator>.indirection,*a1)" ]
"1000402" [label = "(<operator>.assignment,v16 = (const char *)Curl_strerror(*v14, v18, 128))" ]
"1000404" [label = "(<operator>.cast,(const char *)Curl_strerror(*v14, v18, 128))" ]
"1000405" [label = "(UNKNOWN,const char *,const char *)" ]
"1000406" [label = "(Curl_strerror,Curl_strerror(*v14, v18, 128))" ]
"1000407" [label = "(<operator>.indirection,*v14)" ]
"1000411" [label = "(Curl_failf,Curl_failf(v15, \"bind() failed; %s\", v16))" ]
"1000415" [label = "(RETURN,return 7;,return 7;)" ]
"1000116" [label = "(METHOD,tftp_connect)" ]
"1000417" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000135" -> "1000141" 
  "1000137" -> "1000135" 
  "1000140" -> "1000146" 
  "1000141" -> "1000140" 
  "1000146" -> "1000148" 
  "1000146" -> "1000150" 
  "1000148" -> "1000417" 
  "1000150" -> "1000157" 
  "1000153" -> "1000168" 
  "1000153" -> "1000196" 
  "1000155" -> "1000153" 
  "1000156" -> "1000155" 
  "1000157" -> "1000159" 
  "1000158" -> "1000156" 
  "1000159" -> "1000158" 
  "1000166" -> "1000173" 
  "1000166" -> "1000179" 
  "1000167" -> "1000166" 
  "1000168" -> "1000169" 
  "1000169" -> "1000167" 
  "1000173" -> "1000417" 
  "1000175" -> "1000184" 
  "1000177" -> "1000175" 
  "1000178" -> "1000177" 
  "1000179" -> "1000181" 
  "1000180" -> "1000178" 
  "1000181" -> "1000180" 
  "1000184" -> "1000188" 
  "1000188" -> "1000206" 
  "1000188" -> "1000191" 
  "1000191" -> "1000206" 
  "1000196" -> "1000199" 
  "1000199" -> "1000206" 
  "1000203" -> "1000235" 
  "1000203" -> "1000215" 
  "1000204" -> "1000203" 
  "1000205" -> "1000204" 
  "1000206" -> "1000207" 
  "1000207" -> "1000205" 
  "1000211" -> "1000221" 
  "1000213" -> "1000211" 
  "1000215" -> "1000213" 
  "1000218" -> "1000227" 
  "1000219" -> "1000218" 
  "1000220" -> "1000219" 
  "1000221" -> "1000222" 
  "1000222" -> "1000220" 
  "1000227" -> "1000235" 
  "1000227" -> "1000229" 
  "1000229" -> "1000417" 
  "1000232" -> "1000244" 
  "1000232" -> "1000260" 
  "1000233" -> "1000232" 
  "1000234" -> "1000233" 
  "1000235" -> "1000236" 
  "1000236" -> "1000234" 
  "1000240" -> "1000250" 
  "1000242" -> "1000240" 
  "1000244" -> "1000242" 
  "1000247" -> "1000256" 
  "1000248" -> "1000247" 
  "1000249" -> "1000248" 
  "1000250" -> "1000251" 
  "1000251" -> "1000249" 
  "1000256" -> "1000258" 
  "1000256" -> "1000260" 
  "1000258" -> "1000417" 
  "1000260" -> "1000265" 
  "1000263" -> "1000270" 
  "1000265" -> "1000263" 
  "1000268" -> "1000276" 
  "1000270" -> "1000268" 
  "1000273" -> "1000285" 
  "1000274" -> "1000273" 
  "1000275" -> "1000274" 
  "1000276" -> "1000277" 
  "1000277" -> "1000275" 
  "1000281" -> "1000292" 
  "1000283" -> "1000281" 
  "1000284" -> "1000283" 
  "1000285" -> "1000286" 
  "1000286" -> "1000284" 
  "1000289" -> "1000300" 
  "1000290" -> "1000289" 
  "1000291" -> "1000290" 
  "1000292" -> "1000293" 
  "1000293" -> "1000291" 
  "1000297" -> "1000308" 
  "1000298" -> "1000297" 
  "1000299" -> "1000298" 
  "1000300" -> "1000301" 
  "1000301" -> "1000299" 
  "1000305" -> "1000316" 
  "1000306" -> "1000305" 
  "1000307" -> "1000306" 
  "1000308" -> "1000309" 
  "1000309" -> "1000307" 
  "1000313" -> "1000324" 
  "1000314" -> "1000313" 
  "1000315" -> "1000314" 
  "1000316" -> "1000317" 
  "1000317" -> "1000315" 
  "1000321" -> "1000330" 
  "1000322" -> "1000321" 
  "1000323" -> "1000322" 
  "1000324" -> "1000323" 
  "1000327" -> "1000336" 
  "1000328" -> "1000334" 
  "1000329" -> "1000328" 
  "1000330" -> "1000331" 
  "1000331" -> "1000329" 
  "1000334" -> "1000327" 
  "1000336" -> "1000344" 
  "1000339" -> "1000368" 
  "1000339" -> "1000352" 
  "1000340" -> "1000339" 
  "1000341" -> "1000340" 
  "1000342" -> "1000341" 
  "1000343" -> "1000342" 
  "1000344" -> "1000343" 
  "1000351" -> "1000354" 
  "1000352" -> "1000351" 
  "1000354" -> "1000358" 
  "1000357" -> "1000361" 
  "1000358" -> "1000357" 
  "1000361" -> "1000417" 
  "1000364" -> "1000390" 
  "1000364" -> "1000397" 
  "1000365" -> "1000364" 
  "1000366" -> "1000373" 
  "1000367" -> "1000366" 
  "1000368" -> "1000369" 
  "1000369" -> "1000367" 
  "1000372" -> "1000379" 
  "1000373" -> "1000374" 
  "1000374" -> "1000372" 
  "1000377" -> "1000365" 
  "1000378" -> "1000377" 
  "1000379" -> "1000381" 
  "1000380" -> "1000378" 
  "1000381" -> "1000380" 
  "1000386" -> "1000352" 
  "1000387" -> "1000386" 
  "1000388" -> "1000387" 
  "1000389" -> "1000388" 
  "1000390" -> "1000389" 
  "1000395" -> "1000400" 
  "1000397" -> "1000395" 
  "1000398" -> "1000405" 
  "1000400" -> "1000398" 
  "1000402" -> "1000411" 
  "1000404" -> "1000402" 
  "1000405" -> "1000407" 
  "1000406" -> "1000404" 
  "1000407" -> "1000406" 
  "1000411" -> "1000415" 
  "1000415" -> "1000417" 
  "1000116" -> "1000137" 
}
