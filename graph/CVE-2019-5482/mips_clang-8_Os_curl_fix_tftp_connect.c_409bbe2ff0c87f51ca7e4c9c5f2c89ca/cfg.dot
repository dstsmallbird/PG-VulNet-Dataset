digraph tftp_connect {  
"1000133" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000135" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000138" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000139" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000144" [label = "(<operator>.logicalNot,!v4)" ]
"1000146" [label = "(RETURN,return 27;,return 27;)" ]
"1000148" [label = "(<operator>.assignment,v5 = *(_DWORD *)(*a1 + 1576))" ]
"1000150" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000151" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000152" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000153" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000154" [label = "(<operator>.indirection,*a1)" ]
"1000157" [label = "(<operator>.assignment,v6 = v4)" ]
"1000163" [label = "(<operator>.assignment,result = 71)" ]
"1000167" [label = "(<operator>.greaterThan,(unsigned int)(v5 - 8) > 0xFFB0)" ]
"1000168" [label = "(<operator>.cast,(unsigned int)(v5 - 8))" ]
"1000169" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000170" [label = "(<operator>.subtraction,v5 - 8)" ]
"1000174" [label = "(RETURN,return result;,return result;)" ]
"1000176" [label = "(<operator>.assignment,v8 = 512)" ]
"1000180" [label = "(<operator>.greaterEqualsThan,v5 >= 513)" ]
"1000183" [label = "(<operator>.assignment,v8 = *(_DWORD *)(*a1 + 1576))" ]
"1000185" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000186" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000187" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000188" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000189" [label = "(<operator>.indirection,*a1)" ]
"1000192" [label = "(<operator>.assignment,v9 = v8 + 4)" ]
"1000194" [label = "(<operator>.addition,v8 + 4)" ]
"1000199" [label = "(<operator>.assignment,v9 = 516)" ]
"1000202" [label = "(<operator>.assignment,v5 = 512)" ]
"1000206" [label = "(<operator>.logicalNot,!*(_DWORD *)(v6 + 328))" ]
"1000207" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000208" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000209" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000210" [label = "(<operator>.addition,v6 + 328)" ]
"1000214" [label = "(<operator>.assignment,v10 = Curl_ccalloc(1, v9))" ]
"1000216" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9))" ]
"1000219" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 328) = v10)" ]
"1000220" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000221" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000222" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000223" [label = "(<operator>.addition,v6 + 328)" ]
"1000228" [label = "(<operator>.logicalNot,!v10)" ]
"1000230" [label = "(RETURN,return 27;,return 27;)" ]
"1000233" [label = "(<operator>.logicalOr,*(_DWORD *)(v6 + 332)\n    || (v11 = Curl_ccalloc(1, v9), *(_DWORD *)(v6 + 332) = v11, v12 = v11 == 0, result = 27, !v12))" ]
"1000234" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000235" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000236" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000237" [label = "(<operator>.addition,v6 + 332)" ]
"1000241" [label = "(<operator>.assignment,v11 = Curl_ccalloc(1, v9))" ]
"1000243" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9))" ]
"1000247" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 332) = v11)" ]
"1000248" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000249" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000250" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000251" [label = "(<operator>.addition,v6 + 332)" ]
"1000256" [label = "(<operator>.assignment,v12 = v11 == 0)" ]
"1000258" [label = "(<operator>.equals,v11 == 0)" ]
"1000262" [label = "(<operator>.assignment,result = 27)" ]
"1000265" [label = "(<operator>.logicalNot,!v12)" ]
"1000268" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000271" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 16) = a1)" ]
"1000272" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 16))" ]
"1000273" [label = "(<operator>.cast,(_DWORD *)(v6 + 16))" ]
"1000274" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000275" [label = "(<operator>.addition,v6 + 16)" ]
"1000279" [label = "(<operator>.assignment,v13 = a1[105])" ]
"1000281" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000284" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 324) = v5)" ]
"1000285" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 324))" ]
"1000286" [label = "(<operator>.cast,(_DWORD *)(v6 + 324))" ]
"1000287" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000288" [label = "(<operator>.addition,v6 + 324)" ]
"1000292" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 320) = 512)" ]
"1000293" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 320))" ]
"1000294" [label = "(<operator>.cast,(_DWORD *)(v6 + 320))" ]
"1000295" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000296" [label = "(<operator>.addition,v6 + 320)" ]
"1000300" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 8) = -100)" ]
"1000301" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 8))" ]
"1000302" [label = "(<operator>.cast,(_DWORD *)(v6 + 8))" ]
"1000303" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000304" [label = "(<operator>.addition,v6 + 8)" ]
"1000307" [label = "(<operator>.minus,-100)" ]
"1000309" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 20) = v13)" ]
"1000310" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000311" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000312" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000313" [label = "(<operator>.addition,v6 + 20)" ]
"1000317" [label = "(<operator>.assignment,*(_DWORD *)v6 = 0)" ]
"1000318" [label = "(<operator>.indirection,*(_DWORD *)v6)" ]
"1000319" [label = "(<operator>.cast,(_DWORD *)v6)" ]
"1000320" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000323" [label = "(<operator>.assignment,*(_WORD *)(v6 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000324" [label = "(<operator>.indirection,*(_WORD *)(v6 + 52))" ]
"1000325" [label = "(<operator>.cast,(_WORD *)(v6 + 52))" ]
"1000326" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000327" [label = "(<operator>.addition,v6 + 52)" ]
"1000330" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000331" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000332" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000333" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000334" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000338" [label = "(tftp_set_timeouts,tftp_set_timeouts(v6))" ]
"1000341" [label = "(<operator>.equals,(*((_BYTE *)a1 + 591) & 0x40) == 0)" ]
"1000342" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 0x40)" ]
"1000343" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000344" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000345" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000346" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000353" [label = "(bind,bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000354" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000355" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000356" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000357" [label = "(<operator>.addition,v6 + 20)" ]
"1000360" [label = "(<operator>.cast,(const struct sockaddr *)(v6 + 52))" ]
"1000361" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000362" [label = "(<operator>.addition,v6 + 52)" ]
"1000365" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000366" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000367" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000368" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000369" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000374" [label = "(<operator>.assignment,v14 = *a1)" ]
"1000376" [label = "(<operator>.indirection,*a1)" ]
"1000378" [label = "(<operator>.assignment,v15 = _errno_location())" ]
"1000380" [label = "(_errno_location,_errno_location())" ]
"1000381" [label = "(<operator>.assignment,v16 = (const char *)Curl_strerror(*v15, v17, 128))" ]
"1000383" [label = "(<operator>.cast,(const char *)Curl_strerror(*v15, v17, 128))" ]
"1000384" [label = "(UNKNOWN,const char *,const char *)" ]
"1000385" [label = "(Curl_strerror,Curl_strerror(*v15, v17, 128))" ]
"1000386" [label = "(<operator>.indirection,*v15)" ]
"1000390" [label = "(Curl_failf,Curl_failf(v14, \"bind() failed; %s\", v16))" ]
"1000394" [label = "(RETURN,return 7;,return 7;)" ]
"1000396" [label = "(<operators>.assignmentOr,a1[147] |= 0x40u)" ]
"1000397" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000401" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000402" [label = "(<operator>.indirection,*a1)" ]
"1000404" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000405" [label = "(<operator>.indirection,*a2)" ]
"1000408" [label = "(<operator>.assignment,result = 0)" ]
"1000411" [label = "(RETURN,return result;,return result;)" ]
"1000115" [label = "(METHOD,tftp_connect)" ]
"1000413" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000133" -> "1000139" 
  "1000135" -> "1000133" 
  "1000138" -> "1000144" 
  "1000139" -> "1000138" 
  "1000144" -> "1000146" 
  "1000144" -> "1000152" 
  "1000146" -> "1000413" 
  "1000148" -> "1000157" 
  "1000150" -> "1000148" 
  "1000151" -> "1000150" 
  "1000152" -> "1000154" 
  "1000153" -> "1000151" 
  "1000154" -> "1000153" 
  "1000157" -> "1000163" 
  "1000157" -> "1000199" 
  "1000163" -> "1000169" 
  "1000167" -> "1000174" 
  "1000167" -> "1000176" 
  "1000168" -> "1000167" 
  "1000169" -> "1000170" 
  "1000170" -> "1000168" 
  "1000174" -> "1000413" 
  "1000176" -> "1000180" 
  "1000180" -> "1000187" 
  "1000180" -> "1000194" 
  "1000183" -> "1000194" 
  "1000185" -> "1000183" 
  "1000186" -> "1000185" 
  "1000187" -> "1000189" 
  "1000188" -> "1000186" 
  "1000189" -> "1000188" 
  "1000192" -> "1000209" 
  "1000194" -> "1000192" 
  "1000199" -> "1000202" 
  "1000202" -> "1000209" 
  "1000206" -> "1000236" 
  "1000206" -> "1000216" 
  "1000207" -> "1000206" 
  "1000208" -> "1000207" 
  "1000209" -> "1000210" 
  "1000210" -> "1000208" 
  "1000214" -> "1000222" 
  "1000216" -> "1000214" 
  "1000219" -> "1000228" 
  "1000220" -> "1000219" 
  "1000221" -> "1000220" 
  "1000222" -> "1000223" 
  "1000223" -> "1000221" 
  "1000228" -> "1000236" 
  "1000228" -> "1000230" 
  "1000230" -> "1000413" 
  "1000233" -> "1000268" 
  "1000233" -> "1000411" 
  "1000234" -> "1000233" 
  "1000234" -> "1000243" 
  "1000235" -> "1000234" 
  "1000236" -> "1000237" 
  "1000237" -> "1000235" 
  "1000241" -> "1000250" 
  "1000243" -> "1000241" 
  "1000247" -> "1000258" 
  "1000248" -> "1000247" 
  "1000249" -> "1000248" 
  "1000250" -> "1000251" 
  "1000251" -> "1000249" 
  "1000256" -> "1000262" 
  "1000258" -> "1000256" 
  "1000262" -> "1000265" 
  "1000265" -> "1000233" 
  "1000268" -> "1000274" 
  "1000271" -> "1000281" 
  "1000272" -> "1000271" 
  "1000273" -> "1000272" 
  "1000274" -> "1000275" 
  "1000275" -> "1000273" 
  "1000279" -> "1000287" 
  "1000281" -> "1000279" 
  "1000284" -> "1000295" 
  "1000285" -> "1000284" 
  "1000286" -> "1000285" 
  "1000287" -> "1000288" 
  "1000288" -> "1000286" 
  "1000292" -> "1000303" 
  "1000293" -> "1000292" 
  "1000294" -> "1000293" 
  "1000295" -> "1000296" 
  "1000296" -> "1000294" 
  "1000300" -> "1000312" 
  "1000301" -> "1000307" 
  "1000302" -> "1000301" 
  "1000303" -> "1000304" 
  "1000304" -> "1000302" 
  "1000307" -> "1000300" 
  "1000309" -> "1000320" 
  "1000310" -> "1000309" 
  "1000311" -> "1000310" 
  "1000312" -> "1000313" 
  "1000313" -> "1000311" 
  "1000317" -> "1000326" 
  "1000318" -> "1000317" 
  "1000319" -> "1000318" 
  "1000320" -> "1000319" 
  "1000323" -> "1000338" 
  "1000324" -> "1000332" 
  "1000325" -> "1000324" 
  "1000326" -> "1000327" 
  "1000327" -> "1000325" 
  "1000330" -> "1000323" 
  "1000331" -> "1000330" 
  "1000332" -> "1000334" 
  "1000333" -> "1000331" 
  "1000334" -> "1000333" 
  "1000338" -> "1000346" 
  "1000341" -> "1000356" 
  "1000341" -> "1000402" 
  "1000342" -> "1000341" 
  "1000343" -> "1000342" 
  "1000344" -> "1000343" 
  "1000345" -> "1000344" 
  "1000346" -> "1000345" 
  "1000353" -> "1000376" 
  "1000353" -> "1000397" 
  "1000354" -> "1000361" 
  "1000355" -> "1000354" 
  "1000356" -> "1000357" 
  "1000357" -> "1000355" 
  "1000360" -> "1000367" 
  "1000361" -> "1000362" 
  "1000362" -> "1000360" 
  "1000365" -> "1000353" 
  "1000366" -> "1000365" 
  "1000367" -> "1000369" 
  "1000368" -> "1000366" 
  "1000369" -> "1000368" 
  "1000374" -> "1000380" 
  "1000376" -> "1000374" 
  "1000378" -> "1000384" 
  "1000380" -> "1000378" 
  "1000381" -> "1000390" 
  "1000383" -> "1000381" 
  "1000384" -> "1000386" 
  "1000385" -> "1000383" 
  "1000386" -> "1000385" 
  "1000390" -> "1000394" 
  "1000394" -> "1000413" 
  "1000396" -> "1000402" 
  "1000397" -> "1000396" 
  "1000401" -> "1000405" 
  "1000402" -> "1000401" 
  "1000404" -> "1000408" 
  "1000405" -> "1000404" 
  "1000408" -> "1000411" 
  "1000411" -> "1000413" 
  "1000115" -> "1000135" 
}
