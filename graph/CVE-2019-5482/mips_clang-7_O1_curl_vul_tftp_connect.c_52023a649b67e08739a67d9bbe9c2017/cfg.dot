digraph tftp_connect {  
"1000123" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000125" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000128" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000129" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000134" [label = "(<operator>.logicalNot,!v4)" ]
"1000136" [label = "(RETURN,return 27;,return 27;)" ]
"1000138" [label = "(<operator>.assignment,v5 = *(_DWORD *)(*a1 + 1576))" ]
"1000140" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000141" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000142" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000143" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000144" [label = "(<operator>.indirection,*a1)" ]
"1000147" [label = "(<operator>.assignment,v6 = v4)" ]
"1000153" [label = "(<operator>.assignment,result = 71)" ]
"1000157" [label = "(<operator>.greaterThan,(unsigned int)(v5 - 8) > 0xFFB0)" ]
"1000158" [label = "(<operator>.cast,(unsigned int)(v5 - 8))" ]
"1000159" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000160" [label = "(<operator>.subtraction,v5 - 8)" ]
"1000164" [label = "(RETURN,return result;,return result;)" ]
"1000167" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000168" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000169" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000170" [label = "(<operator>.addition,v6 + 328)" ]
"1000176" [label = "(<operator>.assignment,v5 = 512)" ]
"1000180" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000181" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000182" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000183" [label = "(<operator>.addition,v4 + 328)" ]
"1000187" [label = "(<operator>.assignment,v8 = Curl_ccalloc(1, v5 + 4))" ]
"1000189" [label = "(Curl_ccalloc,Curl_ccalloc(1, v5 + 4))" ]
"1000191" [label = "(<operator>.addition,v5 + 4)" ]
"1000194" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 328) = v8)" ]
"1000195" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000196" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000197" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000198" [label = "(<operator>.addition,v6 + 328)" ]
"1000203" [label = "(<operator>.logicalNot,!v8)" ]
"1000205" [label = "(RETURN,return 27;,return 27;)" ]
"1000209" [label = "(<operator>.logicalOr,*(_DWORD *)(v6 + 332)\n    || (v9 = Curl_ccalloc(1, v5 + 4), *(_DWORD *)(v6 + 332) = v9, v10 = v9 == 0, result = 27, !v10))" ]
"1000210" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000211" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000212" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000213" [label = "(<operator>.addition,v6 + 332)" ]
"1000217" [label = "(<operator>.assignment,v9 = Curl_ccalloc(1, v5 + 4))" ]
"1000219" [label = "(Curl_ccalloc,Curl_ccalloc(1, v5 + 4))" ]
"1000221" [label = "(<operator>.addition,v5 + 4)" ]
"1000225" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 332) = v9)" ]
"1000226" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000227" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000228" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000229" [label = "(<operator>.addition,v6 + 332)" ]
"1000234" [label = "(<operator>.assignment,v10 = v9 == 0)" ]
"1000236" [label = "(<operator>.equals,v9 == 0)" ]
"1000240" [label = "(<operator>.assignment,result = 27)" ]
"1000243" [label = "(<operator>.logicalNot,!v10)" ]
"1000246" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000249" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 16) = a1)" ]
"1000250" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 16))" ]
"1000251" [label = "(<operator>.cast,(_DWORD *)(v6 + 16))" ]
"1000252" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000253" [label = "(<operator>.addition,v6 + 16)" ]
"1000257" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 20) = a1[105])" ]
"1000258" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000259" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000260" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000261" [label = "(<operator>.addition,v6 + 20)" ]
"1000264" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000267" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 8) = -100)" ]
"1000268" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 8))" ]
"1000269" [label = "(<operator>.cast,(_DWORD *)(v6 + 8))" ]
"1000270" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000271" [label = "(<operator>.addition,v6 + 8)" ]
"1000274" [label = "(<operator>.minus,-100)" ]
"1000276" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 320) = v5)" ]
"1000277" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 320))" ]
"1000278" [label = "(<operator>.cast,(_DWORD *)(v6 + 320))" ]
"1000279" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000280" [label = "(<operator>.addition,v6 + 320)" ]
"1000284" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 324) = v5)" ]
"1000285" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 324))" ]
"1000286" [label = "(<operator>.cast,(_DWORD *)(v6 + 324))" ]
"1000287" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000288" [label = "(<operator>.addition,v6 + 324)" ]
"1000292" [label = "(<operator>.assignment,*(_DWORD *)v6 = 0)" ]
"1000293" [label = "(<operator>.indirection,*(_DWORD *)v6)" ]
"1000294" [label = "(<operator>.cast,(_DWORD *)v6)" ]
"1000295" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000298" [label = "(<operator>.assignment,*(_WORD *)(v6 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000299" [label = "(<operator>.indirection,*(_WORD *)(v6 + 52))" ]
"1000300" [label = "(<operator>.cast,(_WORD *)(v6 + 52))" ]
"1000301" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000302" [label = "(<operator>.addition,v6 + 52)" ]
"1000305" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000306" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000307" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000308" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000309" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000313" [label = "(tftp_set_timeouts,tftp_set_timeouts(v6))" ]
"1000316" [label = "(<operator>.equals,(*((_BYTE *)a1 + 591) & 0x40) == 0)" ]
"1000317" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 0x40)" ]
"1000318" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000319" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000320" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000321" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000328" [label = "(bind,bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000329" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000330" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000331" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000332" [label = "(<operator>.addition,v6 + 20)" ]
"1000335" [label = "(<operator>.cast,(const struct sockaddr *)(v6 + 52))" ]
"1000336" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000337" [label = "(<operator>.addition,v6 + 52)" ]
"1000340" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000341" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000342" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000343" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000344" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000349" [label = "(<operator>.assignment,v11 = *a1)" ]
"1000351" [label = "(<operator>.indirection,*a1)" ]
"1000353" [label = "(_errno_location,_errno_location())" ]
"1000354" [label = "(<operator>.assignment,v12 = (const char *)Curl_strerror())" ]
"1000356" [label = "(<operator>.cast,(const char *)Curl_strerror())" ]
"1000357" [label = "(UNKNOWN,const char *,const char *)" ]
"1000358" [label = "(Curl_strerror,Curl_strerror())" ]
"1000359" [label = "(Curl_failf,Curl_failf(v11, \"bind() failed; %s\", v12))" ]
"1000363" [label = "(RETURN,return 7;,return 7;)" ]
"1000365" [label = "(<operators>.assignmentOr,a1[147] |= 0x40u)" ]
"1000366" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000370" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000371" [label = "(<operator>.indirection,*a1)" ]
"1000373" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000374" [label = "(<operator>.indirection,*a2)" ]
"1000377" [label = "(<operator>.assignment,result = 0)" ]
"1000380" [label = "(RETURN,return result;,return result;)" ]
"1000110" [label = "(METHOD,tftp_connect)" ]
"1000382" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000123" -> "1000129" 
  "1000125" -> "1000123" 
  "1000128" -> "1000134" 
  "1000129" -> "1000128" 
  "1000134" -> "1000136" 
  "1000134" -> "1000142" 
  "1000136" -> "1000382" 
  "1000138" -> "1000147" 
  "1000140" -> "1000138" 
  "1000141" -> "1000140" 
  "1000142" -> "1000144" 
  "1000143" -> "1000141" 
  "1000144" -> "1000143" 
  "1000147" -> "1000153" 
  "1000147" -> "1000176" 
  "1000153" -> "1000159" 
  "1000157" -> "1000169" 
  "1000157" -> "1000164" 
  "1000158" -> "1000157" 
  "1000159" -> "1000160" 
  "1000160" -> "1000158" 
  "1000164" -> "1000382" 
  "1000167" -> "1000212" 
  "1000167" -> "1000191" 
  "1000168" -> "1000167" 
  "1000169" -> "1000170" 
  "1000170" -> "1000168" 
  "1000176" -> "1000182" 
  "1000180" -> "1000212" 
  "1000180" -> "1000191" 
  "1000181" -> "1000180" 
  "1000182" -> "1000183" 
  "1000183" -> "1000181" 
  "1000187" -> "1000197" 
  "1000189" -> "1000187" 
  "1000191" -> "1000189" 
  "1000194" -> "1000203" 
  "1000195" -> "1000194" 
  "1000196" -> "1000195" 
  "1000197" -> "1000198" 
  "1000198" -> "1000196" 
  "1000203" -> "1000205" 
  "1000203" -> "1000212" 
  "1000205" -> "1000382" 
  "1000209" -> "1000246" 
  "1000209" -> "1000380" 
  "1000210" -> "1000209" 
  "1000210" -> "1000221" 
  "1000211" -> "1000210" 
  "1000212" -> "1000213" 
  "1000213" -> "1000211" 
  "1000217" -> "1000228" 
  "1000219" -> "1000217" 
  "1000221" -> "1000219" 
  "1000225" -> "1000236" 
  "1000226" -> "1000225" 
  "1000227" -> "1000226" 
  "1000228" -> "1000229" 
  "1000229" -> "1000227" 
  "1000234" -> "1000240" 
  "1000236" -> "1000234" 
  "1000240" -> "1000243" 
  "1000243" -> "1000209" 
  "1000246" -> "1000252" 
  "1000249" -> "1000260" 
  "1000250" -> "1000249" 
  "1000251" -> "1000250" 
  "1000252" -> "1000253" 
  "1000253" -> "1000251" 
  "1000257" -> "1000270" 
  "1000258" -> "1000264" 
  "1000259" -> "1000258" 
  "1000260" -> "1000261" 
  "1000261" -> "1000259" 
  "1000264" -> "1000257" 
  "1000267" -> "1000279" 
  "1000268" -> "1000274" 
  "1000269" -> "1000268" 
  "1000270" -> "1000271" 
  "1000271" -> "1000269" 
  "1000274" -> "1000267" 
  "1000276" -> "1000287" 
  "1000277" -> "1000276" 
  "1000278" -> "1000277" 
  "1000279" -> "1000280" 
  "1000280" -> "1000278" 
  "1000284" -> "1000295" 
  "1000285" -> "1000284" 
  "1000286" -> "1000285" 
  "1000287" -> "1000288" 
  "1000288" -> "1000286" 
  "1000292" -> "1000301" 
  "1000293" -> "1000292" 
  "1000294" -> "1000293" 
  "1000295" -> "1000294" 
  "1000298" -> "1000313" 
  "1000299" -> "1000307" 
  "1000300" -> "1000299" 
  "1000301" -> "1000302" 
  "1000302" -> "1000300" 
  "1000305" -> "1000298" 
  "1000306" -> "1000305" 
  "1000307" -> "1000309" 
  "1000308" -> "1000306" 
  "1000309" -> "1000308" 
  "1000313" -> "1000321" 
  "1000316" -> "1000331" 
  "1000316" -> "1000371" 
  "1000317" -> "1000316" 
  "1000318" -> "1000317" 
  "1000319" -> "1000318" 
  "1000320" -> "1000319" 
  "1000321" -> "1000320" 
  "1000328" -> "1000351" 
  "1000328" -> "1000366" 
  "1000329" -> "1000336" 
  "1000330" -> "1000329" 
  "1000331" -> "1000332" 
  "1000332" -> "1000330" 
  "1000335" -> "1000342" 
  "1000336" -> "1000337" 
  "1000337" -> "1000335" 
  "1000340" -> "1000328" 
  "1000341" -> "1000340" 
  "1000342" -> "1000344" 
  "1000343" -> "1000341" 
  "1000344" -> "1000343" 
  "1000349" -> "1000353" 
  "1000351" -> "1000349" 
  "1000353" -> "1000357" 
  "1000354" -> "1000359" 
  "1000356" -> "1000354" 
  "1000357" -> "1000358" 
  "1000358" -> "1000356" 
  "1000359" -> "1000363" 
  "1000363" -> "1000382" 
  "1000365" -> "1000371" 
  "1000366" -> "1000365" 
  "1000370" -> "1000374" 
  "1000371" -> "1000370" 
  "1000373" -> "1000377" 
  "1000374" -> "1000373" 
  "1000377" -> "1000380" 
  "1000380" -> "1000382" 
  "1000110" -> "1000125" 
}
