digraph tftp_connect {  
"1000129" [label = "(<operator>.assignment,a1[148] = v4)" ]
"1000130" [label = "(<operator>.indirectIndexAccess,a1[148])" ]
"1000135" [label = "(<operator>.logicalNot,!v4)" ]
"1000138" [label = "(<operator>.assignment,v5 = v4)" ]
"1000146" [label = "(<operator>.greaterThan,(unsigned int)(v6 - 8) > 0xFFB0)" ]
"1000147" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000148" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000149" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000153" [label = "(RETURN,return result;,return result;)" ]
"1000156" [label = "(<operator>.lessThan,(int)v6 < 512)" ]
"1000157" [label = "(<operator>.cast,(int)v6)" ]
"1000158" [label = "(UNKNOWN,int,int)" ]
"1000161" [label = "(<operator>.assignment,v9 = 512)" ]
"1000167" [label = "(<operator>.assignment,v7 = 512)" ]
"1000170" [label = "(<operator>.assignment,v9 = 512)" ]
"1000174" [label = "(<operator>.logicalNot,!*(_QWORD *)(v5 + 352))" ]
"1000175" [label = "(<operator>.indirection,*(_QWORD *)(v5 + 352))" ]
"1000176" [label = "(<operator>.cast,(_QWORD *)(v5 + 352))" ]
"1000177" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000178" [label = "(<operator>.addition,v5 + 352)" ]
"1000182" [label = "(<operator>.assignment,*(_QWORD *)(v5 + 352) = v10)" ]
"1000183" [label = "(<operator>.indirection,*(_QWORD *)(v5 + 352))" ]
"1000184" [label = "(<operator>.cast,(_QWORD *)(v5 + 352))" ]
"1000185" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000186" [label = "(<operator>.addition,v5 + 352)" ]
"1000191" [label = "(<operator>.logicalNot,!v10)" ]
"1000195" [label = "(<operator>.logicalNot,!*(_QWORD *)(v5 + 360))" ]
"1000196" [label = "(<operator>.indirection,*(_QWORD *)(v5 + 360))" ]
"1000197" [label = "(<operator>.cast,(_QWORD *)(v5 + 360))" ]
"1000198" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000199" [label = "(<operator>.addition,v5 + 360)" ]
"1000203" [label = "(<operator>.assignment,*(_QWORD *)(v5 + 360) = v11)" ]
"1000204" [label = "(<operator>.indirection,*(_QWORD *)(v5 + 360))" ]
"1000205" [label = "(<operator>.cast,(_QWORD *)(v5 + 360))" ]
"1000206" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000207" [label = "(<operator>.addition,v5 + 360)" ]
"1000212" [label = "(<operator>.logicalNot,!v11)" ]
"1000215" [label = "(<operator>.assignment,*(_QWORD *)(v5 + 16) = a1)" ]
"1000216" [label = "(<operator>.indirection,*(_QWORD *)(v5 + 16))" ]
"1000217" [label = "(<operator>.cast,(_QWORD *)(v5 + 16))" ]
"1000218" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000219" [label = "(<operator>.addition,v5 + 16)" ]
"1000223" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 24) = *((_DWORD *)a1 + 156))" ]
"1000224" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 24))" ]
"1000225" [label = "(<operator>.cast,(_DWORD *)(v5 + 24))" ]
"1000226" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000227" [label = "(<operator>.addition,v5 + 24)" ]
"1000230" [label = "(<operator>.indirection,*((_DWORD *)a1 + 156))" ]
"1000231" [label = "(<operator>.addition,(_DWORD *)a1 + 156)" ]
"1000232" [label = "(<operator>.cast,(_DWORD *)a1)" ]
"1000233" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000236" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000237" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000238" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000239" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000242" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000243" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000244" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000245" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000246" [label = "(<operator>.addition,v5 + 8)" ]
"1000249" [label = "(<operator>.minus,-100)" ]
"1000251" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 340) = 512)" ]
"1000252" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 340))" ]
"1000253" [label = "(<operator>.cast,(_DWORD *)(v5 + 340))" ]
"1000254" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000255" [label = "(<operator>.addition,v5 + 340)" ]
"1000259" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 344) = v7)" ]
"1000260" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 344))" ]
"1000261" [label = "(<operator>.cast,(_DWORD *)(v5 + 344))" ]
"1000262" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000263" [label = "(<operator>.addition,v5 + 344)" ]
"1000267" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000270" [label = "(<operator>.notEquals,(*((_BYTE *)a1 + 895) & 2) != 0)" ]
"1000271" [label = "(<operator>.and,*((_BYTE *)a1 + 895) & 2)" ]
"1000272" [label = "(<operator>.indirection,*((_BYTE *)a1 + 895))" ]
"1000273" [label = "(<operator>.addition,(_BYTE *)a1 + 895)" ]
"1000274" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000275" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000282" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000283" [label = "(<operator>.indirection,*a1)" ]
"1000285" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000286" [label = "(<operator>.indirection,*a2)" ]
"1000291" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 895) |= 2u)" ]
"1000292" [label = "(<operator>.indirection,*((_BYTE *)a1 + 895))" ]
"1000293" [label = "(<operator>.addition,(_BYTE *)a1 + 895)" ]
"1000294" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000295" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000300" [label = "(<operator>.assignment,v12 = *a1)" ]
"1000302" [label = "(<operator>.indirection,*a1)" ]
"1000304" [label = "(<operator>.assignment,v13 = __errno_location())" ]
"1000306" [label = "(__errno_location,__errno_location())" ]
"1000307" [label = "(Curl_failf,Curl_failf(v12, \"bind() failed; %s\", v14))" ]
"1000113" [label = "(METHOD,tftp_connect)" ]
"1000312" [label = "(METHOD_RETURN,__int64 __fastcall)" ]
  "1000129" -> "1000135" 
  "1000130" -> "1000129" 
  "1000135" -> "1000138" 
  "1000138" -> "1000148" 
  "1000138" -> "1000167" 
  "1000146" -> "1000158" 
  "1000146" -> "1000153" 
  "1000147" -> "1000146" 
  "1000148" -> "1000149" 
  "1000149" -> "1000147" 
  "1000153" -> "1000312" 
  "1000156" -> "1000177" 
  "1000156" -> "1000161" 
  "1000157" -> "1000156" 
  "1000158" -> "1000157" 
  "1000161" -> "1000177" 
  "1000167" -> "1000170" 
  "1000170" -> "1000177" 
  "1000174" -> "1000185" 
  "1000174" -> "1000198" 
  "1000175" -> "1000174" 
  "1000176" -> "1000175" 
  "1000177" -> "1000178" 
  "1000178" -> "1000176" 
  "1000182" -> "1000191" 
  "1000183" -> "1000182" 
  "1000184" -> "1000183" 
  "1000185" -> "1000186" 
  "1000186" -> "1000184" 
  "1000191" -> "1000198" 
  "1000195" -> "1000206" 
  "1000195" -> "1000218" 
  "1000196" -> "1000195" 
  "1000197" -> "1000196" 
  "1000198" -> "1000199" 
  "1000199" -> "1000197" 
  "1000203" -> "1000212" 
  "1000204" -> "1000203" 
  "1000205" -> "1000204" 
  "1000206" -> "1000207" 
  "1000207" -> "1000205" 
  "1000212" -> "1000218" 
  "1000215" -> "1000226" 
  "1000216" -> "1000215" 
  "1000217" -> "1000216" 
  "1000218" -> "1000219" 
  "1000219" -> "1000217" 
  "1000223" -> "1000239" 
  "1000224" -> "1000233" 
  "1000225" -> "1000224" 
  "1000226" -> "1000227" 
  "1000227" -> "1000225" 
  "1000230" -> "1000223" 
  "1000231" -> "1000230" 
  "1000232" -> "1000231" 
  "1000233" -> "1000232" 
  "1000236" -> "1000245" 
  "1000237" -> "1000236" 
  "1000238" -> "1000237" 
  "1000239" -> "1000238" 
  "1000242" -> "1000254" 
  "1000243" -> "1000249" 
  "1000244" -> "1000243" 
  "1000245" -> "1000246" 
  "1000246" -> "1000244" 
  "1000249" -> "1000242" 
  "1000251" -> "1000262" 
  "1000252" -> "1000251" 
  "1000253" -> "1000252" 
  "1000254" -> "1000255" 
  "1000255" -> "1000253" 
  "1000259" -> "1000267" 
  "1000260" -> "1000259" 
  "1000261" -> "1000260" 
  "1000262" -> "1000263" 
  "1000263" -> "1000261" 
  "1000267" -> "1000275" 
  "1000270" -> "1000295" 
  "1000270" -> "1000283" 
  "1000271" -> "1000270" 
  "1000272" -> "1000271" 
  "1000273" -> "1000272" 
  "1000274" -> "1000273" 
  "1000275" -> "1000274" 
  "1000282" -> "1000286" 
  "1000283" -> "1000282" 
  "1000285" -> "1000295" 
  "1000286" -> "1000285" 
  "1000291" -> "1000283" 
  "1000292" -> "1000291" 
  "1000293" -> "1000292" 
  "1000294" -> "1000293" 
  "1000295" -> "1000294" 
  "1000300" -> "1000306" 
  "1000302" -> "1000300" 
  "1000304" -> "1000307" 
  "1000306" -> "1000304" 
  "1000307" -> "1000312" 
  "1000113" -> "1000130" 
}
