digraph tftp_connect {  
"1000149" [label = "(int (__cdecl **v20),int (__cdecl **v20)(int, int, int, int))" ]
"1000160" [label = "(<operator>.assignment,buf[32] = __readgsdword(0x14u))" ]
"1000161" [label = "(<operator>.indirectIndexAccess,buf[32])" ]
"1000164" [label = "(__readgsdword,__readgsdword(0x14u))" ]
"1000166" [label = "(<operator>.assignment,v2 = Curl_ccalloc(\n         1,\n         336,\n         v13,\n         v14,\n         v15,\n         v16,\n         a2,\n         &Curl_ccalloc,\n         v22,\n         v23,\n         v24,\n         buf[0],\n         buf[1],\n         buf[2],\n         buf[3],\n         buf[4],\n         buf[5],\n         buf[6],\n         buf[7],\n         buf[8],\n         buf[9],\n         buf[10],\n         buf[11],\n         buf[12],\n         buf[13],\n         buf[14],\n         buf[15],\n         buf[16],\n         buf[17],\n         buf[18],\n         buf[19],\n         buf[20],\n         buf[21],\n         buf[22],\n         buf[23],\n         buf[24],\n         buf[25],\n         buf[26],\n         buf[27],\n         buf[28],\n         buf[29],\n         buf[30],\n         buf[31]))" ]
"1000168" [label = "(Curl_ccalloc,Curl_ccalloc(\n         1,\n         336,\n         v13,\n         v14,\n         v15,\n         v16,\n         a2,\n         &Curl_ccalloc,\n         v22,\n         v23,\n         v24,\n         buf[0],\n         buf[1],\n         buf[2],\n         buf[3],\n         buf[4],\n         buf[5],\n         buf[6],\n         buf[7],\n         buf[8],\n         buf[9],\n         buf[10],\n         buf[11],\n         buf[12],\n         buf[13],\n         buf[14],\n         buf[15],\n         buf[16],\n         buf[17],\n         buf[18],\n         buf[19],\n         buf[20],\n         buf[21],\n         buf[22],\n         buf[23],\n         buf[24],\n         buf[25],\n         buf[26],\n         buf[27],\n         buf[28],\n         buf[29],\n         buf[30],\n         buf[31]))" ]
"1000176" [label = "(<operator>.addressOf,&Curl_ccalloc)" ]
"1000181" [label = "(<operator>.indirectIndexAccess,buf[0])" ]
"1000184" [label = "(<operator>.indirectIndexAccess,buf[1])" ]
"1000187" [label = "(<operator>.indirectIndexAccess,buf[2])" ]
"1000190" [label = "(<operator>.indirectIndexAccess,buf[3])" ]
"1000193" [label = "(<operator>.indirectIndexAccess,buf[4])" ]
"1000196" [label = "(<operator>.indirectIndexAccess,buf[5])" ]
"1000199" [label = "(<operator>.indirectIndexAccess,buf[6])" ]
"1000202" [label = "(<operator>.indirectIndexAccess,buf[7])" ]
"1000205" [label = "(<operator>.indirectIndexAccess,buf[8])" ]
"1000208" [label = "(<operator>.indirectIndexAccess,buf[9])" ]
"1000211" [label = "(<operator>.indirectIndexAccess,buf[10])" ]
"1000214" [label = "(<operator>.indirectIndexAccess,buf[11])" ]
"1000217" [label = "(<operator>.indirectIndexAccess,buf[12])" ]
"1000220" [label = "(<operator>.indirectIndexAccess,buf[13])" ]
"1000223" [label = "(<operator>.indirectIndexAccess,buf[14])" ]
"1000226" [label = "(<operator>.indirectIndexAccess,buf[15])" ]
"1000229" [label = "(<operator>.indirectIndexAccess,buf[16])" ]
"1000232" [label = "(<operator>.indirectIndexAccess,buf[17])" ]
"1000235" [label = "(<operator>.indirectIndexAccess,buf[18])" ]
"1000238" [label = "(<operator>.indirectIndexAccess,buf[19])" ]
"1000241" [label = "(<operator>.indirectIndexAccess,buf[20])" ]
"1000244" [label = "(<operator>.indirectIndexAccess,buf[21])" ]
"1000247" [label = "(<operator>.indirectIndexAccess,buf[22])" ]
"1000250" [label = "(<operator>.indirectIndexAccess,buf[23])" ]
"1000253" [label = "(<operator>.indirectIndexAccess,buf[24])" ]
"1000256" [label = "(<operator>.indirectIndexAccess,buf[25])" ]
"1000259" [label = "(<operator>.indirectIndexAccess,buf[26])" ]
"1000262" [label = "(<operator>.indirectIndexAccess,buf[27])" ]
"1000265" [label = "(<operator>.indirectIndexAccess,buf[28])" ]
"1000268" [label = "(<operator>.indirectIndexAccess,buf[29])" ]
"1000271" [label = "(<operator>.indirectIndexAccess,buf[30])" ]
"1000274" [label = "(<operator>.indirectIndexAccess,buf[31])" ]
"1000277" [label = "(<operator>.assignment,a1[185] = v2)" ]
"1000278" [label = "(<operator>.indirectIndexAccess,a1[185])" ]
"1000283" [label = "(<operator>.logicalNot,!v2)" ]
"1000285" [label = "(RETURN,return 27;,return 27;)" ]
"1000287" [label = "(<operator>.assignment,v4 = v2)" ]
"1000290" [label = "(<operator>.assignment,result = *a1)" ]
"1000292" [label = "(<operator>.indirection,*a1)" ]
"1000294" [label = "(<operator>.assignment,v5 = *(_DWORD *)(*a1 + 1568))" ]
"1000296" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1568))" ]
"1000297" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1568))" ]
"1000298" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000299" [label = "(<operator>.addition,*a1 + 1568)" ]
"1000300" [label = "(<operator>.indirection,*a1)" ]
"1000306" [label = "(<operator>.assignment,result = 71)" ]
"1000310" [label = "(<operator>.greaterThan,(unsigned int)(v5 - 8) > 0xFFB0)" ]
"1000311" [label = "(<operator>.cast,(unsigned int)(v5 - 8))" ]
"1000312" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000313" [label = "(<operator>.subtraction,v5 - 8)" ]
"1000317" [label = "(RETURN,return result;,return result;)" ]
"1000321" [label = "(<operator>.assignment,v5 = 512)" ]
"1000325" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000326" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000327" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000328" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000329" [label = "(<operator>.addition,v4 + 328)" ]
"1000333" [label = "(<operator>.assignment,v17 = v5)" ]
"1000336" [label = "(<operator>.assignment,result = (*v20)(1, v5 + 4, result, result))" ]
"1000338" [label = "(*v20,(*v20)(1, v5 + 4, result, result))" ]
"1000340" [label = "(<operator>.addition,v5 + 4)" ]
"1000345" [label = "(<operator>.assignment,v5 = v17)" ]
"1000348" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 328) = result)" ]
"1000349" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000350" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000351" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000352" [label = "(<operator>.addition,v4 + 328)" ]
"1000357" [label = "(<operator>.logicalNot,!result)" ]
"1000359" [label = "(RETURN,return 27;,return 27;)" ]
"1000362" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 332))" ]
"1000363" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 332))" ]
"1000364" [label = "(<operator>.cast,(_DWORD *)(v4 + 332))" ]
"1000365" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000366" [label = "(<operator>.addition,v4 + 332)" ]
"1000370" [label = "(<operator>.assignment,v18 = v5)" ]
"1000373" [label = "(<operator>.assignment,result = (*v20)(1, v5 + 4, result, result))" ]
"1000375" [label = "(*v20,(*v20)(1, v5 + 4, result, result))" ]
"1000377" [label = "(<operator>.addition,v5 + 4)" ]
"1000382" [label = "(<operator>.assignment,v5 = v18)" ]
"1000385" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 332) = result)" ]
"1000386" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 332))" ]
"1000387" [label = "(<operator>.cast,(_DWORD *)(v4 + 332))" ]
"1000388" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000389" [label = "(<operator>.addition,v4 + 332)" ]
"1000394" [label = "(<operator>.logicalNot,!result)" ]
"1000396" [label = "(RETURN,return 27;,return 27;)" ]
"1000398" [label = "(<operator>.assignment,v26 = result)" ]
"1000401" [label = "(<operator>.assignment,buf[34] = result)" ]
"1000402" [label = "(<operator>.indirectIndexAccess,buf[34])" ]
"1000406" [label = "(<operator>.assignment,v21 = v5)" ]
"1000409" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000412" [label = "(<operator>.assignment,v6 = a1[103])" ]
"1000414" [label = "(<operator>.indirectIndexAccess,a1[103])" ]
"1000417" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 16) = a1)" ]
"1000418" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 16))" ]
"1000419" [label = "(<operator>.cast,(_DWORD *)(v4 + 16))" ]
"1000420" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000421" [label = "(<operator>.addition,v4 + 16)" ]
"1000425" [label = "(<operator>.assignment,*(_DWORD *)v4 = 0)" ]
"1000426" [label = "(<operator>.indirection,*(_DWORD *)v4)" ]
"1000427" [label = "(<operator>.cast,(_DWORD *)v4)" ]
"1000428" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000431" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 20) = v6)" ]
"1000432" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 20))" ]
"1000433" [label = "(<operator>.cast,(_DWORD *)(v4 + 20))" ]
"1000434" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000435" [label = "(<operator>.addition,v4 + 20)" ]
"1000439" [label = "(<operator>.assignment,v7 = a1[18])" ]
"1000441" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000444" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 8) = -100)" ]
"1000445" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 8))" ]
"1000446" [label = "(<operator>.cast,(_DWORD *)(v4 + 8))" ]
"1000447" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000448" [label = "(<operator>.addition,v4 + 8)" ]
"1000451" [label = "(<operator>.minus,-100)" ]
"1000453" [label = "(<operator>.assignment,v8 = *(_DWORD *)(v7 + 4))" ]
"1000455" [label = "(<operator>.indirection,*(_DWORD *)(v7 + 4))" ]
"1000456" [label = "(<operator>.cast,(_DWORD *)(v7 + 4))" ]
"1000457" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000458" [label = "(<operator>.addition,v7 + 4)" ]
"1000461" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 320) = v21)" ]
"1000462" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 320))" ]
"1000463" [label = "(<operator>.cast,(_DWORD *)(v4 + 320))" ]
"1000464" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000465" [label = "(<operator>.addition,v4 + 320)" ]
"1000469" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 324) = v21)" ]
"1000470" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 324))" ]
"1000471" [label = "(<operator>.cast,(_DWORD *)(v4 + 324))" ]
"1000472" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000473" [label = "(<operator>.addition,v4 + 324)" ]
"1000477" [label = "(<operator>.assignment,*(_WORD *)(v4 + 52) = v8)" ]
"1000478" [label = "(<operator>.indirection,*(_WORD *)(v4 + 52))" ]
"1000479" [label = "(<operator>.cast,(_WORD *)(v4 + 52))" ]
"1000480" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000481" [label = "(<operator>.addition,v4 + 52)" ]
"1000485" [label = "(tftp_set_timeouts,tftp_set_timeouts())" ]
"1000487" [label = "(<operator>.equals,(*((_BYTE *)a1 + 583) & 2) == 0)" ]
"1000488" [label = "(<operator>.and,*((_BYTE *)a1 + 583) & 2)" ]
"1000489" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000490" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000491" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000492" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000498" [label = "(<operator>.assignment,v26 = v9)" ]
"1000502" [label = "(bind,bind(*(_DWORD *)(v4 + 20), (const struct sockaddr *)(v4 + 52), *(_DWORD *)(a1[18] + 16)))" ]
"1000503" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 20))" ]
"1000504" [label = "(<operator>.cast,(_DWORD *)(v4 + 20))" ]
"1000505" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000506" [label = "(<operator>.addition,v4 + 20)" ]
"1000509" [label = "(<operator>.cast,(const struct sockaddr *)(v4 + 52))" ]
"1000510" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000511" [label = "(<operator>.addition,v4 + 52)" ]
"1000514" [label = "(<operator>.indirection,*(_DWORD *)(a1[18] + 16))" ]
"1000515" [label = "(<operator>.cast,(_DWORD *)(a1[18] + 16))" ]
"1000516" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000517" [label = "(<operator>.addition,a1[18] + 16)" ]
"1000518" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000523" [label = "(<operator>.assignment,v10 = __errno_location())" ]
"1000525" [label = "(__errno_location,__errno_location())" ]
"1000526" [label = "(<operator>.assignment,v26 = v11)" ]
"1000529" [label = "(<operator>.assignment,v12 = Curl_strerror(*v10, (char *)buf, 128))" ]
"1000531" [label = "(Curl_strerror,Curl_strerror(*v10, (char *)buf, 128))" ]
"1000532" [label = "(<operator>.indirection,*v10)" ]
"1000534" [label = "(<operator>.cast,(char *)buf)" ]
"1000535" [label = "(UNKNOWN,char *,char *)" ]
"1000538" [label = "(Curl_failf,Curl_failf(*a1, \"bind() failed; %s\", v12))" ]
"1000539" [label = "(<operator>.indirection,*a1)" ]
"1000543" [label = "(RETURN,return 7;,return 7;)" ]
"1000545" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 583) |= 2u)" ]
"1000546" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000547" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000548" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000549" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000553" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000554" [label = "(<operator>.indirection,*a1)" ]
"1000556" [label = "(<operator>.assignment,*v19 = 1)" ]
"1000557" [label = "(<operator>.indirection,*v19)" ]
"1000560" [label = "(RETURN,return 0;,return 0;)" ]
"1000127" [label = "(METHOD,tftp_connect)" ]
"1000562" [label = "(METHOD_RETURN,int __cdecl)" ]
  "1000149" -> "1000161" 
  "1000160" -> "1000176" 
  "1000161" -> "1000164" 
  "1000164" -> "1000160" 
  "1000166" -> "1000278" 
  "1000168" -> "1000166" 
  "1000176" -> "1000181" 
  "1000181" -> "1000184" 
  "1000184" -> "1000187" 
  "1000187" -> "1000190" 
  "1000190" -> "1000193" 
  "1000193" -> "1000196" 
  "1000196" -> "1000199" 
  "1000199" -> "1000202" 
  "1000202" -> "1000205" 
  "1000205" -> "1000208" 
  "1000208" -> "1000211" 
  "1000211" -> "1000214" 
  "1000214" -> "1000217" 
  "1000217" -> "1000220" 
  "1000220" -> "1000223" 
  "1000223" -> "1000226" 
  "1000226" -> "1000229" 
  "1000229" -> "1000232" 
  "1000232" -> "1000235" 
  "1000235" -> "1000238" 
  "1000238" -> "1000241" 
  "1000241" -> "1000244" 
  "1000244" -> "1000247" 
  "1000247" -> "1000250" 
  "1000250" -> "1000253" 
  "1000253" -> "1000256" 
  "1000256" -> "1000259" 
  "1000259" -> "1000262" 
  "1000262" -> "1000265" 
  "1000265" -> "1000268" 
  "1000268" -> "1000271" 
  "1000271" -> "1000274" 
  "1000274" -> "1000168" 
  "1000277" -> "1000283" 
  "1000278" -> "1000277" 
  "1000283" -> "1000285" 
  "1000283" -> "1000287" 
  "1000285" -> "1000562" 
  "1000287" -> "1000292" 
  "1000290" -> "1000298" 
  "1000292" -> "1000290" 
  "1000294" -> "1000306" 
  "1000294" -> "1000321" 
  "1000296" -> "1000294" 
  "1000297" -> "1000296" 
  "1000298" -> "1000300" 
  "1000299" -> "1000297" 
  "1000300" -> "1000299" 
  "1000306" -> "1000312" 
  "1000310" -> "1000328" 
  "1000310" -> "1000317" 
  "1000311" -> "1000310" 
  "1000312" -> "1000313" 
  "1000313" -> "1000311" 
  "1000317" -> "1000562" 
  "1000321" -> "1000328" 
  "1000325" -> "1000365" 
  "1000325" -> "1000333" 
  "1000326" -> "1000325" 
  "1000327" -> "1000326" 
  "1000328" -> "1000329" 
  "1000329" -> "1000327" 
  "1000333" -> "1000340" 
  "1000336" -> "1000345" 
  "1000338" -> "1000336" 
  "1000340" -> "1000338" 
  "1000345" -> "1000351" 
  "1000348" -> "1000357" 
  "1000349" -> "1000348" 
  "1000350" -> "1000349" 
  "1000351" -> "1000352" 
  "1000352" -> "1000350" 
  "1000357" -> "1000365" 
  "1000357" -> "1000359" 
  "1000359" -> "1000562" 
  "1000362" -> "1000370" 
  "1000362" -> "1000398" 
  "1000363" -> "1000362" 
  "1000364" -> "1000363" 
  "1000365" -> "1000366" 
  "1000366" -> "1000364" 
  "1000370" -> "1000377" 
  "1000373" -> "1000382" 
  "1000375" -> "1000373" 
  "1000377" -> "1000375" 
  "1000382" -> "1000388" 
  "1000385" -> "1000394" 
  "1000386" -> "1000385" 
  "1000387" -> "1000386" 
  "1000388" -> "1000389" 
  "1000389" -> "1000387" 
  "1000394" -> "1000396" 
  "1000394" -> "1000398" 
  "1000396" -> "1000562" 
  "1000398" -> "1000402" 
  "1000401" -> "1000406" 
  "1000402" -> "1000401" 
  "1000406" -> "1000409" 
  "1000409" -> "1000414" 
  "1000412" -> "1000420" 
  "1000414" -> "1000412" 
  "1000417" -> "1000428" 
  "1000418" -> "1000417" 
  "1000419" -> "1000418" 
  "1000420" -> "1000421" 
  "1000421" -> "1000419" 
  "1000425" -> "1000434" 
  "1000426" -> "1000425" 
  "1000427" -> "1000426" 
  "1000428" -> "1000427" 
  "1000431" -> "1000441" 
  "1000432" -> "1000431" 
  "1000433" -> "1000432" 
  "1000434" -> "1000435" 
  "1000435" -> "1000433" 
  "1000439" -> "1000447" 
  "1000441" -> "1000439" 
  "1000444" -> "1000457" 
  "1000445" -> "1000451" 
  "1000446" -> "1000445" 
  "1000447" -> "1000448" 
  "1000448" -> "1000446" 
  "1000451" -> "1000444" 
  "1000453" -> "1000464" 
  "1000455" -> "1000453" 
  "1000456" -> "1000455" 
  "1000457" -> "1000458" 
  "1000458" -> "1000456" 
  "1000461" -> "1000472" 
  "1000462" -> "1000461" 
  "1000463" -> "1000462" 
  "1000464" -> "1000465" 
  "1000465" -> "1000463" 
  "1000469" -> "1000480" 
  "1000470" -> "1000469" 
  "1000471" -> "1000470" 
  "1000472" -> "1000473" 
  "1000473" -> "1000471" 
  "1000477" -> "1000485" 
  "1000478" -> "1000477" 
  "1000479" -> "1000478" 
  "1000480" -> "1000481" 
  "1000481" -> "1000479" 
  "1000485" -> "1000492" 
  "1000487" -> "1000498" 
  "1000487" -> "1000554" 
  "1000488" -> "1000487" 
  "1000489" -> "1000488" 
  "1000490" -> "1000489" 
  "1000491" -> "1000490" 
  "1000492" -> "1000491" 
  "1000498" -> "1000505" 
  "1000502" -> "1000549" 
  "1000502" -> "1000525" 
  "1000503" -> "1000510" 
  "1000504" -> "1000503" 
  "1000505" -> "1000506" 
  "1000506" -> "1000504" 
  "1000509" -> "1000516" 
  "1000510" -> "1000511" 
  "1000511" -> "1000509" 
  "1000514" -> "1000502" 
  "1000515" -> "1000514" 
  "1000516" -> "1000518" 
  "1000517" -> "1000515" 
  "1000518" -> "1000517" 
  "1000523" -> "1000526" 
  "1000525" -> "1000523" 
  "1000526" -> "1000532" 
  "1000529" -> "1000539" 
  "1000531" -> "1000529" 
  "1000532" -> "1000535" 
  "1000534" -> "1000531" 
  "1000535" -> "1000534" 
  "1000538" -> "1000543" 
  "1000539" -> "1000538" 
  "1000543" -> "1000562" 
  "1000545" -> "1000554" 
  "1000546" -> "1000545" 
  "1000547" -> "1000546" 
  "1000548" -> "1000547" 
  "1000549" -> "1000548" 
  "1000553" -> "1000557" 
  "1000554" -> "1000553" 
  "1000556" -> "1000560" 
  "1000557" -> "1000556" 
  "1000560" -> "1000562" 
  "1000127" -> "1000149" 
}
