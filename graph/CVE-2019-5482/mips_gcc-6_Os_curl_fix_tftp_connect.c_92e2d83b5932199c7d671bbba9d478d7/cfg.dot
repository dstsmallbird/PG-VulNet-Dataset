digraph tftp_connect {  
"1000133" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000135" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000138" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000139" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000144" [label = "(<operator>.logicalNot,!v4)" ]
"1000146" [label = "(RETURN,return 27;,return 27;)" ]
"1000148" [label = "(<operator>.assignment,v6 = v4)" ]
"1000151" [label = "(<operator>.assignment,v7 = *(_DWORD *)(*a1 + 1576))" ]
"1000153" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000154" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000155" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000156" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000157" [label = "(<operator>.indirection,*a1)" ]
"1000160" [label = "(<operator>.assignment,v8 = 512)" ]
"1000164" [label = "(<operator>.logicalNot,!v7)" ]
"1000167" [label = "(<operator>.assignment,v10 = 512)" ]
"1000171" [label = "(<operator>.assignment,result = 71)" ]
"1000175" [label = "(<operator>.lessThan,(unsigned int)(v7 - 8) < 0xFFB1)" ]
"1000176" [label = "(<operator>.cast,(unsigned int)(v7 - 8))" ]
"1000177" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000178" [label = "(<operator>.subtraction,v7 - 8)" ]
"1000183" [label = "(<operator>.assignment,v9 = 512)" ]
"1000187" [label = "(<operator>.greaterEqualsThan,v7 >= 512)" ]
"1000190" [label = "(<operator>.assignment,v9 = *(_DWORD *)(*a1 + 1576))" ]
"1000192" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000193" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000194" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000195" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000196" [label = "(<operator>.indirection,*a1)" ]
"1000199" [label = "(<operator>.assignment,v8 = *(_DWORD *)(*a1 + 1576))" ]
"1000201" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000202" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000203" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000204" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000205" [label = "(<operator>.indirection,*a1)" ]
"1000208" [label = "(<operator>.assignment,v10 = v9)" ]
"1000213" [label = "(<operator>.logicalNot,!*(_DWORD *)(v6 + 328))" ]
"1000214" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000215" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000216" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000217" [label = "(<operator>.addition,v6 + 328)" ]
"1000221" [label = "(<operator>.assignment,v13 = Curl_ccalloc(1, v10 + 4))" ]
"1000223" [label = "(Curl_ccalloc,Curl_ccalloc(1, v10 + 4))" ]
"1000225" [label = "(<operator>.addition,v10 + 4)" ]
"1000228" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 328) = v13)" ]
"1000229" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000230" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000231" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000232" [label = "(<operator>.addition,v6 + 328)" ]
"1000237" [label = "(<operator>.logicalNot,!v13)" ]
"1000239" [label = "(RETURN,return 27;,return 27;)" ]
"1000242" [label = "(<operator>.logicalOr,*(_DWORD *)(v6 + 332) || (v11 = Curl_ccalloc(1, v10 + 4), (*(_DWORD *)(v6 + 332) = v11) != 0))" ]
"1000243" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000244" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000245" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000246" [label = "(<operator>.addition,v6 + 332)" ]
"1000250" [label = "(<operator>.assignment,v11 = Curl_ccalloc(1, v10 + 4))" ]
"1000252" [label = "(Curl_ccalloc,Curl_ccalloc(1, v10 + 4))" ]
"1000254" [label = "(<operator>.addition,v10 + 4)" ]
"1000257" [label = "(<operator>.notEquals,(*(_DWORD *)(v6 + 332) = v11) != 0)" ]
"1000258" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 332) = v11)" ]
"1000259" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000260" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000261" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000262" [label = "(<operator>.addition,v6 + 332)" ]
"1000268" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000271" [label = "(<operator>.assignment,v12 = a1[105])" ]
"1000273" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000276" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 16) = a1)" ]
"1000277" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 16))" ]
"1000278" [label = "(<operator>.cast,(_DWORD *)(v6 + 16))" ]
"1000279" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000280" [label = "(<operator>.addition,v6 + 16)" ]
"1000284" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 20) = v12)" ]
"1000285" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000286" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000287" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000288" [label = "(<operator>.addition,v6 + 20)" ]
"1000292" [label = "(<operator>.assignment,*(_DWORD *)v6 = 0)" ]
"1000293" [label = "(<operator>.indirection,*(_DWORD *)v6)" ]
"1000294" [label = "(<operator>.cast,(_DWORD *)v6)" ]
"1000295" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000298" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 8) = -100)" ]
"1000299" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 8))" ]
"1000300" [label = "(<operator>.cast,(_DWORD *)(v6 + 8))" ]
"1000301" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000302" [label = "(<operator>.addition,v6 + 8)" ]
"1000305" [label = "(<operator>.minus,-100)" ]
"1000307" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 324) = v8)" ]
"1000308" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 324))" ]
"1000309" [label = "(<operator>.cast,(_DWORD *)(v6 + 324))" ]
"1000310" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000311" [label = "(<operator>.addition,v6 + 324)" ]
"1000315" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 320) = 512)" ]
"1000316" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 320))" ]
"1000317" [label = "(<operator>.cast,(_DWORD *)(v6 + 320))" ]
"1000318" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000319" [label = "(<operator>.addition,v6 + 320)" ]
"1000323" [label = "(<operator>.assignment,*(_WORD *)(v6 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000324" [label = "(<operator>.indirection,*(_WORD *)(v6 + 52))" ]
"1000325" [label = "(<operator>.cast,(_WORD *)(v6 + 52))" ]
"1000326" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000327" [label = "(<operator>.addition,v6 + 52)" ]
"1000330" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000331" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000332" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000333" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000334" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000338" [label = "(tftp_set_timeouts,tftp_set_timeouts(v6))" ]
"1000341" [label = "(<operator>.equals,(a1[147] & 0x40) == 0)" ]
"1000342" [label = "(<operator>.and,a1[147] & 0x40)" ]
"1000343" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000350" [label = "(bind,bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000351" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000352" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000353" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000354" [label = "(<operator>.addition,v6 + 20)" ]
"1000357" [label = "(<operator>.cast,(const struct sockaddr *)(v6 + 52))" ]
"1000358" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000359" [label = "(<operator>.addition,v6 + 52)" ]
"1000362" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000363" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000364" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000365" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000366" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000371" [label = "(<operator>.assignment,v15 = *a1)" ]
"1000373" [label = "(<operator>.indirection,*a1)" ]
"1000375" [label = "(<operator>.assignment,v14 = _errno_location())" ]
"1000377" [label = "(_errno_location,_errno_location())" ]
"1000378" [label = "(<operator>.assignment,v16 = (const char *)Curl_strerror(*v14, v17, 128))" ]
"1000380" [label = "(<operator>.cast,(const char *)Curl_strerror(*v14, v17, 128))" ]
"1000381" [label = "(UNKNOWN,const char *,const char *)" ]
"1000382" [label = "(Curl_strerror,Curl_strerror(*v14, v17, 128))" ]
"1000383" [label = "(<operator>.indirection,*v14)" ]
"1000387" [label = "(Curl_failf,Curl_failf(v15, \"bind() failed; %s\", v16))" ]
"1000391" [label = "(RETURN,return 7;,return 7;)" ]
"1000393" [label = "(<operator>.assignment,a1[147] = a1[147] & 0xFFFFFFBF | 0x40)" ]
"1000394" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000397" [label = "(<operator>.or,a1[147] & 0xFFFFFFBF | 0x40)" ]
"1000398" [label = "(<operator>.and,a1[147] & 0xFFFFFFBF)" ]
"1000399" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000404" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000405" [label = "(<operator>.indirection,*a1)" ]
"1000407" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000408" [label = "(<operator>.indirection,*a2)" ]
"1000411" [label = "(RETURN,return 0;,return 0;)" ]
"1000413" [label = "(RETURN,return 27;,return 27;)" ]
"1000415" [label = "(RETURN,return result;,return result;)" ]
"1000115" [label = "(METHOD,tftp_connect)" ]
"1000417" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000133" -> "1000139" 
  "1000135" -> "1000133" 
  "1000138" -> "1000144" 
  "1000139" -> "1000138" 
  "1000144" -> "1000146" 
  "1000144" -> "1000148" 
  "1000146" -> "1000417" 
  "1000148" -> "1000155" 
  "1000151" -> "1000160" 
  "1000153" -> "1000151" 
  "1000154" -> "1000153" 
  "1000155" -> "1000157" 
  "1000156" -> "1000154" 
  "1000157" -> "1000156" 
  "1000160" -> "1000164" 
  "1000164" -> "1000167" 
  "1000164" -> "1000171" 
  "1000167" -> "1000216" 
  "1000171" -> "1000177" 
  "1000175" -> "1000183" 
  "1000175" -> "1000415" 
  "1000176" -> "1000175" 
  "1000177" -> "1000178" 
  "1000178" -> "1000176" 
  "1000183" -> "1000187" 
  "1000187" -> "1000194" 
  "1000187" -> "1000203" 
  "1000190" -> "1000203" 
  "1000192" -> "1000190" 
  "1000193" -> "1000192" 
  "1000194" -> "1000196" 
  "1000195" -> "1000193" 
  "1000196" -> "1000195" 
  "1000199" -> "1000208" 
  "1000201" -> "1000199" 
  "1000202" -> "1000201" 
  "1000203" -> "1000205" 
  "1000204" -> "1000202" 
  "1000205" -> "1000204" 
  "1000208" -> "1000216" 
  "1000213" -> "1000245" 
  "1000213" -> "1000225" 
  "1000214" -> "1000213" 
  "1000215" -> "1000214" 
  "1000216" -> "1000217" 
  "1000217" -> "1000215" 
  "1000221" -> "1000231" 
  "1000223" -> "1000221" 
  "1000225" -> "1000223" 
  "1000228" -> "1000237" 
  "1000229" -> "1000228" 
  "1000230" -> "1000229" 
  "1000231" -> "1000232" 
  "1000232" -> "1000230" 
  "1000237" -> "1000245" 
  "1000237" -> "1000239" 
  "1000239" -> "1000417" 
  "1000242" -> "1000268" 
  "1000242" -> "1000413" 
  "1000243" -> "1000242" 
  "1000243" -> "1000254" 
  "1000244" -> "1000243" 
  "1000245" -> "1000246" 
  "1000246" -> "1000244" 
  "1000250" -> "1000261" 
  "1000252" -> "1000250" 
  "1000254" -> "1000252" 
  "1000257" -> "1000242" 
  "1000258" -> "1000257" 
  "1000259" -> "1000258" 
  "1000260" -> "1000259" 
  "1000261" -> "1000262" 
  "1000262" -> "1000260" 
  "1000268" -> "1000273" 
  "1000271" -> "1000279" 
  "1000273" -> "1000271" 
  "1000276" -> "1000287" 
  "1000277" -> "1000276" 
  "1000278" -> "1000277" 
  "1000279" -> "1000280" 
  "1000280" -> "1000278" 
  "1000284" -> "1000295" 
  "1000285" -> "1000284" 
  "1000286" -> "1000285" 
  "1000287" -> "1000288" 
  "1000288" -> "1000286" 
  "1000292" -> "1000301" 
  "1000293" -> "1000292" 
  "1000294" -> "1000293" 
  "1000295" -> "1000294" 
  "1000298" -> "1000310" 
  "1000299" -> "1000305" 
  "1000300" -> "1000299" 
  "1000301" -> "1000302" 
  "1000302" -> "1000300" 
  "1000305" -> "1000298" 
  "1000307" -> "1000318" 
  "1000308" -> "1000307" 
  "1000309" -> "1000308" 
  "1000310" -> "1000311" 
  "1000311" -> "1000309" 
  "1000315" -> "1000326" 
  "1000316" -> "1000315" 
  "1000317" -> "1000316" 
  "1000318" -> "1000319" 
  "1000319" -> "1000317" 
  "1000323" -> "1000338" 
  "1000324" -> "1000332" 
  "1000325" -> "1000324" 
  "1000326" -> "1000327" 
  "1000327" -> "1000325" 
  "1000330" -> "1000323" 
  "1000331" -> "1000330" 
  "1000332" -> "1000334" 
  "1000333" -> "1000331" 
  "1000334" -> "1000333" 
  "1000338" -> "1000343" 
  "1000341" -> "1000353" 
  "1000341" -> "1000405" 
  "1000342" -> "1000341" 
  "1000343" -> "1000342" 
  "1000350" -> "1000373" 
  "1000350" -> "1000394" 
  "1000351" -> "1000358" 
  "1000352" -> "1000351" 
  "1000353" -> "1000354" 
  "1000354" -> "1000352" 
  "1000357" -> "1000364" 
  "1000358" -> "1000359" 
  "1000359" -> "1000357" 
  "1000362" -> "1000350" 
  "1000363" -> "1000362" 
  "1000364" -> "1000366" 
  "1000365" -> "1000363" 
  "1000366" -> "1000365" 
  "1000371" -> "1000377" 
  "1000373" -> "1000371" 
  "1000375" -> "1000381" 
  "1000377" -> "1000375" 
  "1000378" -> "1000387" 
  "1000380" -> "1000378" 
  "1000381" -> "1000383" 
  "1000382" -> "1000380" 
  "1000383" -> "1000382" 
  "1000387" -> "1000391" 
  "1000391" -> "1000417" 
  "1000393" -> "1000405" 
  "1000394" -> "1000399" 
  "1000397" -> "1000393" 
  "1000398" -> "1000397" 
  "1000399" -> "1000398" 
  "1000404" -> "1000408" 
  "1000405" -> "1000404" 
  "1000407" -> "1000411" 
  "1000408" -> "1000407" 
  "1000411" -> "1000417" 
  "1000413" -> "1000417" 
  "1000415" -> "1000417" 
  "1000115" -> "1000135" 
}
