digraph tftp_connect {  
"1000131" [label = "(<operator>.assignment,a1[167] = v2)" ]
"1000132" [label = "(<operator>.indirectIndexAccess,a1[167])" ]
"1000137" [label = "(<operator>.logicalNot,!v2)" ]
"1000140" [label = "(<operator>.assignment,v3 = v2)" ]
"1000148" [label = "(<operator>.greaterThan,(unsigned int)(v4 - 8) > 0xFFB0)" ]
"1000149" [label = "(<operator>.cast,(unsigned int)(v4 - 8))" ]
"1000150" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000151" [label = "(<operator>.subtraction,v4 - 8)" ]
"1000155" [label = "(RETURN,return result;,return result;)" ]
"1000159" [label = "(<operator>.greaterThan,(int)v4 > 512)" ]
"1000160" [label = "(<operator>.cast,(int)v4)" ]
"1000161" [label = "(UNKNOWN,int,int)" ]
"1000164" [label = "(<operator>.assignment,v6 = (unsigned int)(v4 + 4))" ]
"1000166" [label = "(<operator>.cast,(unsigned int)(v4 + 4))" ]
"1000167" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000168" [label = "(<operator>.addition,v4 + 4)" ]
"1000172" [label = "(<operator>.logicalNot,!*(_QWORD *)(v3 + 352))" ]
"1000173" [label = "(<operator>.indirection,*(_QWORD *)(v3 + 352))" ]
"1000174" [label = "(<operator>.cast,(_QWORD *)(v3 + 352))" ]
"1000175" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000176" [label = "(<operator>.addition,v3 + 352)" ]
"1000181" [label = "(<operator>.assignment,*(_QWORD *)(v3 + 352) = v7)" ]
"1000182" [label = "(<operator>.indirection,*(_QWORD *)(v3 + 352))" ]
"1000183" [label = "(<operator>.cast,(_QWORD *)(v3 + 352))" ]
"1000184" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000185" [label = "(<operator>.addition,v3 + 352)" ]
"1000195" [label = "(<operator>.assignment,LODWORD(v4) = 512)" ]
"1000196" [label = "(LODWORD,LODWORD(v4))" ]
"1000201" [label = "(<operator>.logicalNot,!*(_QWORD *)(v2 + 352))" ]
"1000202" [label = "(<operator>.indirection,*(_QWORD *)(v2 + 352))" ]
"1000203" [label = "(<operator>.cast,(_QWORD *)(v2 + 352))" ]
"1000204" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000205" [label = "(<operator>.addition,v2 + 352)" ]
"1000211" [label = "(<operator>.assignment,*(_QWORD *)(v3 + 16) = a1)" ]
"1000212" [label = "(<operator>.indirection,*(_QWORD *)(v3 + 16))" ]
"1000213" [label = "(<operator>.cast,(_QWORD *)(v3 + 16))" ]
"1000214" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000215" [label = "(<operator>.addition,v3 + 16)" ]
"1000219" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 24) = *((_DWORD *)a1 + 156))" ]
"1000220" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 24))" ]
"1000221" [label = "(<operator>.cast,(_DWORD *)(v3 + 24))" ]
"1000222" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000223" [label = "(<operator>.addition,v3 + 24)" ]
"1000226" [label = "(<operator>.indirection,*((_DWORD *)a1 + 156))" ]
"1000227" [label = "(<operator>.addition,(_DWORD *)a1 + 156)" ]
"1000228" [label = "(<operator>.cast,(_DWORD *)a1)" ]
"1000229" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000232" [label = "(<operator>.assignment,*(_DWORD *)v3 = 0)" ]
"1000233" [label = "(<operator>.indirection,*(_DWORD *)v3)" ]
"1000234" [label = "(<operator>.cast,(_DWORD *)v3)" ]
"1000235" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000238" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 8) = -100)" ]
"1000239" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 8))" ]
"1000240" [label = "(<operator>.cast,(_DWORD *)(v3 + 8))" ]
"1000241" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000242" [label = "(<operator>.addition,v3 + 8)" ]
"1000245" [label = "(<operator>.minus,-100)" ]
"1000247" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 340) = 512)" ]
"1000248" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 340))" ]
"1000249" [label = "(<operator>.cast,(_DWORD *)(v3 + 340))" ]
"1000250" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000251" [label = "(<operator>.addition,v3 + 340)" ]
"1000255" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 344) = v4)" ]
"1000256" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 344))" ]
"1000257" [label = "(<operator>.cast,(_DWORD *)(v3 + 344))" ]
"1000258" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000259" [label = "(<operator>.addition,v3 + 344)" ]
"1000263" [label = "(tftp_set_timeouts,tftp_set_timeouts(v3))" ]
"1000266" [label = "(<operator>.equals,(*((_BYTE *)a1 + 951) & 2) == 0)" ]
"1000267" [label = "(<operator>.and,*((_BYTE *)a1 + 951) & 2)" ]
"1000268" [label = "(<operator>.indirection,*((_BYTE *)a1 + 951))" ]
"1000269" [label = "(<operator>.addition,(_BYTE *)a1 + 951)" ]
"1000270" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000271" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000278" [label = "(<operator>.assignment,v9 = *a1)" ]
"1000280" [label = "(<operator>.indirection,*a1)" ]
"1000282" [label = "(<operator>.assignment,v10 = __errno_location())" ]
"1000284" [label = "(__errno_location,__errno_location())" ]
"1000285" [label = "(Curl_failf,Curl_failf(v9, (unsigned int)\"bind() failed; %s\", v11, v11, v12, v13, v14[0]))" ]
"1000287" [label = "(<operator>.cast,(unsigned int)\"bind() failed; %s\")" ]
"1000288" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000294" [label = "(<operator>.indirectIndexAccess,v14[0])" ]
"1000298" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 951) |= 2u)" ]
"1000299" [label = "(<operator>.indirection,*((_BYTE *)a1 + 951))" ]
"1000300" [label = "(<operator>.addition,(_BYTE *)a1 + 951)" ]
"1000301" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000302" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000306" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000307" [label = "(<operator>.indirection,*a1)" ]
"1000309" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000310" [label = "(<operator>.indirection,*a2)" ]
"1000314" [label = "(RETURN,return result;,return result;)" ]
"1000114" [label = "(METHOD,tftp_connect)" ]
"1000316" [label = "(METHOD_RETURN,__int64 __fastcall)" ]
  "1000131" -> "1000137" 
  "1000132" -> "1000131" 
  "1000137" -> "1000140" 
  "1000140" -> "1000150" 
  "1000140" -> "1000196" 
  "1000148" -> "1000155" 
  "1000148" -> "1000161" 
  "1000149" -> "1000148" 
  "1000150" -> "1000151" 
  "1000151" -> "1000149" 
  "1000155" -> "1000316" 
  "1000159" -> "1000175" 
  "1000159" -> "1000167" 
  "1000160" -> "1000159" 
  "1000161" -> "1000160" 
  "1000164" -> "1000175" 
  "1000166" -> "1000164" 
  "1000167" -> "1000168" 
  "1000168" -> "1000166" 
  "1000172" -> "1000184" 
  "1000172" -> "1000214" 
  "1000173" -> "1000172" 
  "1000174" -> "1000173" 
  "1000175" -> "1000176" 
  "1000176" -> "1000174" 
  "1000181" -> "1000214" 
  "1000181" -> "1000214" 
  "1000182" -> "1000181" 
  "1000183" -> "1000182" 
  "1000184" -> "1000185" 
  "1000185" -> "1000183" 
  "1000195" -> "1000204" 
  "1000196" -> "1000195" 
  "1000201" -> "1000184" 
  "1000201" -> "1000214" 
  "1000202" -> "1000201" 
  "1000203" -> "1000202" 
  "1000204" -> "1000205" 
  "1000205" -> "1000203" 
  "1000211" -> "1000222" 
  "1000212" -> "1000211" 
  "1000213" -> "1000212" 
  "1000214" -> "1000215" 
  "1000215" -> "1000213" 
  "1000219" -> "1000235" 
  "1000220" -> "1000229" 
  "1000221" -> "1000220" 
  "1000222" -> "1000223" 
  "1000223" -> "1000221" 
  "1000226" -> "1000219" 
  "1000227" -> "1000226" 
  "1000228" -> "1000227" 
  "1000229" -> "1000228" 
  "1000232" -> "1000241" 
  "1000233" -> "1000232" 
  "1000234" -> "1000233" 
  "1000235" -> "1000234" 
  "1000238" -> "1000250" 
  "1000239" -> "1000245" 
  "1000240" -> "1000239" 
  "1000241" -> "1000242" 
  "1000242" -> "1000240" 
  "1000245" -> "1000238" 
  "1000247" -> "1000258" 
  "1000248" -> "1000247" 
  "1000249" -> "1000248" 
  "1000250" -> "1000251" 
  "1000251" -> "1000249" 
  "1000255" -> "1000263" 
  "1000256" -> "1000255" 
  "1000257" -> "1000256" 
  "1000258" -> "1000259" 
  "1000259" -> "1000257" 
  "1000263" -> "1000271" 
  "1000266" -> "1000280" 
  "1000266" -> "1000307" 
  "1000267" -> "1000266" 
  "1000268" -> "1000267" 
  "1000269" -> "1000268" 
  "1000270" -> "1000269" 
  "1000271" -> "1000270" 
  "1000278" -> "1000284" 
  "1000280" -> "1000278" 
  "1000282" -> "1000288" 
  "1000284" -> "1000282" 
  "1000285" -> "1000302" 
  "1000287" -> "1000294" 
  "1000288" -> "1000287" 
  "1000294" -> "1000285" 
  "1000298" -> "1000307" 
  "1000299" -> "1000298" 
  "1000300" -> "1000299" 
  "1000301" -> "1000300" 
  "1000302" -> "1000301" 
  "1000306" -> "1000310" 
  "1000307" -> "1000306" 
  "1000309" -> "1000314" 
  "1000310" -> "1000309" 
  "1000314" -> "1000316" 
  "1000114" -> "1000132" 
}
