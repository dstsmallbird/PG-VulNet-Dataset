digraph tftp_connect {  
"1000139" [label = "(<operator>.assignment,v19 = __readfsqword(0x28u))" ]
"1000141" [label = "(__readfsqword,__readfsqword(0x28u))" ]
"1000143" [label = "(<operator>.assignment,a1[167] = v3)" ]
"1000144" [label = "(<operator>.indirectIndexAccess,a1[167])" ]
"1000149" [label = "(<operator>.logicalNot,!v3)" ]
"1000152" [label = "(<operator>.assignment,v4 = v3)" ]
"1000156" [label = "(<operator>.logicalNot,!v5)" ]
"1000159" [label = "(<operator>.assignment,v6 = 512)" ]
"1000162" [label = "(<operator>.assignment,v7 = 512)" ]
"1000166" [label = "(<operator>.indirection,*(_QWORD *)(v3 + 352))" ]
"1000167" [label = "(<operator>.cast,(_QWORD *)(v3 + 352))" ]
"1000168" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000169" [label = "(<operator>.addition,v3 + 352)" ]
"1000174" [label = "(<operator>.assignment,*(_QWORD *)(v4 + 352) = v11)" ]
"1000175" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 352))" ]
"1000176" [label = "(<operator>.cast,(_QWORD *)(v4 + 352))" ]
"1000177" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000178" [label = "(<operator>.addition,v4 + 352)" ]
"1000183" [label = "(<operator>.logicalNot,!v11)" ]
"1000189" [label = "(<operator>.greaterThan,(unsigned int)(v5 - 8) > 0xFFB0)" ]
"1000190" [label = "(<operator>.cast,(unsigned int)(v5 - 8))" ]
"1000191" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000192" [label = "(<operator>.subtraction,v5 - 8)" ]
"1000196" [label = "(RETURN,return result;,return result;)" ]
"1000198" [label = "(<operator>.assignment,v7 = 512)" ]
"1000202" [label = "(<operator>.greaterEqualsThan,(int)v5 >= 512)" ]
"1000203" [label = "(<operator>.cast,(int)v5)" ]
"1000204" [label = "(UNKNOWN,int,int)" ]
"1000208" [label = "(<operator>.logicalNot,!*(_QWORD *)(v4 + 352))" ]
"1000209" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 352))" ]
"1000210" [label = "(<operator>.cast,(_QWORD *)(v4 + 352))" ]
"1000211" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000212" [label = "(<operator>.addition,v4 + 352)" ]
"1000218" [label = "(<operator>.logicalNot,!*(_QWORD *)(v4 + 360))" ]
"1000219" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 360))" ]
"1000220" [label = "(<operator>.cast,(_QWORD *)(v4 + 360))" ]
"1000221" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000222" [label = "(<operator>.addition,v4 + 360)" ]
"1000226" [label = "(<operator>.assignment,*(_QWORD *)(v4 + 360) = v12)" ]
"1000227" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 360))" ]
"1000228" [label = "(<operator>.cast,(_QWORD *)(v4 + 360))" ]
"1000229" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000230" [label = "(<operator>.addition,v4 + 360)" ]
"1000235" [label = "(<operator>.logicalNot,!v12)" ]
"1000238" [label = "(<operator>.assignment,v8 = *((_DWORD *)a1 + 156))" ]
"1000240" [label = "(<operator>.indirection,*((_DWORD *)a1 + 156))" ]
"1000241" [label = "(<operator>.addition,(_DWORD *)a1 + 156)" ]
"1000242" [label = "(<operator>.cast,(_DWORD *)a1)" ]
"1000243" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000246" [label = "(<operator>.assignment,*(_QWORD *)(v4 + 16) = a1)" ]
"1000247" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 16))" ]
"1000248" [label = "(<operator>.cast,(_QWORD *)(v4 + 16))" ]
"1000249" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000250" [label = "(<operator>.addition,v4 + 16)" ]
"1000254" [label = "(<operator>.assignment,*(_DWORD *)v4 = 0)" ]
"1000255" [label = "(<operator>.indirection,*(_DWORD *)v4)" ]
"1000256" [label = "(<operator>.cast,(_DWORD *)v4)" ]
"1000257" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000260" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 24) = v8)" ]
"1000261" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 24))" ]
"1000262" [label = "(<operator>.cast,(_DWORD *)(v4 + 24))" ]
"1000263" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000264" [label = "(<operator>.addition,v4 + 24)" ]
"1000268" [label = "(<operator>.assignment,v9 = a1[14])" ]
"1000270" [label = "(<operator>.indirectIndexAccess,a1[14])" ]
"1000273" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 8) = -100)" ]
"1000274" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 8))" ]
"1000275" [label = "(<operator>.cast,(_DWORD *)(v4 + 8))" ]
"1000276" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000277" [label = "(<operator>.addition,v4 + 8)" ]
"1000280" [label = "(<operator>.minus,-100)" ]
"1000282" [label = "(<operator>.assignment,LODWORD(v9) = *(_DWORD *)(v9 + 4))" ]
"1000283" [label = "(LODWORD,LODWORD(v9))" ]
"1000285" [label = "(<operator>.indirection,*(_DWORD *)(v9 + 4))" ]
"1000286" [label = "(<operator>.cast,(_DWORD *)(v9 + 4))" ]
"1000287" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000288" [label = "(<operator>.addition,v9 + 4)" ]
"1000291" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 344) = v6)" ]
"1000292" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 344))" ]
"1000293" [label = "(<operator>.cast,(_DWORD *)(v4 + 344))" ]
"1000294" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000295" [label = "(<operator>.addition,v4 + 344)" ]
"1000299" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 340) = 512)" ]
"1000300" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 340))" ]
"1000301" [label = "(<operator>.cast,(_DWORD *)(v4 + 340))" ]
"1000302" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000303" [label = "(<operator>.addition,v4 + 340)" ]
"1000307" [label = "(<operator>.assignment,*(_WORD *)(v4 + 72) = v9)" ]
"1000308" [label = "(<operator>.indirection,*(_WORD *)(v4 + 72))" ]
"1000309" [label = "(<operator>.cast,(_WORD *)(v4 + 72))" ]
"1000310" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000311" [label = "(<operator>.addition,v4 + 72)" ]
"1000315" [label = "(tftp_set_timeouts,tftp_set_timeouts(v4))" ]
"1000318" [label = "(<operator>.equals,(*((_BYTE *)a1 + 951) & 2) == 0)" ]
"1000319" [label = "(<operator>.and,*((_BYTE *)a1 + 951) & 2)" ]
"1000320" [label = "(<operator>.indirection,*((_BYTE *)a1 + 951))" ]
"1000321" [label = "(<operator>.addition,(_BYTE *)a1 + 951)" ]
"1000322" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000323" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000330" [label = "(<operator>.assignment,v13 = __errno_location())" ]
"1000332" [label = "(__errno_location,__errno_location())" ]
"1000333" [label = "(Curl_failf,Curl_failf(*a1, (unsigned int)\"bind() failed; %s\", v14, v15, v16, v17, v18[0]))" ]
"1000334" [label = "(<operator>.indirection,*a1)" ]
"1000336" [label = "(<operator>.cast,(unsigned int)\"bind() failed; %s\")" ]
"1000337" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000343" [label = "(<operator>.indirectIndexAccess,v18[0])" ]
"1000347" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 951) |= 2u)" ]
"1000348" [label = "(<operator>.indirection,*((_BYTE *)a1 + 951))" ]
"1000349" [label = "(<operator>.addition,(_BYTE *)a1 + 951)" ]
"1000350" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000351" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000355" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000356" [label = "(<operator>.indirection,*a1)" ]
"1000358" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000359" [label = "(<operator>.indirection,*a2)" ]
"1000118" [label = "(METHOD,tftp_connect)" ]
"1000363" [label = "(METHOD_RETURN,__int64 __fastcall)" ]
  "1000139" -> "1000144" 
  "1000141" -> "1000139" 
  "1000143" -> "1000149" 
  "1000144" -> "1000143" 
  "1000149" -> "1000152" 
  "1000152" -> "1000156" 
  "1000156" -> "1000159" 
  "1000156" -> "1000191" 
  "1000159" -> "1000162" 
  "1000162" -> "1000168" 
  "1000166" -> "1000221" 
  "1000166" -> "1000177" 
  "1000167" -> "1000166" 
  "1000168" -> "1000169" 
  "1000169" -> "1000167" 
  "1000174" -> "1000183" 
  "1000175" -> "1000174" 
  "1000176" -> "1000175" 
  "1000177" -> "1000178" 
  "1000178" -> "1000176" 
  "1000183" -> "1000221" 
  "1000189" -> "1000196" 
  "1000189" -> "1000198" 
  "1000190" -> "1000189" 
  "1000191" -> "1000192" 
  "1000192" -> "1000190" 
  "1000196" -> "1000363" 
  "1000198" -> "1000204" 
  "1000202" -> "1000211" 
  "1000203" -> "1000202" 
  "1000204" -> "1000203" 
  "1000208" -> "1000177" 
  "1000208" -> "1000221" 
  "1000209" -> "1000208" 
  "1000210" -> "1000209" 
  "1000211" -> "1000212" 
  "1000212" -> "1000210" 
  "1000218" -> "1000229" 
  "1000218" -> "1000243" 
  "1000219" -> "1000218" 
  "1000220" -> "1000219" 
  "1000221" -> "1000222" 
  "1000222" -> "1000220" 
  "1000226" -> "1000235" 
  "1000227" -> "1000226" 
  "1000228" -> "1000227" 
  "1000229" -> "1000230" 
  "1000230" -> "1000228" 
  "1000235" -> "1000243" 
  "1000238" -> "1000249" 
  "1000240" -> "1000238" 
  "1000241" -> "1000240" 
  "1000242" -> "1000241" 
  "1000243" -> "1000242" 
  "1000246" -> "1000257" 
  "1000247" -> "1000246" 
  "1000248" -> "1000247" 
  "1000249" -> "1000250" 
  "1000250" -> "1000248" 
  "1000254" -> "1000263" 
  "1000255" -> "1000254" 
  "1000256" -> "1000255" 
  "1000257" -> "1000256" 
  "1000260" -> "1000270" 
  "1000261" -> "1000260" 
  "1000262" -> "1000261" 
  "1000263" -> "1000264" 
  "1000264" -> "1000262" 
  "1000268" -> "1000276" 
  "1000270" -> "1000268" 
  "1000273" -> "1000283" 
  "1000274" -> "1000280" 
  "1000275" -> "1000274" 
  "1000276" -> "1000277" 
  "1000277" -> "1000275" 
  "1000280" -> "1000273" 
  "1000282" -> "1000294" 
  "1000283" -> "1000287" 
  "1000285" -> "1000282" 
  "1000286" -> "1000285" 
  "1000287" -> "1000288" 
  "1000288" -> "1000286" 
  "1000291" -> "1000302" 
  "1000292" -> "1000291" 
  "1000293" -> "1000292" 
  "1000294" -> "1000295" 
  "1000295" -> "1000293" 
  "1000299" -> "1000310" 
  "1000300" -> "1000299" 
  "1000301" -> "1000300" 
  "1000302" -> "1000303" 
  "1000303" -> "1000301" 
  "1000307" -> "1000315" 
  "1000308" -> "1000307" 
  "1000309" -> "1000308" 
  "1000310" -> "1000311" 
  "1000311" -> "1000309" 
  "1000315" -> "1000323" 
  "1000318" -> "1000332" 
  "1000318" -> "1000356" 
  "1000319" -> "1000318" 
  "1000320" -> "1000319" 
  "1000321" -> "1000320" 
  "1000322" -> "1000321" 
  "1000323" -> "1000322" 
  "1000330" -> "1000334" 
  "1000332" -> "1000330" 
  "1000333" -> "1000351" 
  "1000334" -> "1000337" 
  "1000336" -> "1000343" 
  "1000337" -> "1000336" 
  "1000343" -> "1000333" 
  "1000347" -> "1000356" 
  "1000348" -> "1000347" 
  "1000349" -> "1000348" 
  "1000350" -> "1000349" 
  "1000351" -> "1000350" 
  "1000355" -> "1000359" 
  "1000356" -> "1000355" 
  "1000358" -> "1000363" 
  "1000359" -> "1000358" 
  "1000118" -> "1000141" 
}
