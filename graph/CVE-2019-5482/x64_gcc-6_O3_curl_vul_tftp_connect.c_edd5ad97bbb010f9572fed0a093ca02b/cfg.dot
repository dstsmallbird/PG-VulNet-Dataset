digraph tftp_connect {  
"1000135" [label = "(<operator>.assignment,v16 = __readfsqword(0x28u))" ]
"1000137" [label = "(__readfsqword,__readfsqword(0x28u))" ]
"1000139" [label = "(<operator>.assignment,a1[167] = v2)" ]
"1000140" [label = "(<operator>.indirectIndexAccess,a1[167])" ]
"1000145" [label = "(<operator>.logicalNot,!v2)" ]
"1000148" [label = "(<operator>.assignment,v3 = v2)" ]
"1000156" [label = "(<operator>.greaterThan,(unsigned int)(v4 - 8) > 0xFFB0)" ]
"1000157" [label = "(<operator>.cast,(unsigned int)(v4 - 8))" ]
"1000158" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000159" [label = "(<operator>.subtraction,v4 - 8)" ]
"1000163" [label = "(RETURN,return result;,return result;)" ]
"1000167" [label = "(<operator>.assignment,v5 = 512)" ]
"1000171" [label = "(<operator>.logicalNot,!*(_QWORD *)(v3 + 352))" ]
"1000172" [label = "(<operator>.indirection,*(_QWORD *)(v3 + 352))" ]
"1000173" [label = "(<operator>.cast,(_QWORD *)(v3 + 352))" ]
"1000174" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000175" [label = "(<operator>.addition,v3 + 352)" ]
"1000179" [label = "(<operator>.assignment,*(_QWORD *)(v3 + 352) = v8)" ]
"1000180" [label = "(<operator>.indirection,*(_QWORD *)(v3 + 352))" ]
"1000181" [label = "(<operator>.cast,(_QWORD *)(v3 + 352))" ]
"1000182" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000183" [label = "(<operator>.addition,v3 + 352)" ]
"1000188" [label = "(<operator>.logicalNot,!v8)" ]
"1000192" [label = "(<operator>.logicalNot,!*(_QWORD *)(v3 + 360))" ]
"1000193" [label = "(<operator>.indirection,*(_QWORD *)(v3 + 360))" ]
"1000194" [label = "(<operator>.cast,(_QWORD *)(v3 + 360))" ]
"1000195" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000196" [label = "(<operator>.addition,v3 + 360)" ]
"1000200" [label = "(<operator>.assignment,*(_QWORD *)(v3 + 360) = v14)" ]
"1000201" [label = "(<operator>.indirection,*(_QWORD *)(v3 + 360))" ]
"1000202" [label = "(<operator>.cast,(_QWORD *)(v3 + 360))" ]
"1000203" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000204" [label = "(<operator>.addition,v3 + 360)" ]
"1000209" [label = "(<operator>.logicalNot,!v14)" ]
"1000212" [label = "(<operator>.assignment,v6 = *((_DWORD *)a1 + 156))" ]
"1000214" [label = "(<operator>.indirection,*((_DWORD *)a1 + 156))" ]
"1000215" [label = "(<operator>.addition,(_DWORD *)a1 + 156)" ]
"1000216" [label = "(<operator>.cast,(_DWORD *)a1)" ]
"1000217" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000220" [label = "(<operator>.assignment,*(_QWORD *)(v3 + 16) = a1)" ]
"1000221" [label = "(<operator>.indirection,*(_QWORD *)(v3 + 16))" ]
"1000222" [label = "(<operator>.cast,(_QWORD *)(v3 + 16))" ]
"1000223" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000224" [label = "(<operator>.addition,v3 + 16)" ]
"1000228" [label = "(<operator>.assignment,*(_DWORD *)v3 = 0)" ]
"1000229" [label = "(<operator>.indirection,*(_DWORD *)v3)" ]
"1000230" [label = "(<operator>.cast,(_DWORD *)v3)" ]
"1000231" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000234" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 8) = -100)" ]
"1000235" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 8))" ]
"1000236" [label = "(<operator>.cast,(_DWORD *)(v3 + 8))" ]
"1000237" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000238" [label = "(<operator>.addition,v3 + 8)" ]
"1000241" [label = "(<operator>.minus,-100)" ]
"1000243" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 340) = v5)" ]
"1000244" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 340))" ]
"1000245" [label = "(<operator>.cast,(_DWORD *)(v3 + 340))" ]
"1000246" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000247" [label = "(<operator>.addition,v3 + 340)" ]
"1000251" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 344) = v5)" ]
"1000252" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 344))" ]
"1000253" [label = "(<operator>.cast,(_DWORD *)(v3 + 344))" ]
"1000254" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000255" [label = "(<operator>.addition,v3 + 344)" ]
"1000259" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 24) = v6)" ]
"1000260" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 24))" ]
"1000261" [label = "(<operator>.cast,(_DWORD *)(v3 + 24))" ]
"1000262" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000263" [label = "(<operator>.addition,v3 + 24)" ]
"1000267" [label = "(tftp_set_timeouts,tftp_set_timeouts(v3))" ]
"1000270" [label = "(<operator>.notEquals,(*((_BYTE *)a1 + 951) & 2) != 0)" ]
"1000271" [label = "(<operator>.and,*((_BYTE *)a1 + 951) & 2)" ]
"1000272" [label = "(<operator>.indirection,*((_BYTE *)a1 + 951))" ]
"1000273" [label = "(<operator>.addition,(_BYTE *)a1 + 951)" ]
"1000274" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000275" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000282" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000283" [label = "(<operator>.indirection,*a1)" ]
"1000285" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000286" [label = "(<operator>.indirection,*a2)" ]
"1000291" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 951) |= 2u)" ]
"1000292" [label = "(<operator>.indirection,*((_BYTE *)a1 + 951))" ]
"1000293" [label = "(<operator>.addition,(_BYTE *)a1 + 951)" ]
"1000294" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000295" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000300" [label = "(<operator>.assignment,v9 = __errno_location())" ]
"1000302" [label = "(__errno_location,__errno_location())" ]
"1000303" [label = "(Curl_failf,Curl_failf(*a1, (unsigned int)\"bind() failed; %s\", v10, v11, v12, v13, v15[0]))" ]
"1000304" [label = "(<operator>.indirection,*a1)" ]
"1000306" [label = "(<operator>.cast,(unsigned int)\"bind() failed; %s\")" ]
"1000307" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000313" [label = "(<operator>.indirectIndexAccess,v15[0])" ]
"1000116" [label = "(METHOD,tftp_connect)" ]
"1000317" [label = "(METHOD_RETURN,__int64 __fastcall)" ]
  "1000135" -> "1000140" 
  "1000137" -> "1000135" 
  "1000139" -> "1000145" 
  "1000140" -> "1000139" 
  "1000145" -> "1000148" 
  "1000148" -> "1000158" 
  "1000148" -> "1000167" 
  "1000156" -> "1000174" 
  "1000156" -> "1000163" 
  "1000157" -> "1000156" 
  "1000158" -> "1000159" 
  "1000159" -> "1000157" 
  "1000163" -> "1000317" 
  "1000167" -> "1000174" 
  "1000171" -> "1000182" 
  "1000171" -> "1000195" 
  "1000172" -> "1000171" 
  "1000173" -> "1000172" 
  "1000174" -> "1000175" 
  "1000175" -> "1000173" 
  "1000179" -> "1000188" 
  "1000180" -> "1000179" 
  "1000181" -> "1000180" 
  "1000182" -> "1000183" 
  "1000183" -> "1000181" 
  "1000188" -> "1000195" 
  "1000192" -> "1000203" 
  "1000192" -> "1000217" 
  "1000193" -> "1000192" 
  "1000194" -> "1000193" 
  "1000195" -> "1000196" 
  "1000196" -> "1000194" 
  "1000200" -> "1000209" 
  "1000201" -> "1000200" 
  "1000202" -> "1000201" 
  "1000203" -> "1000204" 
  "1000204" -> "1000202" 
  "1000209" -> "1000217" 
  "1000212" -> "1000223" 
  "1000214" -> "1000212" 
  "1000215" -> "1000214" 
  "1000216" -> "1000215" 
  "1000217" -> "1000216" 
  "1000220" -> "1000231" 
  "1000221" -> "1000220" 
  "1000222" -> "1000221" 
  "1000223" -> "1000224" 
  "1000224" -> "1000222" 
  "1000228" -> "1000237" 
  "1000229" -> "1000228" 
  "1000230" -> "1000229" 
  "1000231" -> "1000230" 
  "1000234" -> "1000246" 
  "1000235" -> "1000241" 
  "1000236" -> "1000235" 
  "1000237" -> "1000238" 
  "1000238" -> "1000236" 
  "1000241" -> "1000234" 
  "1000243" -> "1000254" 
  "1000244" -> "1000243" 
  "1000245" -> "1000244" 
  "1000246" -> "1000247" 
  "1000247" -> "1000245" 
  "1000251" -> "1000262" 
  "1000252" -> "1000251" 
  "1000253" -> "1000252" 
  "1000254" -> "1000255" 
  "1000255" -> "1000253" 
  "1000259" -> "1000267" 
  "1000260" -> "1000259" 
  "1000261" -> "1000260" 
  "1000262" -> "1000263" 
  "1000263" -> "1000261" 
  "1000267" -> "1000275" 
  "1000270" -> "1000295" 
  "1000270" -> "1000283" 
  "1000271" -> "1000270" 
  "1000272" -> "1000271" 
  "1000273" -> "1000272" 
  "1000274" -> "1000273" 
  "1000275" -> "1000274" 
  "1000282" -> "1000286" 
  "1000283" -> "1000282" 
  "1000285" -> "1000295" 
  "1000286" -> "1000285" 
  "1000291" -> "1000283" 
  "1000292" -> "1000291" 
  "1000293" -> "1000292" 
  "1000294" -> "1000293" 
  "1000295" -> "1000294" 
  "1000300" -> "1000304" 
  "1000302" -> "1000300" 
  "1000303" -> "1000317" 
  "1000304" -> "1000307" 
  "1000306" -> "1000313" 
  "1000307" -> "1000306" 
  "1000313" -> "1000303" 
  "1000116" -> "1000137" 
}
