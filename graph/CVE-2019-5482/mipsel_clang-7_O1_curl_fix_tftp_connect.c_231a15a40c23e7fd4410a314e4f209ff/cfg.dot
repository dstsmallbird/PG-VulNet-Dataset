digraph tftp_connect {  
"1000131" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000133" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000136" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000137" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000142" [label = "(<operator>.logicalNot,!v4)" ]
"1000144" [label = "(RETURN,return 27;,return 27;)" ]
"1000146" [label = "(<operator>.assignment,v5 = *(_DWORD *)(*a1 + 1576))" ]
"1000148" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000149" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000150" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000151" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000152" [label = "(<operator>.indirection,*a1)" ]
"1000155" [label = "(<operator>.assignment,v6 = v4)" ]
"1000161" [label = "(<operator>.assignment,result = 71)" ]
"1000165" [label = "(<operator>.greaterThan,(unsigned int)(v5 - 8) > 0xFFB0)" ]
"1000166" [label = "(<operator>.cast,(unsigned int)(v5 - 8))" ]
"1000167" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000168" [label = "(<operator>.subtraction,v5 - 8)" ]
"1000172" [label = "(RETURN,return result;,return result;)" ]
"1000174" [label = "(<operator>.assignment,v8 = 512)" ]
"1000178" [label = "(<operator>.greaterEqualsThan,v5 >= 513)" ]
"1000181" [label = "(<operator>.assignment,v8 = *(_DWORD *)(*a1 + 1576))" ]
"1000183" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000184" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000185" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000186" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000187" [label = "(<operator>.indirection,*a1)" ]
"1000190" [label = "(<operator>.assignment,v9 = v8 + 4)" ]
"1000192" [label = "(<operator>.addition,v8 + 4)" ]
"1000196" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000197" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000198" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000199" [label = "(<operator>.addition,v6 + 328)" ]
"1000205" [label = "(<operator>.assignment,v9 = 516)" ]
"1000208" [label = "(<operator>.assignment,v5 = 512)" ]
"1000212" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000213" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000214" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000215" [label = "(<operator>.addition,v4 + 328)" ]
"1000219" [label = "(<operator>.assignment,v10 = Curl_ccalloc(1, v9))" ]
"1000221" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9))" ]
"1000224" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 328) = v10)" ]
"1000225" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000226" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000227" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000228" [label = "(<operator>.addition,v6 + 328)" ]
"1000233" [label = "(<operator>.logicalNot,!v10)" ]
"1000235" [label = "(RETURN,return 27;,return 27;)" ]
"1000239" [label = "(<operator>.logicalOr,*(_DWORD *)(v6 + 332)\n    || (v11 = Curl_ccalloc(1, v9), *(_DWORD *)(v6 + 332) = v11, v12 = v11 == 0, result = 27, !v12))" ]
"1000240" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000241" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000242" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000243" [label = "(<operator>.addition,v6 + 332)" ]
"1000247" [label = "(<operator>.assignment,v11 = Curl_ccalloc(1, v9))" ]
"1000249" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9))" ]
"1000253" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 332) = v11)" ]
"1000254" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000255" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000256" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000257" [label = "(<operator>.addition,v6 + 332)" ]
"1000262" [label = "(<operator>.assignment,v12 = v11 == 0)" ]
"1000264" [label = "(<operator>.equals,v11 == 0)" ]
"1000268" [label = "(<operator>.assignment,result = 27)" ]
"1000271" [label = "(<operator>.logicalNot,!v12)" ]
"1000274" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000277" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 16) = a1)" ]
"1000278" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 16))" ]
"1000279" [label = "(<operator>.cast,(_DWORD *)(v6 + 16))" ]
"1000280" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000281" [label = "(<operator>.addition,v6 + 16)" ]
"1000285" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 20) = a1[105])" ]
"1000286" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000287" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000288" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000289" [label = "(<operator>.addition,v6 + 20)" ]
"1000292" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000295" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 8) = -100)" ]
"1000296" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 8))" ]
"1000297" [label = "(<operator>.cast,(_DWORD *)(v6 + 8))" ]
"1000298" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000299" [label = "(<operator>.addition,v6 + 8)" ]
"1000302" [label = "(<operator>.minus,-100)" ]
"1000304" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 320) = 512)" ]
"1000305" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 320))" ]
"1000306" [label = "(<operator>.cast,(_DWORD *)(v6 + 320))" ]
"1000307" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000308" [label = "(<operator>.addition,v6 + 320)" ]
"1000312" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 324) = v5)" ]
"1000313" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 324))" ]
"1000314" [label = "(<operator>.cast,(_DWORD *)(v6 + 324))" ]
"1000315" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000316" [label = "(<operator>.addition,v6 + 324)" ]
"1000320" [label = "(<operator>.assignment,*(_DWORD *)v6 = 0)" ]
"1000321" [label = "(<operator>.indirection,*(_DWORD *)v6)" ]
"1000322" [label = "(<operator>.cast,(_DWORD *)v6)" ]
"1000323" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000326" [label = "(<operator>.assignment,*(_WORD *)(v6 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000327" [label = "(<operator>.indirection,*(_WORD *)(v6 + 52))" ]
"1000328" [label = "(<operator>.cast,(_WORD *)(v6 + 52))" ]
"1000329" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000330" [label = "(<operator>.addition,v6 + 52)" ]
"1000333" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000334" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000335" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000336" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000337" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000341" [label = "(tftp_set_timeouts,tftp_set_timeouts(v6))" ]
"1000344" [label = "(<operator>.equals,(*((_BYTE *)a1 + 591) & 2) == 0)" ]
"1000345" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000346" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000347" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000348" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000349" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000356" [label = "(bind,bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000357" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000358" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000359" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000360" [label = "(<operator>.addition,v6 + 20)" ]
"1000363" [label = "(<operator>.cast,(const struct sockaddr *)(v6 + 52))" ]
"1000364" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000365" [label = "(<operator>.addition,v6 + 52)" ]
"1000368" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000369" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000370" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000371" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000372" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000377" [label = "(<operator>.assignment,v13 = *a1)" ]
"1000379" [label = "(<operator>.indirection,*a1)" ]
"1000381" [label = "(<operator>.assignment,v14 = *_errno_location())" ]
"1000383" [label = "(<operator>.indirection,*_errno_location())" ]
"1000384" [label = "(_errno_location,_errno_location())" ]
"1000385" [label = "(<operator>.assignment,v15 = (const char *)Curl_strerror(v14, v16, 128))" ]
"1000387" [label = "(<operator>.cast,(const char *)Curl_strerror(v14, v16, 128))" ]
"1000388" [label = "(UNKNOWN,const char *,const char *)" ]
"1000389" [label = "(Curl_strerror,Curl_strerror(v14, v16, 128))" ]
"1000393" [label = "(Curl_failf,Curl_failf(v13, \"bind() failed; %s\", v15))" ]
"1000397" [label = "(RETURN,return 7;,return 7;)" ]
"1000399" [label = "(<operators>.assignmentOr,a1[147] |= 0x2000000u)" ]
"1000400" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000404" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000405" [label = "(<operator>.indirection,*a1)" ]
"1000407" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000408" [label = "(<operator>.indirection,*a2)" ]
"1000411" [label = "(<operator>.assignment,result = 0)" ]
"1000414" [label = "(RETURN,return result;,return result;)" ]
"1000114" [label = "(METHOD,tftp_connect)" ]
"1000416" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000131" -> "1000137" 
  "1000133" -> "1000131" 
  "1000136" -> "1000142" 
  "1000137" -> "1000136" 
  "1000142" -> "1000144" 
  "1000142" -> "1000150" 
  "1000144" -> "1000416" 
  "1000146" -> "1000155" 
  "1000148" -> "1000146" 
  "1000149" -> "1000148" 
  "1000150" -> "1000152" 
  "1000151" -> "1000149" 
  "1000152" -> "1000151" 
  "1000155" -> "1000161" 
  "1000155" -> "1000205" 
  "1000161" -> "1000167" 
  "1000165" -> "1000172" 
  "1000165" -> "1000174" 
  "1000166" -> "1000165" 
  "1000167" -> "1000168" 
  "1000168" -> "1000166" 
  "1000172" -> "1000416" 
  "1000174" -> "1000178" 
  "1000178" -> "1000185" 
  "1000178" -> "1000192" 
  "1000181" -> "1000192" 
  "1000183" -> "1000181" 
  "1000184" -> "1000183" 
  "1000185" -> "1000187" 
  "1000186" -> "1000184" 
  "1000187" -> "1000186" 
  "1000190" -> "1000198" 
  "1000192" -> "1000190" 
  "1000196" -> "1000242" 
  "1000196" -> "1000221" 
  "1000197" -> "1000196" 
  "1000198" -> "1000199" 
  "1000199" -> "1000197" 
  "1000205" -> "1000208" 
  "1000208" -> "1000214" 
  "1000212" -> "1000242" 
  "1000212" -> "1000221" 
  "1000213" -> "1000212" 
  "1000214" -> "1000215" 
  "1000215" -> "1000213" 
  "1000219" -> "1000227" 
  "1000221" -> "1000219" 
  "1000224" -> "1000233" 
  "1000225" -> "1000224" 
  "1000226" -> "1000225" 
  "1000227" -> "1000228" 
  "1000228" -> "1000226" 
  "1000233" -> "1000235" 
  "1000233" -> "1000242" 
  "1000235" -> "1000416" 
  "1000239" -> "1000274" 
  "1000239" -> "1000414" 
  "1000240" -> "1000239" 
  "1000240" -> "1000249" 
  "1000241" -> "1000240" 
  "1000242" -> "1000243" 
  "1000243" -> "1000241" 
  "1000247" -> "1000256" 
  "1000249" -> "1000247" 
  "1000253" -> "1000264" 
  "1000254" -> "1000253" 
  "1000255" -> "1000254" 
  "1000256" -> "1000257" 
  "1000257" -> "1000255" 
  "1000262" -> "1000268" 
  "1000264" -> "1000262" 
  "1000268" -> "1000271" 
  "1000271" -> "1000239" 
  "1000274" -> "1000280" 
  "1000277" -> "1000288" 
  "1000278" -> "1000277" 
  "1000279" -> "1000278" 
  "1000280" -> "1000281" 
  "1000281" -> "1000279" 
  "1000285" -> "1000298" 
  "1000286" -> "1000292" 
  "1000287" -> "1000286" 
  "1000288" -> "1000289" 
  "1000289" -> "1000287" 
  "1000292" -> "1000285" 
  "1000295" -> "1000307" 
  "1000296" -> "1000302" 
  "1000297" -> "1000296" 
  "1000298" -> "1000299" 
  "1000299" -> "1000297" 
  "1000302" -> "1000295" 
  "1000304" -> "1000315" 
  "1000305" -> "1000304" 
  "1000306" -> "1000305" 
  "1000307" -> "1000308" 
  "1000308" -> "1000306" 
  "1000312" -> "1000323" 
  "1000313" -> "1000312" 
  "1000314" -> "1000313" 
  "1000315" -> "1000316" 
  "1000316" -> "1000314" 
  "1000320" -> "1000329" 
  "1000321" -> "1000320" 
  "1000322" -> "1000321" 
  "1000323" -> "1000322" 
  "1000326" -> "1000341" 
  "1000327" -> "1000335" 
  "1000328" -> "1000327" 
  "1000329" -> "1000330" 
  "1000330" -> "1000328" 
  "1000333" -> "1000326" 
  "1000334" -> "1000333" 
  "1000335" -> "1000337" 
  "1000336" -> "1000334" 
  "1000337" -> "1000336" 
  "1000341" -> "1000349" 
  "1000344" -> "1000359" 
  "1000344" -> "1000405" 
  "1000345" -> "1000344" 
  "1000346" -> "1000345" 
  "1000347" -> "1000346" 
  "1000348" -> "1000347" 
  "1000349" -> "1000348" 
  "1000356" -> "1000379" 
  "1000356" -> "1000400" 
  "1000357" -> "1000364" 
  "1000358" -> "1000357" 
  "1000359" -> "1000360" 
  "1000360" -> "1000358" 
  "1000363" -> "1000370" 
  "1000364" -> "1000365" 
  "1000365" -> "1000363" 
  "1000368" -> "1000356" 
  "1000369" -> "1000368" 
  "1000370" -> "1000372" 
  "1000371" -> "1000369" 
  "1000372" -> "1000371" 
  "1000377" -> "1000384" 
  "1000379" -> "1000377" 
  "1000381" -> "1000388" 
  "1000383" -> "1000381" 
  "1000384" -> "1000383" 
  "1000385" -> "1000393" 
  "1000387" -> "1000385" 
  "1000388" -> "1000389" 
  "1000389" -> "1000387" 
  "1000393" -> "1000397" 
  "1000397" -> "1000416" 
  "1000399" -> "1000405" 
  "1000400" -> "1000399" 
  "1000404" -> "1000408" 
  "1000405" -> "1000404" 
  "1000407" -> "1000411" 
  "1000408" -> "1000407" 
  "1000411" -> "1000414" 
  "1000414" -> "1000416" 
  "1000114" -> "1000133" 
}
