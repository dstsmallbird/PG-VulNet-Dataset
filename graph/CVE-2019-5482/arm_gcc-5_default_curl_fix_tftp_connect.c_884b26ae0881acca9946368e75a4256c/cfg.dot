digraph tftp_connect {  
"1000129" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000131" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000134" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000135" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000140" [label = "(<operator>.logicalNot,!v4)" ]
"1000142" [label = "(RETURN,return 27;,return 27;)" ]
"1000144" [label = "(<operator>.assignment,v5 = v4)" ]
"1000147" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000149" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000150" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000151" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000152" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000153" [label = "(<operator>.indirection,*a1)" ]
"1000157" [label = "(<operator>.logicalNot,!v6)" ]
"1000160" [label = "(<operator>.assignment,v7 = 512)" ]
"1000164" [label = "(<operator>.assignment,v6 = v7)" ]
"1000169" [label = "(<operator>.greaterThan,(unsigned int)(v6 - 8) > 0xFFB0)" ]
"1000170" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000171" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000172" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000176" [label = "(RETURN,return 71;,return 71;)" ]
"1000179" [label = "(<operator>.greaterEqualsThan,v6 >= 512)" ]
"1000183" [label = "(<operator>.assignment,v7 = *(_DWORD *)(*a1 + 1576))" ]
"1000185" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000186" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000187" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000188" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000189" [label = "(<operator>.indirection,*a1)" ]
"1000193" [label = "(<operator>.assignment,v7 = 512)" ]
"1000198" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000199" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000200" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000201" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000202" [label = "(<operator>.addition,v4 + 328)" ]
"1000206" [label = "(<operator>.assignment,v10 = Curl_ccalloc(1, v7 + 4))" ]
"1000208" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000210" [label = "(<operator>.addition,v7 + 4)" ]
"1000213" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v10)" ]
"1000214" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000215" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000216" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000217" [label = "(<operator>.addition,v5 + 328)" ]
"1000222" [label = "(<operator>.logicalNot,!v10)" ]
"1000224" [label = "(RETURN,return 27;,return 27;)" ]
"1000227" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 332))" ]
"1000228" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000229" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000230" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000231" [label = "(<operator>.addition,v5 + 332)" ]
"1000235" [label = "(<operator>.assignment,v14 = Curl_ccalloc(1, v7 + 4))" ]
"1000237" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000239" [label = "(<operator>.addition,v7 + 4)" ]
"1000242" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v14)" ]
"1000243" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000244" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000245" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000246" [label = "(<operator>.addition,v5 + 332)" ]
"1000251" [label = "(<operator>.logicalNot,!v14)" ]
"1000253" [label = "(RETURN,return 27;,return 27;)" ]
"1000255" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000258" [label = "(<operator>.assignment,v8 = *(_DWORD *)(a1[20] + 4))" ]
"1000260" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000261" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000262" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000263" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000264" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000268" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = a1[105])" ]
"1000269" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000270" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000271" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000272" [label = "(<operator>.addition,v5 + 20)" ]
"1000275" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000278" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = 512)" ]
"1000279" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000280" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000281" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000282" [label = "(<operator>.addition,v5 + 320)" ]
"1000286" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000287" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000288" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000289" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000290" [label = "(<operator>.addition,v5 + 16)" ]
"1000294" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = v8)" ]
"1000295" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000296" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000297" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000298" [label = "(<operator>.addition,v5 + 52)" ]
"1000302" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v6)" ]
"1000303" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000304" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000305" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000306" [label = "(<operator>.addition,v5 + 324)" ]
"1000310" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000311" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000312" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000313" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000316" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000317" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000318" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000319" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000320" [label = "(<operator>.addition,v5 + 8)" ]
"1000323" [label = "(<operator>.minus,-100)" ]
"1000325" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000328" [label = "(<operator>.notEquals,(*((_BYTE *)a1 + 591) & 2) != 0)" ]
"1000329" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000330" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000331" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000332" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000333" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000340" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000341" [label = "(<operator>.indirection,*a1)" ]
"1000343" [label = "(<operator>.assignment,result = 0)" ]
"1000346" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000347" [label = "(<operator>.indirection,*a2)" ]
"1000350" [label = "(RETURN,return result;,return result;)" ]
"1000353" [label = "(<operator>.logicalNot,!bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000354" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000355" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000356" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000357" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000358" [label = "(<operator>.addition,v5 + 20)" ]
"1000361" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000362" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000363" [label = "(<operator>.addition,v5 + 52)" ]
"1000366" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000367" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000368" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000369" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000370" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000375" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 591) |= 2u)" ]
"1000376" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000377" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000378" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000379" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000384" [label = "(<operator>.assignment,v11 = _errno_location())" ]
"1000386" [label = "(_errno_location,_errno_location())" ]
"1000387" [label = "(<operator>.assignment,v12 = *a1)" ]
"1000389" [label = "(<operator>.indirection,*a1)" ]
"1000391" [label = "(<operator>.assignment,v13 = (const char *)Curl_strerror(*v11, v15, 128))" ]
"1000393" [label = "(<operator>.cast,(const char *)Curl_strerror(*v11, v15, 128))" ]
"1000394" [label = "(UNKNOWN,const char *,const char *)" ]
"1000395" [label = "(Curl_strerror,Curl_strerror(*v11, v15, 128))" ]
"1000396" [label = "(<operator>.indirection,*v11)" ]
"1000400" [label = "(Curl_failf,Curl_failf(v12, \"bind() failed; %s\", v13))" ]
"1000404" [label = "(RETURN,return 7;,return 7;)" ]
"1000113" [label = "(METHOD,tftp_connect)" ]
"1000406" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000129" -> "1000135" 
  "1000131" -> "1000129" 
  "1000134" -> "1000140" 
  "1000135" -> "1000134" 
  "1000140" -> "1000142" 
  "1000140" -> "1000144" 
  "1000142" -> "1000406" 
  "1000144" -> "1000151" 
  "1000147" -> "1000157" 
  "1000149" -> "1000147" 
  "1000150" -> "1000149" 
  "1000151" -> "1000153" 
  "1000152" -> "1000150" 
  "1000153" -> "1000152" 
  "1000157" -> "1000171" 
  "1000157" -> "1000160" 
  "1000160" -> "1000164" 
  "1000164" -> "1000201" 
  "1000169" -> "1000176" 
  "1000169" -> "1000179" 
  "1000170" -> "1000169" 
  "1000171" -> "1000172" 
  "1000172" -> "1000170" 
  "1000176" -> "1000406" 
  "1000179" -> "1000187" 
  "1000179" -> "1000193" 
  "1000183" -> "1000164" 
  "1000185" -> "1000183" 
  "1000186" -> "1000185" 
  "1000187" -> "1000189" 
  "1000188" -> "1000186" 
  "1000189" -> "1000188" 
  "1000193" -> "1000201" 
  "1000198" -> "1000230" 
  "1000198" -> "1000210" 
  "1000199" -> "1000198" 
  "1000200" -> "1000199" 
  "1000201" -> "1000202" 
  "1000202" -> "1000200" 
  "1000206" -> "1000216" 
  "1000208" -> "1000206" 
  "1000210" -> "1000208" 
  "1000213" -> "1000222" 
  "1000214" -> "1000213" 
  "1000215" -> "1000214" 
  "1000216" -> "1000217" 
  "1000217" -> "1000215" 
  "1000222" -> "1000230" 
  "1000222" -> "1000224" 
  "1000224" -> "1000406" 
  "1000227" -> "1000239" 
  "1000227" -> "1000255" 
  "1000228" -> "1000227" 
  "1000229" -> "1000228" 
  "1000230" -> "1000231" 
  "1000231" -> "1000229" 
  "1000235" -> "1000245" 
  "1000237" -> "1000235" 
  "1000239" -> "1000237" 
  "1000242" -> "1000251" 
  "1000243" -> "1000242" 
  "1000244" -> "1000243" 
  "1000245" -> "1000246" 
  "1000246" -> "1000244" 
  "1000251" -> "1000253" 
  "1000251" -> "1000255" 
  "1000253" -> "1000406" 
  "1000255" -> "1000262" 
  "1000258" -> "1000271" 
  "1000260" -> "1000258" 
  "1000261" -> "1000260" 
  "1000262" -> "1000264" 
  "1000263" -> "1000261" 
  "1000264" -> "1000263" 
  "1000268" -> "1000281" 
  "1000269" -> "1000275" 
  "1000270" -> "1000269" 
  "1000271" -> "1000272" 
  "1000272" -> "1000270" 
  "1000275" -> "1000268" 
  "1000278" -> "1000289" 
  "1000279" -> "1000278" 
  "1000280" -> "1000279" 
  "1000281" -> "1000282" 
  "1000282" -> "1000280" 
  "1000286" -> "1000297" 
  "1000287" -> "1000286" 
  "1000288" -> "1000287" 
  "1000289" -> "1000290" 
  "1000290" -> "1000288" 
  "1000294" -> "1000305" 
  "1000295" -> "1000294" 
  "1000296" -> "1000295" 
  "1000297" -> "1000298" 
  "1000298" -> "1000296" 
  "1000302" -> "1000313" 
  "1000303" -> "1000302" 
  "1000304" -> "1000303" 
  "1000305" -> "1000306" 
  "1000306" -> "1000304" 
  "1000310" -> "1000319" 
  "1000311" -> "1000310" 
  "1000312" -> "1000311" 
  "1000313" -> "1000312" 
  "1000316" -> "1000325" 
  "1000317" -> "1000323" 
  "1000318" -> "1000317" 
  "1000319" -> "1000320" 
  "1000320" -> "1000318" 
  "1000323" -> "1000316" 
  "1000325" -> "1000333" 
  "1000328" -> "1000357" 
  "1000328" -> "1000341" 
  "1000329" -> "1000328" 
  "1000330" -> "1000329" 
  "1000331" -> "1000330" 
  "1000332" -> "1000331" 
  "1000333" -> "1000332" 
  "1000340" -> "1000343" 
  "1000341" -> "1000340" 
  "1000343" -> "1000347" 
  "1000346" -> "1000350" 
  "1000347" -> "1000346" 
  "1000350" -> "1000406" 
  "1000353" -> "1000379" 
  "1000353" -> "1000386" 
  "1000354" -> "1000353" 
  "1000355" -> "1000362" 
  "1000356" -> "1000355" 
  "1000357" -> "1000358" 
  "1000358" -> "1000356" 
  "1000361" -> "1000368" 
  "1000362" -> "1000363" 
  "1000363" -> "1000361" 
  "1000366" -> "1000354" 
  "1000367" -> "1000366" 
  "1000368" -> "1000370" 
  "1000369" -> "1000367" 
  "1000370" -> "1000369" 
  "1000375" -> "1000341" 
  "1000376" -> "1000375" 
  "1000377" -> "1000376" 
  "1000378" -> "1000377" 
  "1000379" -> "1000378" 
  "1000384" -> "1000389" 
  "1000386" -> "1000384" 
  "1000387" -> "1000394" 
  "1000389" -> "1000387" 
  "1000391" -> "1000400" 
  "1000393" -> "1000391" 
  "1000394" -> "1000396" 
  "1000395" -> "1000393" 
  "1000396" -> "1000395" 
  "1000400" -> "1000404" 
  "1000404" -> "1000406" 
  "1000113" -> "1000131" 
}
