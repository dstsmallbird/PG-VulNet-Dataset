digraph tftp_connect {  
"1000147" [label = "(int (__cdecl **v19),int (__cdecl **v19)(int, int, int, int))" ]
"1000158" [label = "(<operator>.assignment,buf[32] = __readgsdword(0x14u))" ]
"1000159" [label = "(<operator>.indirectIndexAccess,buf[32])" ]
"1000162" [label = "(__readgsdword,__readgsdword(0x14u))" ]
"1000164" [label = "(<operator>.assignment,v2 = Curl_ccalloc(\n         1,\n         336,\n         v12,\n         v13,\n         v14,\n         v15,\n         a2,\n         &Curl_ccalloc,\n         v21,\n         v22,\n         v23,\n         buf[0],\n         buf[1],\n         buf[2],\n         buf[3],\n         buf[4],\n         buf[5],\n         buf[6],\n         buf[7],\n         buf[8],\n         buf[9],\n         buf[10],\n         buf[11],\n         buf[12],\n         buf[13],\n         buf[14],\n         buf[15],\n         buf[16],\n         buf[17],\n         buf[18],\n         buf[19],\n         buf[20],\n         buf[21],\n         buf[22],\n         buf[23],\n         buf[24],\n         buf[25],\n         buf[26],\n         buf[27],\n         buf[28],\n         buf[29],\n         buf[30],\n         buf[31]))" ]
"1000166" [label = "(Curl_ccalloc,Curl_ccalloc(\n         1,\n         336,\n         v12,\n         v13,\n         v14,\n         v15,\n         a2,\n         &Curl_ccalloc,\n         v21,\n         v22,\n         v23,\n         buf[0],\n         buf[1],\n         buf[2],\n         buf[3],\n         buf[4],\n         buf[5],\n         buf[6],\n         buf[7],\n         buf[8],\n         buf[9],\n         buf[10],\n         buf[11],\n         buf[12],\n         buf[13],\n         buf[14],\n         buf[15],\n         buf[16],\n         buf[17],\n         buf[18],\n         buf[19],\n         buf[20],\n         buf[21],\n         buf[22],\n         buf[23],\n         buf[24],\n         buf[25],\n         buf[26],\n         buf[27],\n         buf[28],\n         buf[29],\n         buf[30],\n         buf[31]))" ]
"1000174" [label = "(<operator>.addressOf,&Curl_ccalloc)" ]
"1000179" [label = "(<operator>.indirectIndexAccess,buf[0])" ]
"1000182" [label = "(<operator>.indirectIndexAccess,buf[1])" ]
"1000185" [label = "(<operator>.indirectIndexAccess,buf[2])" ]
"1000188" [label = "(<operator>.indirectIndexAccess,buf[3])" ]
"1000191" [label = "(<operator>.indirectIndexAccess,buf[4])" ]
"1000194" [label = "(<operator>.indirectIndexAccess,buf[5])" ]
"1000197" [label = "(<operator>.indirectIndexAccess,buf[6])" ]
"1000200" [label = "(<operator>.indirectIndexAccess,buf[7])" ]
"1000203" [label = "(<operator>.indirectIndexAccess,buf[8])" ]
"1000206" [label = "(<operator>.indirectIndexAccess,buf[9])" ]
"1000209" [label = "(<operator>.indirectIndexAccess,buf[10])" ]
"1000212" [label = "(<operator>.indirectIndexAccess,buf[11])" ]
"1000215" [label = "(<operator>.indirectIndexAccess,buf[12])" ]
"1000218" [label = "(<operator>.indirectIndexAccess,buf[13])" ]
"1000221" [label = "(<operator>.indirectIndexAccess,buf[14])" ]
"1000224" [label = "(<operator>.indirectIndexAccess,buf[15])" ]
"1000227" [label = "(<operator>.indirectIndexAccess,buf[16])" ]
"1000230" [label = "(<operator>.indirectIndexAccess,buf[17])" ]
"1000233" [label = "(<operator>.indirectIndexAccess,buf[18])" ]
"1000236" [label = "(<operator>.indirectIndexAccess,buf[19])" ]
"1000239" [label = "(<operator>.indirectIndexAccess,buf[20])" ]
"1000242" [label = "(<operator>.indirectIndexAccess,buf[21])" ]
"1000245" [label = "(<operator>.indirectIndexAccess,buf[22])" ]
"1000248" [label = "(<operator>.indirectIndexAccess,buf[23])" ]
"1000251" [label = "(<operator>.indirectIndexAccess,buf[24])" ]
"1000254" [label = "(<operator>.indirectIndexAccess,buf[25])" ]
"1000257" [label = "(<operator>.indirectIndexAccess,buf[26])" ]
"1000260" [label = "(<operator>.indirectIndexAccess,buf[27])" ]
"1000263" [label = "(<operator>.indirectIndexAccess,buf[28])" ]
"1000266" [label = "(<operator>.indirectIndexAccess,buf[29])" ]
"1000269" [label = "(<operator>.indirectIndexAccess,buf[30])" ]
"1000272" [label = "(<operator>.indirectIndexAccess,buf[31])" ]
"1000275" [label = "(<operator>.assignment,a1[185] = v2)" ]
"1000276" [label = "(<operator>.indirectIndexAccess,a1[185])" ]
"1000281" [label = "(<operator>.logicalNot,!v2)" ]
"1000283" [label = "(RETURN,return 27;,return 27;)" ]
"1000285" [label = "(<operator>.assignment,v4 = v2)" ]
"1000288" [label = "(<operator>.assignment,result = *a1)" ]
"1000290" [label = "(<operator>.indirection,*a1)" ]
"1000292" [label = "(<operator>.assignment,v5 = *(_DWORD *)(*a1 + 1568))" ]
"1000294" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1568))" ]
"1000295" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1568))" ]
"1000296" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000297" [label = "(<operator>.addition,*a1 + 1568)" ]
"1000298" [label = "(<operator>.indirection,*a1)" ]
"1000304" [label = "(<operator>.assignment,result = 71)" ]
"1000308" [label = "(<operator>.greaterThan,(unsigned int)(v5 - 8) > 0xFFB0)" ]
"1000309" [label = "(<operator>.cast,(unsigned int)(v5 - 8))" ]
"1000310" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000311" [label = "(<operator>.subtraction,v5 - 8)" ]
"1000315" [label = "(RETURN,return result;,return result;)" ]
"1000319" [label = "(<operator>.assignment,v5 = 512)" ]
"1000323" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000324" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000325" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000326" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000327" [label = "(<operator>.addition,v4 + 328)" ]
"1000331" [label = "(<operator>.assignment,v16 = v5)" ]
"1000334" [label = "(<operator>.assignment,result = (*v19)(1, v5 + 4, result, result))" ]
"1000336" [label = "(*v19,(*v19)(1, v5 + 4, result, result))" ]
"1000338" [label = "(<operator>.addition,v5 + 4)" ]
"1000343" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 328) = result)" ]
"1000344" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000345" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000346" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000347" [label = "(<operator>.addition,v4 + 328)" ]
"1000351" [label = "(<operator>.assignment,v5 = v16)" ]
"1000355" [label = "(<operator>.logicalNot,!result)" ]
"1000357" [label = "(RETURN,return 27;,return 27;)" ]
"1000360" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 332))" ]
"1000361" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 332))" ]
"1000362" [label = "(<operator>.cast,(_DWORD *)(v4 + 332))" ]
"1000363" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000364" [label = "(<operator>.addition,v4 + 332)" ]
"1000368" [label = "(<operator>.assignment,v17 = v5)" ]
"1000371" [label = "(<operator>.assignment,result = (*v19)(1, v5 + 4, result, result))" ]
"1000373" [label = "(*v19,(*v19)(1, v5 + 4, result, result))" ]
"1000375" [label = "(<operator>.addition,v5 + 4)" ]
"1000380" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 332) = result)" ]
"1000381" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 332))" ]
"1000382" [label = "(<operator>.cast,(_DWORD *)(v4 + 332))" ]
"1000383" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000384" [label = "(<operator>.addition,v4 + 332)" ]
"1000388" [label = "(<operator>.assignment,v5 = v17)" ]
"1000392" [label = "(<operator>.logicalNot,!result)" ]
"1000394" [label = "(RETURN,return 27;,return 27;)" ]
"1000396" [label = "(<operator>.assignment,v25 = result)" ]
"1000399" [label = "(<operator>.assignment,buf[34] = result)" ]
"1000400" [label = "(<operator>.indirectIndexAccess,buf[34])" ]
"1000404" [label = "(<operator>.assignment,v20 = v5)" ]
"1000407" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000410" [label = "(<operator>.assignment,v6 = a1[103])" ]
"1000412" [label = "(<operator>.indirectIndexAccess,a1[103])" ]
"1000415" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 16) = a1)" ]
"1000416" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 16))" ]
"1000417" [label = "(<operator>.cast,(_DWORD *)(v4 + 16))" ]
"1000418" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000419" [label = "(<operator>.addition,v4 + 16)" ]
"1000423" [label = "(<operator>.assignment,*(_DWORD *)v4 = 0)" ]
"1000424" [label = "(<operator>.indirection,*(_DWORD *)v4)" ]
"1000425" [label = "(<operator>.cast,(_DWORD *)v4)" ]
"1000426" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000429" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 8) = -100)" ]
"1000430" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 8))" ]
"1000431" [label = "(<operator>.cast,(_DWORD *)(v4 + 8))" ]
"1000432" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000433" [label = "(<operator>.addition,v4 + 8)" ]
"1000436" [label = "(<operator>.minus,-100)" ]
"1000438" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 20) = v6)" ]
"1000439" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 20))" ]
"1000440" [label = "(<operator>.cast,(_DWORD *)(v4 + 20))" ]
"1000441" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000442" [label = "(<operator>.addition,v4 + 20)" ]
"1000446" [label = "(<operator>.assignment,v7 = a1[18])" ]
"1000448" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000451" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 320) = v20)" ]
"1000452" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 320))" ]
"1000453" [label = "(<operator>.cast,(_DWORD *)(v4 + 320))" ]
"1000454" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000455" [label = "(<operator>.addition,v4 + 320)" ]
"1000459" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 324) = v20)" ]
"1000460" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 324))" ]
"1000461" [label = "(<operator>.cast,(_DWORD *)(v4 + 324))" ]
"1000462" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000463" [label = "(<operator>.addition,v4 + 324)" ]
"1000467" [label = "(<operator>.assignment,*(_WORD *)(v4 + 52) = *(_DWORD *)(v7 + 4))" ]
"1000468" [label = "(<operator>.indirection,*(_WORD *)(v4 + 52))" ]
"1000469" [label = "(<operator>.cast,(_WORD *)(v4 + 52))" ]
"1000470" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000471" [label = "(<operator>.addition,v4 + 52)" ]
"1000474" [label = "(<operator>.indirection,*(_DWORD *)(v7 + 4))" ]
"1000475" [label = "(<operator>.cast,(_DWORD *)(v7 + 4))" ]
"1000476" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000477" [label = "(<operator>.addition,v7 + 4)" ]
"1000480" [label = "(tftp_set_timeouts,tftp_set_timeouts())" ]
"1000482" [label = "(<operator>.equals,(*((_BYTE *)a1 + 583) & 2) == 0)" ]
"1000483" [label = "(<operator>.and,*((_BYTE *)a1 + 583) & 2)" ]
"1000484" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000485" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000486" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000487" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000493" [label = "(<operator>.assignment,v25 = v8)" ]
"1000497" [label = "(bind,bind(*(_DWORD *)(v4 + 20), (const struct sockaddr *)(v4 + 52), *(_DWORD *)(a1[18] + 16)))" ]
"1000498" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 20))" ]
"1000499" [label = "(<operator>.cast,(_DWORD *)(v4 + 20))" ]
"1000500" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000501" [label = "(<operator>.addition,v4 + 20)" ]
"1000504" [label = "(<operator>.cast,(const struct sockaddr *)(v4 + 52))" ]
"1000505" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000506" [label = "(<operator>.addition,v4 + 52)" ]
"1000509" [label = "(<operator>.indirection,*(_DWORD *)(a1[18] + 16))" ]
"1000510" [label = "(<operator>.cast,(_DWORD *)(a1[18] + 16))" ]
"1000511" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000512" [label = "(<operator>.addition,a1[18] + 16)" ]
"1000513" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000518" [label = "(<operator>.assignment,v9 = __errno_location())" ]
"1000520" [label = "(__errno_location,__errno_location())" ]
"1000521" [label = "(<operator>.assignment,v25 = v10)" ]
"1000524" [label = "(<operator>.assignment,v11 = Curl_strerror(*v9, (char *)buf, 128))" ]
"1000526" [label = "(Curl_strerror,Curl_strerror(*v9, (char *)buf, 128))" ]
"1000527" [label = "(<operator>.indirection,*v9)" ]
"1000529" [label = "(<operator>.cast,(char *)buf)" ]
"1000530" [label = "(UNKNOWN,char *,char *)" ]
"1000533" [label = "(Curl_failf,Curl_failf(*a1, \"bind() failed; %s\", v11))" ]
"1000534" [label = "(<operator>.indirection,*a1)" ]
"1000538" [label = "(RETURN,return 7;,return 7;)" ]
"1000540" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 583) |= 2u)" ]
"1000541" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000542" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000543" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000544" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000548" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000549" [label = "(<operator>.indirection,*a1)" ]
"1000551" [label = "(<operator>.assignment,*v18 = 1)" ]
"1000552" [label = "(<operator>.indirection,*v18)" ]
"1000555" [label = "(RETURN,return 0;,return 0;)" ]
"1000126" [label = "(METHOD,tftp_connect)" ]
"1000557" [label = "(METHOD_RETURN,int __cdecl)" ]
  "1000147" -> "1000159" 
  "1000158" -> "1000174" 
  "1000159" -> "1000162" 
  "1000162" -> "1000158" 
  "1000164" -> "1000276" 
  "1000166" -> "1000164" 
  "1000174" -> "1000179" 
  "1000179" -> "1000182" 
  "1000182" -> "1000185" 
  "1000185" -> "1000188" 
  "1000188" -> "1000191" 
  "1000191" -> "1000194" 
  "1000194" -> "1000197" 
  "1000197" -> "1000200" 
  "1000200" -> "1000203" 
  "1000203" -> "1000206" 
  "1000206" -> "1000209" 
  "1000209" -> "1000212" 
  "1000212" -> "1000215" 
  "1000215" -> "1000218" 
  "1000218" -> "1000221" 
  "1000221" -> "1000224" 
  "1000224" -> "1000227" 
  "1000227" -> "1000230" 
  "1000230" -> "1000233" 
  "1000233" -> "1000236" 
  "1000236" -> "1000239" 
  "1000239" -> "1000242" 
  "1000242" -> "1000245" 
  "1000245" -> "1000248" 
  "1000248" -> "1000251" 
  "1000251" -> "1000254" 
  "1000254" -> "1000257" 
  "1000257" -> "1000260" 
  "1000260" -> "1000263" 
  "1000263" -> "1000266" 
  "1000266" -> "1000269" 
  "1000269" -> "1000272" 
  "1000272" -> "1000166" 
  "1000275" -> "1000281" 
  "1000276" -> "1000275" 
  "1000281" -> "1000283" 
  "1000281" -> "1000285" 
  "1000283" -> "1000557" 
  "1000285" -> "1000290" 
  "1000288" -> "1000296" 
  "1000290" -> "1000288" 
  "1000292" -> "1000304" 
  "1000292" -> "1000319" 
  "1000294" -> "1000292" 
  "1000295" -> "1000294" 
  "1000296" -> "1000298" 
  "1000297" -> "1000295" 
  "1000298" -> "1000297" 
  "1000304" -> "1000310" 
  "1000308" -> "1000326" 
  "1000308" -> "1000315" 
  "1000309" -> "1000308" 
  "1000310" -> "1000311" 
  "1000311" -> "1000309" 
  "1000315" -> "1000557" 
  "1000319" -> "1000326" 
  "1000323" -> "1000363" 
  "1000323" -> "1000331" 
  "1000324" -> "1000323" 
  "1000325" -> "1000324" 
  "1000326" -> "1000327" 
  "1000327" -> "1000325" 
  "1000331" -> "1000338" 
  "1000334" -> "1000346" 
  "1000336" -> "1000334" 
  "1000338" -> "1000336" 
  "1000343" -> "1000351" 
  "1000344" -> "1000343" 
  "1000345" -> "1000344" 
  "1000346" -> "1000347" 
  "1000347" -> "1000345" 
  "1000351" -> "1000355" 
  "1000355" -> "1000363" 
  "1000355" -> "1000357" 
  "1000357" -> "1000557" 
  "1000360" -> "1000368" 
  "1000360" -> "1000396" 
  "1000361" -> "1000360" 
  "1000362" -> "1000361" 
  "1000363" -> "1000364" 
  "1000364" -> "1000362" 
  "1000368" -> "1000375" 
  "1000371" -> "1000383" 
  "1000373" -> "1000371" 
  "1000375" -> "1000373" 
  "1000380" -> "1000388" 
  "1000381" -> "1000380" 
  "1000382" -> "1000381" 
  "1000383" -> "1000384" 
  "1000384" -> "1000382" 
  "1000388" -> "1000392" 
  "1000392" -> "1000394" 
  "1000392" -> "1000396" 
  "1000394" -> "1000557" 
  "1000396" -> "1000400" 
  "1000399" -> "1000404" 
  "1000400" -> "1000399" 
  "1000404" -> "1000407" 
  "1000407" -> "1000412" 
  "1000410" -> "1000418" 
  "1000412" -> "1000410" 
  "1000415" -> "1000426" 
  "1000416" -> "1000415" 
  "1000417" -> "1000416" 
  "1000418" -> "1000419" 
  "1000419" -> "1000417" 
  "1000423" -> "1000432" 
  "1000424" -> "1000423" 
  "1000425" -> "1000424" 
  "1000426" -> "1000425" 
  "1000429" -> "1000441" 
  "1000430" -> "1000436" 
  "1000431" -> "1000430" 
  "1000432" -> "1000433" 
  "1000433" -> "1000431" 
  "1000436" -> "1000429" 
  "1000438" -> "1000448" 
  "1000439" -> "1000438" 
  "1000440" -> "1000439" 
  "1000441" -> "1000442" 
  "1000442" -> "1000440" 
  "1000446" -> "1000454" 
  "1000448" -> "1000446" 
  "1000451" -> "1000462" 
  "1000452" -> "1000451" 
  "1000453" -> "1000452" 
  "1000454" -> "1000455" 
  "1000455" -> "1000453" 
  "1000459" -> "1000470" 
  "1000460" -> "1000459" 
  "1000461" -> "1000460" 
  "1000462" -> "1000463" 
  "1000463" -> "1000461" 
  "1000467" -> "1000480" 
  "1000468" -> "1000476" 
  "1000469" -> "1000468" 
  "1000470" -> "1000471" 
  "1000471" -> "1000469" 
  "1000474" -> "1000467" 
  "1000475" -> "1000474" 
  "1000476" -> "1000477" 
  "1000477" -> "1000475" 
  "1000480" -> "1000487" 
  "1000482" -> "1000493" 
  "1000482" -> "1000549" 
  "1000483" -> "1000482" 
  "1000484" -> "1000483" 
  "1000485" -> "1000484" 
  "1000486" -> "1000485" 
  "1000487" -> "1000486" 
  "1000493" -> "1000500" 
  "1000497" -> "1000544" 
  "1000497" -> "1000520" 
  "1000498" -> "1000505" 
  "1000499" -> "1000498" 
  "1000500" -> "1000501" 
  "1000501" -> "1000499" 
  "1000504" -> "1000511" 
  "1000505" -> "1000506" 
  "1000506" -> "1000504" 
  "1000509" -> "1000497" 
  "1000510" -> "1000509" 
  "1000511" -> "1000513" 
  "1000512" -> "1000510" 
  "1000513" -> "1000512" 
  "1000518" -> "1000521" 
  "1000520" -> "1000518" 
  "1000521" -> "1000527" 
  "1000524" -> "1000534" 
  "1000526" -> "1000524" 
  "1000527" -> "1000530" 
  "1000529" -> "1000526" 
  "1000530" -> "1000529" 
  "1000533" -> "1000538" 
  "1000534" -> "1000533" 
  "1000538" -> "1000557" 
  "1000540" -> "1000549" 
  "1000541" -> "1000540" 
  "1000542" -> "1000541" 
  "1000543" -> "1000542" 
  "1000544" -> "1000543" 
  "1000548" -> "1000552" 
  "1000549" -> "1000548" 
  "1000551" -> "1000555" 
  "1000552" -> "1000551" 
  "1000555" -> "1000557" 
  "1000126" -> "1000147" 
}
