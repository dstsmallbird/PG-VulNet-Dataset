digraph tftp_connect {  
"1000135" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000137" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000140" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000141" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000146" [label = "(<operator>.logicalNot,!v4)" ]
"1000148" [label = "(RETURN,return 27;,return 27;)" ]
"1000150" [label = "(<operator>.assignment,v5 = v4)" ]
"1000153" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000155" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000156" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000157" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000158" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000159" [label = "(<operator>.indirection,*a1)" ]
"1000165" [label = "(<operator>.assignment,result = 71)" ]
"1000169" [label = "(<operator>.greaterEqualsThan,(unsigned int)(v6 - 8) >= 0xFFB1)" ]
"1000170" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000171" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000172" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000176" [label = "(RETURN,return result;,return result;)" ]
"1000178" [label = "(<operator>.assignment,v14 = 512)" ]
"1000182" [label = "(<operator>.greaterEqualsThan,v6 >= 512)" ]
"1000185" [label = "(<operator>.assignment,v14 = *(_DWORD *)(*a1 + 1576))" ]
"1000187" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000188" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000189" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000190" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000191" [label = "(<operator>.indirection,*a1)" ]
"1000194" [label = "(<operator>.assignment,v7 = v14)" ]
"1000199" [label = "(<operator>.assignment,v6 = 512)" ]
"1000202" [label = "(<operator>.assignment,v7 = 512)" ]
"1000206" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 328))" ]
"1000207" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000208" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000209" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000210" [label = "(<operator>.addition,v5 + 328)" ]
"1000214" [label = "(<operator>.assignment,v8 = Curl_ccalloc(1, v7 + 4))" ]
"1000216" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000218" [label = "(<operator>.addition,v7 + 4)" ]
"1000221" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v8)" ]
"1000222" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000223" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000224" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000225" [label = "(<operator>.addition,v5 + 328)" ]
"1000230" [label = "(<operator>.logicalNot,!v8)" ]
"1000232" [label = "(RETURN,return 27;,return 27;)" ]
"1000235" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 332))" ]
"1000236" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000237" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000238" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000239" [label = "(<operator>.addition,v5 + 332)" ]
"1000243" [label = "(<operator>.assignment,v9 = Curl_ccalloc(1, v7 + 4))" ]
"1000245" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000247" [label = "(<operator>.addition,v7 + 4)" ]
"1000250" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v9)" ]
"1000251" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000252" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000253" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000254" [label = "(<operator>.addition,v5 + 332)" ]
"1000259" [label = "(<operator>.logicalNot,!v9)" ]
"1000261" [label = "(RETURN,return 27;,return 27;)" ]
"1000263" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000266" [label = "(<operator>.assignment,v10 = a1[20])" ]
"1000268" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000271" [label = "(<operator>.assignment,v11 = a1[105])" ]
"1000273" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000276" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000277" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000278" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000279" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000280" [label = "(<operator>.addition,v5 + 16)" ]
"1000284" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000285" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000286" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000287" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000290" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = v11)" ]
"1000291" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000292" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000293" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000294" [label = "(<operator>.addition,v5 + 20)" ]
"1000298" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v6)" ]
"1000299" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000300" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000301" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000302" [label = "(<operator>.addition,v5 + 324)" ]
"1000306" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000307" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000308" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000309" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000310" [label = "(<operator>.addition,v5 + 8)" ]
"1000313" [label = "(<operator>.minus,-100)" ]
"1000315" [label = "(<operator>.assignment,v12 = *(_DWORD *)(v10 + 4))" ]
"1000317" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 4))" ]
"1000318" [label = "(<operator>.cast,(_DWORD *)(v10 + 4))" ]
"1000319" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000320" [label = "(<operator>.addition,v10 + 4)" ]
"1000323" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = 512)" ]
"1000324" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000325" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000326" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000327" [label = "(<operator>.addition,v5 + 320)" ]
"1000331" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = v12)" ]
"1000332" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000333" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000334" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000335" [label = "(<operator>.addition,v5 + 52)" ]
"1000339" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000342" [label = "(<operator>.equals,(a1[147] & 0x40) == 0)" ]
"1000343" [label = "(<operator>.and,a1[147] & 0x40)" ]
"1000344" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000351" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000352" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000353" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000354" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000355" [label = "(<operator>.addition,v5 + 20)" ]
"1000358" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000359" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000360" [label = "(<operator>.addition,v5 + 52)" ]
"1000363" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000364" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000365" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000366" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000367" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000372" [label = "(<operator>.assignment,v16 = *a1)" ]
"1000374" [label = "(<operator>.indirection,*a1)" ]
"1000376" [label = "(<operator>.assignment,v15 = _errno_location())" ]
"1000378" [label = "(_errno_location,_errno_location())" ]
"1000379" [label = "(<operator>.assignment,v17 = (const char *)Curl_strerror(*v15, v18, 128))" ]
"1000381" [label = "(<operator>.cast,(const char *)Curl_strerror(*v15, v18, 128))" ]
"1000382" [label = "(UNKNOWN,const char *,const char *)" ]
"1000383" [label = "(Curl_strerror,Curl_strerror(*v15, v18, 128))" ]
"1000384" [label = "(<operator>.indirection,*v15)" ]
"1000388" [label = "(Curl_failf,Curl_failf(v16, \"bind() failed; %s\", v17))" ]
"1000392" [label = "(RETURN,return 7;,return 7;)" ]
"1000394" [label = "(<operator>.assignment,a1[147] = a1[147] & 0xFFFFFFBF | 0x40)" ]
"1000395" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000398" [label = "(<operator>.or,a1[147] & 0xFFFFFFBF | 0x40)" ]
"1000399" [label = "(<operator>.and,a1[147] & 0xFFFFFFBF)" ]
"1000400" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000405" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000406" [label = "(<operator>.indirection,*a1)" ]
"1000408" [label = "(<operator>.assignment,result = 0)" ]
"1000411" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000412" [label = "(<operator>.indirection,*a2)" ]
"1000415" [label = "(RETURN,return result;,return result;)" ]
"1000116" [label = "(METHOD,tftp_connect)" ]
"1000417" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000135" -> "1000141" 
  "1000137" -> "1000135" 
  "1000140" -> "1000146" 
  "1000141" -> "1000140" 
  "1000146" -> "1000148" 
  "1000146" -> "1000150" 
  "1000148" -> "1000417" 
  "1000150" -> "1000157" 
  "1000153" -> "1000165" 
  "1000153" -> "1000199" 
  "1000155" -> "1000153" 
  "1000156" -> "1000155" 
  "1000157" -> "1000159" 
  "1000158" -> "1000156" 
  "1000159" -> "1000158" 
  "1000165" -> "1000171" 
  "1000169" -> "1000176" 
  "1000169" -> "1000178" 
  "1000170" -> "1000169" 
  "1000171" -> "1000172" 
  "1000172" -> "1000170" 
  "1000176" -> "1000417" 
  "1000178" -> "1000182" 
  "1000182" -> "1000189" 
  "1000182" -> "1000194" 
  "1000185" -> "1000194" 
  "1000187" -> "1000185" 
  "1000188" -> "1000187" 
  "1000189" -> "1000191" 
  "1000190" -> "1000188" 
  "1000191" -> "1000190" 
  "1000194" -> "1000209" 
  "1000199" -> "1000202" 
  "1000202" -> "1000209" 
  "1000206" -> "1000238" 
  "1000206" -> "1000218" 
  "1000207" -> "1000206" 
  "1000208" -> "1000207" 
  "1000209" -> "1000210" 
  "1000210" -> "1000208" 
  "1000214" -> "1000224" 
  "1000216" -> "1000214" 
  "1000218" -> "1000216" 
  "1000221" -> "1000230" 
  "1000222" -> "1000221" 
  "1000223" -> "1000222" 
  "1000224" -> "1000225" 
  "1000225" -> "1000223" 
  "1000230" -> "1000238" 
  "1000230" -> "1000232" 
  "1000232" -> "1000417" 
  "1000235" -> "1000247" 
  "1000235" -> "1000263" 
  "1000236" -> "1000235" 
  "1000237" -> "1000236" 
  "1000238" -> "1000239" 
  "1000239" -> "1000237" 
  "1000243" -> "1000253" 
  "1000245" -> "1000243" 
  "1000247" -> "1000245" 
  "1000250" -> "1000259" 
  "1000251" -> "1000250" 
  "1000252" -> "1000251" 
  "1000253" -> "1000254" 
  "1000254" -> "1000252" 
  "1000259" -> "1000261" 
  "1000259" -> "1000263" 
  "1000261" -> "1000417" 
  "1000263" -> "1000268" 
  "1000266" -> "1000273" 
  "1000268" -> "1000266" 
  "1000271" -> "1000279" 
  "1000273" -> "1000271" 
  "1000276" -> "1000287" 
  "1000277" -> "1000276" 
  "1000278" -> "1000277" 
  "1000279" -> "1000280" 
  "1000280" -> "1000278" 
  "1000284" -> "1000293" 
  "1000285" -> "1000284" 
  "1000286" -> "1000285" 
  "1000287" -> "1000286" 
  "1000290" -> "1000301" 
  "1000291" -> "1000290" 
  "1000292" -> "1000291" 
  "1000293" -> "1000294" 
  "1000294" -> "1000292" 
  "1000298" -> "1000309" 
  "1000299" -> "1000298" 
  "1000300" -> "1000299" 
  "1000301" -> "1000302" 
  "1000302" -> "1000300" 
  "1000306" -> "1000319" 
  "1000307" -> "1000313" 
  "1000308" -> "1000307" 
  "1000309" -> "1000310" 
  "1000310" -> "1000308" 
  "1000313" -> "1000306" 
  "1000315" -> "1000326" 
  "1000317" -> "1000315" 
  "1000318" -> "1000317" 
  "1000319" -> "1000320" 
  "1000320" -> "1000318" 
  "1000323" -> "1000334" 
  "1000324" -> "1000323" 
  "1000325" -> "1000324" 
  "1000326" -> "1000327" 
  "1000327" -> "1000325" 
  "1000331" -> "1000339" 
  "1000332" -> "1000331" 
  "1000333" -> "1000332" 
  "1000334" -> "1000335" 
  "1000335" -> "1000333" 
  "1000339" -> "1000344" 
  "1000342" -> "1000354" 
  "1000342" -> "1000406" 
  "1000343" -> "1000342" 
  "1000344" -> "1000343" 
  "1000351" -> "1000374" 
  "1000351" -> "1000395" 
  "1000352" -> "1000359" 
  "1000353" -> "1000352" 
  "1000354" -> "1000355" 
  "1000355" -> "1000353" 
  "1000358" -> "1000365" 
  "1000359" -> "1000360" 
  "1000360" -> "1000358" 
  "1000363" -> "1000351" 
  "1000364" -> "1000363" 
  "1000365" -> "1000367" 
  "1000366" -> "1000364" 
  "1000367" -> "1000366" 
  "1000372" -> "1000378" 
  "1000374" -> "1000372" 
  "1000376" -> "1000382" 
  "1000378" -> "1000376" 
  "1000379" -> "1000388" 
  "1000381" -> "1000379" 
  "1000382" -> "1000384" 
  "1000383" -> "1000381" 
  "1000384" -> "1000383" 
  "1000388" -> "1000392" 
  "1000392" -> "1000417" 
  "1000394" -> "1000406" 
  "1000395" -> "1000400" 
  "1000398" -> "1000394" 
  "1000399" -> "1000398" 
  "1000400" -> "1000399" 
  "1000405" -> "1000408" 
  "1000406" -> "1000405" 
  "1000408" -> "1000412" 
  "1000411" -> "1000415" 
  "1000412" -> "1000411" 
  "1000415" -> "1000417" 
  "1000116" -> "1000137" 
}
