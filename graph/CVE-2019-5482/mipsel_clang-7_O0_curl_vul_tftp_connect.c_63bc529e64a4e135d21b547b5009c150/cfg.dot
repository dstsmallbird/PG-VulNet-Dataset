digraph tftp_connect {  
"1000127" [label = "(<operator>.assignment,v14 = a1)" ]
"1000130" [label = "(<operator>.assignment,v13 = a2)" ]
"1000133" [label = "(<operator>.assignment,v11 = 512)" ]
"1000136" [label = "(<operator>.assignment,v2 = Curl_ccalloc(1, 336))" ]
"1000138" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000141" [label = "(<operator>.assignment,v14[188] = v2)" ]
"1000142" [label = "(<operator>.indirectIndexAccess,v14[188])" ]
"1000146" [label = "(<operator>.assignment,v12 = v2)" ]
"1000150" [label = "(<operator>.logicalNot,!v2)" ]
"1000152" [label = "(RETURN,return 27;,return 27;)" ]
"1000155" [label = "(<operator>.indirection,*(_DWORD *)(*v14 + 1576))" ]
"1000156" [label = "(<operator>.cast,(_DWORD *)(*v14 + 1576))" ]
"1000157" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000158" [label = "(<operator>.addition,*v14 + 1576)" ]
"1000159" [label = "(<operator>.indirection,*v14)" ]
"1000163" [label = "(<operator>.assignment,v11 = *(_DWORD *)(*v14 + 1576))" ]
"1000165" [label = "(<operator>.indirection,*(_DWORD *)(*v14 + 1576))" ]
"1000166" [label = "(<operator>.cast,(_DWORD *)(*v14 + 1576))" ]
"1000167" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000168" [label = "(<operator>.addition,*v14 + 1576)" ]
"1000169" [label = "(<operator>.indirection,*v14)" ]
"1000173" [label = "(<operator>.logicalOr,v11 > 65464 || v11 < 8)" ]
"1000174" [label = "(<operator>.greaterThan,v11 > 65464)" ]
"1000177" [label = "(<operator>.lessThan,v11 < 8)" ]
"1000180" [label = "(RETURN,return 71;,return 71;)" ]
"1000183" [label = "(<operator>.logicalNot,!*(_DWORD *)(v12 + 328))" ]
"1000184" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 328))" ]
"1000185" [label = "(<operator>.cast,(_DWORD *)(v12 + 328))" ]
"1000186" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000187" [label = "(<operator>.addition,v12 + 328)" ]
"1000191" [label = "(<operator>.assignment,*(_DWORD *)(v12 + 328) = Curl_ccalloc(1, v11 + 4))" ]
"1000192" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 328))" ]
"1000193" [label = "(<operator>.cast,(_DWORD *)(v12 + 328))" ]
"1000194" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000195" [label = "(<operator>.addition,v12 + 328)" ]
"1000198" [label = "(Curl_ccalloc,Curl_ccalloc(1, v11 + 4))" ]
"1000200" [label = "(<operator>.addition,v11 + 4)" ]
"1000204" [label = "(<operator>.logicalNot,!*(_DWORD *)(v12 + 328))" ]
"1000205" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 328))" ]
"1000206" [label = "(<operator>.cast,(_DWORD *)(v12 + 328))" ]
"1000207" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000208" [label = "(<operator>.addition,v12 + 328)" ]
"1000211" [label = "(RETURN,return 27;,return 27;)" ]
"1000214" [label = "(<operator>.logicalOr,*(_DWORD *)(v12 + 332) || (*(_DWORD *)(v12 + 332) = Curl_ccalloc(1, v11 + 4)) != 0)" ]
"1000215" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 332))" ]
"1000216" [label = "(<operator>.cast,(_DWORD *)(v12 + 332))" ]
"1000217" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000218" [label = "(<operator>.addition,v12 + 332)" ]
"1000221" [label = "(<operator>.notEquals,(*(_DWORD *)(v12 + 332) = Curl_ccalloc(1, v11 + 4)) != 0)" ]
"1000222" [label = "(<operator>.assignment,*(_DWORD *)(v12 + 332) = Curl_ccalloc(1, v11 + 4))" ]
"1000223" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 332))" ]
"1000224" [label = "(<operator>.cast,(_DWORD *)(v12 + 332))" ]
"1000225" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000226" [label = "(<operator>.addition,v12 + 332)" ]
"1000229" [label = "(Curl_ccalloc,Curl_ccalloc(1, v11 + 4))" ]
"1000231" [label = "(<operator>.addition,v11 + 4)" ]
"1000239" [label = "(<operator>.assignment,*(_DWORD *)(v12 + 16) = v14)" ]
"1000240" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 16))" ]
"1000241" [label = "(<operator>.cast,(_DWORD *)(v12 + 16))" ]
"1000242" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000243" [label = "(<operator>.addition,v12 + 16)" ]
"1000247" [label = "(<operator>.assignment,*(_DWORD *)(v12 + 20) = *(_DWORD *)(*(_DWORD *)(v12 + 16) + 420))" ]
"1000248" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 20))" ]
"1000249" [label = "(<operator>.cast,(_DWORD *)(v12 + 20))" ]
"1000250" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000251" [label = "(<operator>.addition,v12 + 20)" ]
"1000254" [label = "(<operator>.indirection,*(_DWORD *)(*(_DWORD *)(v12 + 16) + 420))" ]
"1000255" [label = "(<operator>.cast,(_DWORD *)(*(_DWORD *)(v12 + 16) + 420))" ]
"1000256" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000257" [label = "(<operator>.addition,*(_DWORD *)(v12 + 16) + 420)" ]
"1000258" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 16))" ]
"1000259" [label = "(<operator>.cast,(_DWORD *)(v12 + 16))" ]
"1000260" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000261" [label = "(<operator>.addition,v12 + 16)" ]
"1000265" [label = "(<operator>.assignment,*(_DWORD *)v12 = 0)" ]
"1000266" [label = "(<operator>.indirection,*(_DWORD *)v12)" ]
"1000267" [label = "(<operator>.cast,(_DWORD *)v12)" ]
"1000268" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000271" [label = "(<operator>.assignment,*(_DWORD *)(v12 + 8) = -100)" ]
"1000272" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 8))" ]
"1000273" [label = "(<operator>.cast,(_DWORD *)(v12 + 8))" ]
"1000274" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000275" [label = "(<operator>.addition,v12 + 8)" ]
"1000278" [label = "(<operator>.minus,-100)" ]
"1000280" [label = "(<operator>.assignment,*(_DWORD *)(v12 + 320) = v11)" ]
"1000281" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 320))" ]
"1000282" [label = "(<operator>.cast,(_DWORD *)(v12 + 320))" ]
"1000283" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000284" [label = "(<operator>.addition,v12 + 320)" ]
"1000288" [label = "(<operator>.assignment,*(_DWORD *)(v12 + 324) = v11)" ]
"1000289" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 324))" ]
"1000290" [label = "(<operator>.cast,(_DWORD *)(v12 + 324))" ]
"1000291" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000292" [label = "(<operator>.addition,v12 + 324)" ]
"1000296" [label = "(<operator>.assignment,*(_WORD *)(v12 + 52) = *(_DWORD *)(v14[20] + 4))" ]
"1000297" [label = "(<operator>.indirection,*(_WORD *)(v12 + 52))" ]
"1000298" [label = "(<operator>.cast,(_WORD *)(v12 + 52))" ]
"1000299" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000300" [label = "(<operator>.addition,v12 + 52)" ]
"1000303" [label = "(<operator>.indirection,*(_DWORD *)(v14[20] + 4))" ]
"1000304" [label = "(<operator>.cast,(_DWORD *)(v14[20] + 4))" ]
"1000305" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000306" [label = "(<operator>.addition,v14[20] + 4)" ]
"1000307" [label = "(<operator>.indirectIndexAccess,v14[20])" ]
"1000313" [label = "(<operator>.equals,((v14[147] >> 25) & 1) == 0)" ]
"1000314" [label = "(<operator>.and,(v14[147] >> 25) & 1)" ]
"1000315" [label = "(<operator>.arithmeticShiftRight,v14[147] >> 25)" ]
"1000316" [label = "(<operator>.indirectIndexAccess,v14[147])" ]
"1000324" [label = "(bind,bind(*(_DWORD *)(v12 + 20), (const struct sockaddr *)(v12 + 52), *(_DWORD *)(v14[20] + 16)))" ]
"1000325" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 20))" ]
"1000326" [label = "(<operator>.cast,(_DWORD *)(v12 + 20))" ]
"1000327" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000328" [label = "(<operator>.addition,v12 + 20)" ]
"1000331" [label = "(<operator>.cast,(const struct sockaddr *)(v12 + 52))" ]
"1000332" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000333" [label = "(<operator>.addition,v12 + 52)" ]
"1000336" [label = "(<operator>.indirection,*(_DWORD *)(v14[20] + 16))" ]
"1000337" [label = "(<operator>.cast,(_DWORD *)(v14[20] + 16))" ]
"1000338" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000339" [label = "(<operator>.addition,v14[20] + 16)" ]
"1000340" [label = "(<operator>.indirectIndexAccess,v14[20])" ]
"1000345" [label = "(<operator>.assignment,v8 = *v14)" ]
"1000347" [label = "(<operator>.indirection,*v14)" ]
"1000349" [label = "(<operator>.assignment,v3 = _errno_location())" ]
"1000351" [label = "(_errno_location,_errno_location())" ]
"1000353" [label = "(<operator>.indirection,*v3)" ]
"1000361" [label = "(<operator>.addressOf,&unk_BFC55)" ]
"1000364" [label = "(RETURN,return 7;,return 7;)" ]
"1000366" [label = "(<operator>.assignment,v5 = v14)" ]
"1000369" [label = "(<operator>.assignment,v6 = v14[147] | 0x2000000)" ]
"1000371" [label = "(<operator>.or,v14[147] | 0x2000000)" ]
"1000372" [label = "(<operator>.indirectIndexAccess,v14[147])" ]
"1000376" [label = "(<operator>.assignment,v14[148] = v14[148])" ]
"1000377" [label = "(<operator>.indirectIndexAccess,v14[148])" ]
"1000380" [label = "(<operator>.indirectIndexAccess,v14[148])" ]
"1000383" [label = "(<operator>.assignment,v5[147] = v6)" ]
"1000384" [label = "(<operator>.indirectIndexAccess,v5[147])" ]
"1000388" [label = "(<operator>.indirection,*v14)" ]
"1000390" [label = "(<operator>.assignment,*v13 = 1)" ]
"1000391" [label = "(<operator>.indirection,*v13)" ]
"1000394" [label = "(RETURN,return 0;,return 0;)" ]
"1000396" [label = "(RETURN,return 27;,return 27;)" ]
"1000112" [label = "(METHOD,tftp_connect)" ]
"1000398" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000127" -> "1000130" 
  "1000130" -> "1000133" 
  "1000133" -> "1000138" 
  "1000136" -> "1000142" 
  "1000138" -> "1000136" 
  "1000141" -> "1000146" 
  "1000142" -> "1000141" 
  "1000146" -> "1000150" 
  "1000150" -> "1000157" 
  "1000150" -> "1000152" 
  "1000152" -> "1000398" 
  "1000155" -> "1000186" 
  "1000155" -> "1000167" 
  "1000156" -> "1000155" 
  "1000157" -> "1000159" 
  "1000158" -> "1000156" 
  "1000159" -> "1000158" 
  "1000163" -> "1000174" 
  "1000165" -> "1000163" 
  "1000166" -> "1000165" 
  "1000167" -> "1000169" 
  "1000168" -> "1000166" 
  "1000169" -> "1000168" 
  "1000173" -> "1000186" 
  "1000173" -> "1000180" 
  "1000174" -> "1000173" 
  "1000174" -> "1000177" 
  "1000177" -> "1000173" 
  "1000180" -> "1000398" 
  "1000183" -> "1000194" 
  "1000183" -> "1000217" 
  "1000184" -> "1000183" 
  "1000185" -> "1000184" 
  "1000186" -> "1000187" 
  "1000187" -> "1000185" 
  "1000191" -> "1000207" 
  "1000192" -> "1000200" 
  "1000193" -> "1000192" 
  "1000194" -> "1000195" 
  "1000195" -> "1000193" 
  "1000198" -> "1000191" 
  "1000200" -> "1000198" 
  "1000204" -> "1000217" 
  "1000204" -> "1000211" 
  "1000205" -> "1000204" 
  "1000206" -> "1000205" 
  "1000207" -> "1000208" 
  "1000208" -> "1000206" 
  "1000211" -> "1000398" 
  "1000214" -> "1000242" 
  "1000214" -> "1000396" 
  "1000215" -> "1000225" 
  "1000215" -> "1000214" 
  "1000216" -> "1000215" 
  "1000217" -> "1000218" 
  "1000218" -> "1000216" 
  "1000221" -> "1000214" 
  "1000222" -> "1000221" 
  "1000223" -> "1000231" 
  "1000224" -> "1000223" 
  "1000225" -> "1000226" 
  "1000226" -> "1000224" 
  "1000229" -> "1000222" 
  "1000231" -> "1000229" 
  "1000239" -> "1000250" 
  "1000240" -> "1000239" 
  "1000241" -> "1000240" 
  "1000242" -> "1000243" 
  "1000243" -> "1000241" 
  "1000247" -> "1000268" 
  "1000248" -> "1000256" 
  "1000249" -> "1000248" 
  "1000250" -> "1000251" 
  "1000251" -> "1000249" 
  "1000254" -> "1000247" 
  "1000255" -> "1000254" 
  "1000256" -> "1000260" 
  "1000257" -> "1000255" 
  "1000258" -> "1000257" 
  "1000259" -> "1000258" 
  "1000260" -> "1000261" 
  "1000261" -> "1000259" 
  "1000265" -> "1000274" 
  "1000266" -> "1000265" 
  "1000267" -> "1000266" 
  "1000268" -> "1000267" 
  "1000271" -> "1000283" 
  "1000272" -> "1000278" 
  "1000273" -> "1000272" 
  "1000274" -> "1000275" 
  "1000275" -> "1000273" 
  "1000278" -> "1000271" 
  "1000280" -> "1000291" 
  "1000281" -> "1000280" 
  "1000282" -> "1000281" 
  "1000283" -> "1000284" 
  "1000284" -> "1000282" 
  "1000288" -> "1000299" 
  "1000289" -> "1000288" 
  "1000290" -> "1000289" 
  "1000291" -> "1000292" 
  "1000292" -> "1000290" 
  "1000296" -> "1000316" 
  "1000297" -> "1000305" 
  "1000298" -> "1000297" 
  "1000299" -> "1000300" 
  "1000300" -> "1000298" 
  "1000303" -> "1000296" 
  "1000304" -> "1000303" 
  "1000305" -> "1000307" 
  "1000306" -> "1000304" 
  "1000307" -> "1000306" 
  "1000313" -> "1000327" 
  "1000313" -> "1000388" 
  "1000314" -> "1000313" 
  "1000315" -> "1000314" 
  "1000316" -> "1000315" 
  "1000324" -> "1000347" 
  "1000324" -> "1000366" 
  "1000325" -> "1000332" 
  "1000326" -> "1000325" 
  "1000327" -> "1000328" 
  "1000328" -> "1000326" 
  "1000331" -> "1000338" 
  "1000332" -> "1000333" 
  "1000333" -> "1000331" 
  "1000336" -> "1000324" 
  "1000337" -> "1000336" 
  "1000338" -> "1000340" 
  "1000339" -> "1000337" 
  "1000340" -> "1000339" 
  "1000345" -> "1000351" 
  "1000347" -> "1000345" 
  "1000349" -> "1000353" 
  "1000351" -> "1000349" 
  "1000353" -> "1000361" 
  "1000361" -> "1000364" 
  "1000364" -> "1000398" 
  "1000366" -> "1000372" 
  "1000369" -> "1000377" 
  "1000371" -> "1000369" 
  "1000372" -> "1000371" 
  "1000376" -> "1000384" 
  "1000377" -> "1000380" 
  "1000380" -> "1000376" 
  "1000383" -> "1000388" 
  "1000384" -> "1000383" 
  "1000388" -> "1000391" 
  "1000390" -> "1000394" 
  "1000391" -> "1000390" 
  "1000394" -> "1000398" 
  "1000396" -> "1000398" 
  "1000112" -> "1000127" 
}
