digraph tftp_connect {  
"1000131" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000133" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000136" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000137" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000142" [label = "(<operator>.logicalNot,!v4)" ]
"1000144" [label = "(RETURN,return 27;,return 27;)" ]
"1000146" [label = "(<operator>.assignment,v6 = v4)" ]
"1000149" [label = "(<operator>.assignment,v7 = *(_DWORD *)(*a1 + 1576))" ]
"1000151" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000152" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000153" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000154" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000155" [label = "(<operator>.indirection,*a1)" ]
"1000159" [label = "(<operator>.logicalNot,!v7)" ]
"1000162" [label = "(<operator>.assignment,v7 = 512)" ]
"1000165" [label = "(<operator>.assignment,v9 = 512)" ]
"1000169" [label = "(<operator>.assignment,result = 71)" ]
"1000173" [label = "(<operator>.lessThan,(unsigned int)(v7 - 8) < 0xFFB1)" ]
"1000174" [label = "(<operator>.cast,(unsigned int)(v7 - 8))" ]
"1000175" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000176" [label = "(<operator>.subtraction,v7 - 8)" ]
"1000181" [label = "(<operator>.assignment,v8 = 512)" ]
"1000185" [label = "(<operator>.greaterEqualsThan,v7 >= 512)" ]
"1000188" [label = "(<operator>.assignment,v8 = *(_DWORD *)(*a1 + 1576))" ]
"1000190" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000191" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000192" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000193" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000194" [label = "(<operator>.indirection,*a1)" ]
"1000197" [label = "(<operator>.assignment,v9 = v8)" ]
"1000202" [label = "(<operator>.logicalNot,!*(_DWORD *)(v6 + 328))" ]
"1000203" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000204" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000205" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000206" [label = "(<operator>.addition,v6 + 328)" ]
"1000210" [label = "(<operator>.assignment,v12 = Curl_ccalloc(1, v9 + 4))" ]
"1000212" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9 + 4))" ]
"1000214" [label = "(<operator>.addition,v9 + 4)" ]
"1000217" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 328) = v12)" ]
"1000218" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000219" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000220" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000221" [label = "(<operator>.addition,v6 + 328)" ]
"1000226" [label = "(<operator>.logicalNot,!v12)" ]
"1000228" [label = "(RETURN,return 27;,return 27;)" ]
"1000231" [label = "(<operator>.logicalOr,*(_DWORD *)(v6 + 332) || (v10 = Curl_ccalloc(1, v9 + 4), (*(_DWORD *)(v6 + 332) = v10) != 0))" ]
"1000232" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000233" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000234" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000235" [label = "(<operator>.addition,v6 + 332)" ]
"1000239" [label = "(<operator>.assignment,v10 = Curl_ccalloc(1, v9 + 4))" ]
"1000241" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9 + 4))" ]
"1000243" [label = "(<operator>.addition,v9 + 4)" ]
"1000246" [label = "(<operator>.notEquals,(*(_DWORD *)(v6 + 332) = v10) != 0)" ]
"1000247" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 332) = v10)" ]
"1000248" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000249" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000250" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000251" [label = "(<operator>.addition,v6 + 332)" ]
"1000257" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000260" [label = "(<operator>.assignment,v11 = a1[105])" ]
"1000262" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000265" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 16) = a1)" ]
"1000266" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 16))" ]
"1000267" [label = "(<operator>.cast,(_DWORD *)(v6 + 16))" ]
"1000268" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000269" [label = "(<operator>.addition,v6 + 16)" ]
"1000273" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 20) = v11)" ]
"1000274" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000275" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000276" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000277" [label = "(<operator>.addition,v6 + 20)" ]
"1000281" [label = "(<operator>.assignment,*(_DWORD *)v6 = 0)" ]
"1000282" [label = "(<operator>.indirection,*(_DWORD *)v6)" ]
"1000283" [label = "(<operator>.cast,(_DWORD *)v6)" ]
"1000284" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000287" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 8) = -100)" ]
"1000288" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 8))" ]
"1000289" [label = "(<operator>.cast,(_DWORD *)(v6 + 8))" ]
"1000290" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000291" [label = "(<operator>.addition,v6 + 8)" ]
"1000294" [label = "(<operator>.minus,-100)" ]
"1000296" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 324) = v7)" ]
"1000297" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 324))" ]
"1000298" [label = "(<operator>.cast,(_DWORD *)(v6 + 324))" ]
"1000299" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000300" [label = "(<operator>.addition,v6 + 324)" ]
"1000304" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 320) = 512)" ]
"1000305" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 320))" ]
"1000306" [label = "(<operator>.cast,(_DWORD *)(v6 + 320))" ]
"1000307" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000308" [label = "(<operator>.addition,v6 + 320)" ]
"1000312" [label = "(<operator>.assignment,*(_WORD *)(v6 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000313" [label = "(<operator>.indirection,*(_WORD *)(v6 + 52))" ]
"1000314" [label = "(<operator>.cast,(_WORD *)(v6 + 52))" ]
"1000315" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000316" [label = "(<operator>.addition,v6 + 52)" ]
"1000319" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000320" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000321" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000322" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000323" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000327" [label = "(tftp_set_timeouts,tftp_set_timeouts(v6))" ]
"1000330" [label = "(<operator>.equals,((a1[147] >> 25) & 1) == 0)" ]
"1000331" [label = "(<operator>.and,(a1[147] >> 25) & 1)" ]
"1000332" [label = "(<operator>.arithmeticShiftRight,a1[147] >> 25)" ]
"1000333" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000341" [label = "(bind,bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000342" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000343" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000344" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000345" [label = "(<operator>.addition,v6 + 20)" ]
"1000348" [label = "(<operator>.cast,(const struct sockaddr *)(v6 + 52))" ]
"1000349" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000350" [label = "(<operator>.addition,v6 + 52)" ]
"1000353" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000354" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000355" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000356" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000357" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000362" [label = "(<operator>.assignment,v14 = *a1)" ]
"1000364" [label = "(<operator>.indirection,*a1)" ]
"1000366" [label = "(<operator>.assignment,v13 = _errno_location())" ]
"1000368" [label = "(_errno_location,_errno_location())" ]
"1000369" [label = "(<operator>.assignment,v15 = (const char *)Curl_strerror(*v13, v16, 128))" ]
"1000371" [label = "(<operator>.cast,(const char *)Curl_strerror(*v13, v16, 128))" ]
"1000372" [label = "(UNKNOWN,const char *,const char *)" ]
"1000373" [label = "(Curl_strerror,Curl_strerror(*v13, v16, 128))" ]
"1000374" [label = "(<operator>.indirection,*v13)" ]
"1000378" [label = "(Curl_failf,Curl_failf(v14, \"bind() failed; %s\", v15))" ]
"1000382" [label = "(RETURN,return 7;,return 7;)" ]
"1000384" [label = "(<operator>.assignment,a1[147] = a1[147] & 0xFDFFFFFF | 0x2000000)" ]
"1000385" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000388" [label = "(<operator>.or,a1[147] & 0xFDFFFFFF | 0x2000000)" ]
"1000389" [label = "(<operator>.and,a1[147] & 0xFDFFFFFF)" ]
"1000390" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000395" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000396" [label = "(<operator>.indirection,*a1)" ]
"1000398" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000399" [label = "(<operator>.indirection,*a2)" ]
"1000402" [label = "(RETURN,return 0;,return 0;)" ]
"1000404" [label = "(RETURN,return 27;,return 27;)" ]
"1000406" [label = "(RETURN,return result;,return result;)" ]
"1000114" [label = "(METHOD,tftp_connect)" ]
"1000408" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000131" -> "1000137" 
  "1000133" -> "1000131" 
  "1000136" -> "1000142" 
  "1000137" -> "1000136" 
  "1000142" -> "1000144" 
  "1000142" -> "1000146" 
  "1000144" -> "1000408" 
  "1000146" -> "1000153" 
  "1000149" -> "1000159" 
  "1000151" -> "1000149" 
  "1000152" -> "1000151" 
  "1000153" -> "1000155" 
  "1000154" -> "1000152" 
  "1000155" -> "1000154" 
  "1000159" -> "1000162" 
  "1000159" -> "1000169" 
  "1000162" -> "1000165" 
  "1000165" -> "1000205" 
  "1000169" -> "1000175" 
  "1000173" -> "1000181" 
  "1000173" -> "1000406" 
  "1000174" -> "1000173" 
  "1000175" -> "1000176" 
  "1000176" -> "1000174" 
  "1000181" -> "1000185" 
  "1000185" -> "1000192" 
  "1000185" -> "1000197" 
  "1000188" -> "1000197" 
  "1000190" -> "1000188" 
  "1000191" -> "1000190" 
  "1000192" -> "1000194" 
  "1000193" -> "1000191" 
  "1000194" -> "1000193" 
  "1000197" -> "1000205" 
  "1000202" -> "1000234" 
  "1000202" -> "1000214" 
  "1000203" -> "1000202" 
  "1000204" -> "1000203" 
  "1000205" -> "1000206" 
  "1000206" -> "1000204" 
  "1000210" -> "1000220" 
  "1000212" -> "1000210" 
  "1000214" -> "1000212" 
  "1000217" -> "1000226" 
  "1000218" -> "1000217" 
  "1000219" -> "1000218" 
  "1000220" -> "1000221" 
  "1000221" -> "1000219" 
  "1000226" -> "1000234" 
  "1000226" -> "1000228" 
  "1000228" -> "1000408" 
  "1000231" -> "1000257" 
  "1000231" -> "1000404" 
  "1000232" -> "1000231" 
  "1000232" -> "1000243" 
  "1000233" -> "1000232" 
  "1000234" -> "1000235" 
  "1000235" -> "1000233" 
  "1000239" -> "1000250" 
  "1000241" -> "1000239" 
  "1000243" -> "1000241" 
  "1000246" -> "1000231" 
  "1000247" -> "1000246" 
  "1000248" -> "1000247" 
  "1000249" -> "1000248" 
  "1000250" -> "1000251" 
  "1000251" -> "1000249" 
  "1000257" -> "1000262" 
  "1000260" -> "1000268" 
  "1000262" -> "1000260" 
  "1000265" -> "1000276" 
  "1000266" -> "1000265" 
  "1000267" -> "1000266" 
  "1000268" -> "1000269" 
  "1000269" -> "1000267" 
  "1000273" -> "1000284" 
  "1000274" -> "1000273" 
  "1000275" -> "1000274" 
  "1000276" -> "1000277" 
  "1000277" -> "1000275" 
  "1000281" -> "1000290" 
  "1000282" -> "1000281" 
  "1000283" -> "1000282" 
  "1000284" -> "1000283" 
  "1000287" -> "1000299" 
  "1000288" -> "1000294" 
  "1000289" -> "1000288" 
  "1000290" -> "1000291" 
  "1000291" -> "1000289" 
  "1000294" -> "1000287" 
  "1000296" -> "1000307" 
  "1000297" -> "1000296" 
  "1000298" -> "1000297" 
  "1000299" -> "1000300" 
  "1000300" -> "1000298" 
  "1000304" -> "1000315" 
  "1000305" -> "1000304" 
  "1000306" -> "1000305" 
  "1000307" -> "1000308" 
  "1000308" -> "1000306" 
  "1000312" -> "1000327" 
  "1000313" -> "1000321" 
  "1000314" -> "1000313" 
  "1000315" -> "1000316" 
  "1000316" -> "1000314" 
  "1000319" -> "1000312" 
  "1000320" -> "1000319" 
  "1000321" -> "1000323" 
  "1000322" -> "1000320" 
  "1000323" -> "1000322" 
  "1000327" -> "1000333" 
  "1000330" -> "1000344" 
  "1000330" -> "1000396" 
  "1000331" -> "1000330" 
  "1000332" -> "1000331" 
  "1000333" -> "1000332" 
  "1000341" -> "1000364" 
  "1000341" -> "1000385" 
  "1000342" -> "1000349" 
  "1000343" -> "1000342" 
  "1000344" -> "1000345" 
  "1000345" -> "1000343" 
  "1000348" -> "1000355" 
  "1000349" -> "1000350" 
  "1000350" -> "1000348" 
  "1000353" -> "1000341" 
  "1000354" -> "1000353" 
  "1000355" -> "1000357" 
  "1000356" -> "1000354" 
  "1000357" -> "1000356" 
  "1000362" -> "1000368" 
  "1000364" -> "1000362" 
  "1000366" -> "1000372" 
  "1000368" -> "1000366" 
  "1000369" -> "1000378" 
  "1000371" -> "1000369" 
  "1000372" -> "1000374" 
  "1000373" -> "1000371" 
  "1000374" -> "1000373" 
  "1000378" -> "1000382" 
  "1000382" -> "1000408" 
  "1000384" -> "1000396" 
  "1000385" -> "1000390" 
  "1000388" -> "1000384" 
  "1000389" -> "1000388" 
  "1000390" -> "1000389" 
  "1000395" -> "1000399" 
  "1000396" -> "1000395" 
  "1000398" -> "1000402" 
  "1000399" -> "1000398" 
  "1000402" -> "1000408" 
  "1000404" -> "1000408" 
  "1000406" -> "1000408" 
  "1000114" -> "1000133" 
}
