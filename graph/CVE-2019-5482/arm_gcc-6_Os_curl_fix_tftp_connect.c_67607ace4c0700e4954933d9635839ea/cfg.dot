digraph tftp_connect {  
"1000133" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000135" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000138" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000139" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000144" [label = "(<operator>.logicalNot,!v4)" ]
"1000146" [label = "(RETURN,return 27;,return 27;)" ]
"1000148" [label = "(<operator>.assignment,v6 = v4)" ]
"1000151" [label = "(<operator>.assignment,v7 = *(_DWORD *)(*a1 + 1576))" ]
"1000153" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000154" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000155" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000156" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000157" [label = "(<operator>.indirection,*a1)" ]
"1000164" [label = "(<operator>.greaterThan,(unsigned int)(v7 - 8) > 0xFFB0)" ]
"1000165" [label = "(<operator>.cast,(unsigned int)(v7 - 8))" ]
"1000166" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000167" [label = "(<operator>.subtraction,v7 - 8)" ]
"1000171" [label = "(RETURN,return 71;,return 71;)" ]
"1000174" [label = "(<operator>.lessThan,v7 < 512)" ]
"1000177" [label = "(<operator>.assignment,v8 = 512)" ]
"1000181" [label = "(<operator>.assignment,v8 = *(_DWORD *)(*a1 + 1576))" ]
"1000183" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000184" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000185" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000186" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000187" [label = "(<operator>.indirection,*a1)" ]
"1000190" [label = "(<operator>.assignment,v9 = *(_DWORD *)(*a1 + 1576))" ]
"1000192" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000193" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000194" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000195" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000196" [label = "(<operator>.indirection,*a1)" ]
"1000201" [label = "(<operator>.assignment,v9 = 512)" ]
"1000204" [label = "(<operator>.assignment,v8 = 512)" ]
"1000208" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000209" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000210" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000211" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000212" [label = "(<operator>.addition,v4 + 328)" ]
"1000216" [label = "(<operator>.assignment,v13 = Curl_ccalloc(1, v8 + 4))" ]
"1000218" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000220" [label = "(<operator>.addition,v8 + 4)" ]
"1000223" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 328) = v13)" ]
"1000224" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000225" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000226" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000227" [label = "(<operator>.addition,v6 + 328)" ]
"1000232" [label = "(<operator>.logicalNot,!v13)" ]
"1000234" [label = "(RETURN,return 27;,return 27;)" ]
"1000237" [label = "(<operator>.logicalNot,!*(_DWORD *)(v6 + 332))" ]
"1000238" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000239" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000240" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000241" [label = "(<operator>.addition,v6 + 332)" ]
"1000245" [label = "(<operator>.assignment,v10 = Curl_ccalloc(1, v8 + 4))" ]
"1000247" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000249" [label = "(<operator>.addition,v8 + 4)" ]
"1000252" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 332) = v10)" ]
"1000253" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000254" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000255" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000256" [label = "(<operator>.addition,v6 + 332)" ]
"1000261" [label = "(<operator>.logicalNot,!v10)" ]
"1000263" [label = "(RETURN,return 27;,return 27;)" ]
"1000265" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000268" [label = "(<operator>.assignment,v11 = a1[105])" ]
"1000270" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000273" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 16) = a1)" ]
"1000274" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 16))" ]
"1000275" [label = "(<operator>.cast,(_DWORD *)(v6 + 16))" ]
"1000276" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000277" [label = "(<operator>.addition,v6 + 16)" ]
"1000281" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 20) = v11)" ]
"1000282" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000283" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000284" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000285" [label = "(<operator>.addition,v6 + 20)" ]
"1000289" [label = "(<operator>.assignment,*(_DWORD *)v6 = 0)" ]
"1000290" [label = "(<operator>.indirection,*(_DWORD *)v6)" ]
"1000291" [label = "(<operator>.cast,(_DWORD *)v6)" ]
"1000292" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000295" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 8) = -100)" ]
"1000296" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 8))" ]
"1000297" [label = "(<operator>.cast,(_DWORD *)(v6 + 8))" ]
"1000298" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000299" [label = "(<operator>.addition,v6 + 8)" ]
"1000302" [label = "(<operator>.minus,-100)" ]
"1000304" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 320) = 512)" ]
"1000305" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 320))" ]
"1000306" [label = "(<operator>.cast,(_DWORD *)(v6 + 320))" ]
"1000307" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000308" [label = "(<operator>.addition,v6 + 320)" ]
"1000312" [label = "(<operator>.assignment,v12 = a1[20])" ]
"1000314" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000317" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 324) = v9)" ]
"1000318" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 324))" ]
"1000319" [label = "(<operator>.cast,(_DWORD *)(v6 + 324))" ]
"1000320" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000321" [label = "(<operator>.addition,v6 + 324)" ]
"1000325" [label = "(<operator>.assignment,*(_WORD *)(v6 + 52) = *(_DWORD *)(v12 + 4))" ]
"1000326" [label = "(<operator>.indirection,*(_WORD *)(v6 + 52))" ]
"1000327" [label = "(<operator>.cast,(_WORD *)(v6 + 52))" ]
"1000328" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000329" [label = "(<operator>.addition,v6 + 52)" ]
"1000332" [label = "(<operator>.indirection,*(_DWORD *)(v12 + 4))" ]
"1000333" [label = "(<operator>.cast,(_DWORD *)(v12 + 4))" ]
"1000334" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000335" [label = "(<operator>.addition,v12 + 4)" ]
"1000338" [label = "(tftp_set_timeouts,tftp_set_timeouts(v6))" ]
"1000341" [label = "(<operator>.notEquals,(*((_BYTE *)a1 + 591) & 2) != 0)" ]
"1000342" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000343" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000344" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000345" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000346" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000353" [label = "(<operator>.logicalNot,!bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000354" [label = "(bind,bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000355" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000356" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000357" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000358" [label = "(<operator>.addition,v6 + 20)" ]
"1000361" [label = "(<operator>.cast,(const struct sockaddr *)(v6 + 52))" ]
"1000362" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000363" [label = "(<operator>.addition,v6 + 52)" ]
"1000366" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000367" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000368" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000369" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000370" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000375" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 591) |= 2u)" ]
"1000376" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000377" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000378" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000379" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000384" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000385" [label = "(<operator>.indirection,*a1)" ]
"1000387" [label = "(<operator>.assignment,result = 0)" ]
"1000390" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000391" [label = "(<operator>.indirection,*a2)" ]
"1000394" [label = "(RETURN,return result;,return result;)" ]
"1000396" [label = "(<operator>.assignment,v14 = _errno_location())" ]
"1000398" [label = "(_errno_location,_errno_location())" ]
"1000399" [label = "(<operator>.assignment,v15 = *a1)" ]
"1000401" [label = "(<operator>.indirection,*a1)" ]
"1000403" [label = "(<operator>.assignment,v16 = (const char *)Curl_strerror(*v14, v17, 128))" ]
"1000405" [label = "(<operator>.cast,(const char *)Curl_strerror(*v14, v17, 128))" ]
"1000406" [label = "(UNKNOWN,const char *,const char *)" ]
"1000407" [label = "(Curl_strerror,Curl_strerror(*v14, v17, 128))" ]
"1000408" [label = "(<operator>.indirection,*v14)" ]
"1000412" [label = "(Curl_failf,Curl_failf(v15, \"bind() failed; %s\", v16))" ]
"1000416" [label = "(RETURN,return 7;,return 7;)" ]
"1000115" [label = "(METHOD,tftp_connect)" ]
"1000418" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000133" -> "1000139" 
  "1000135" -> "1000133" 
  "1000138" -> "1000144" 
  "1000139" -> "1000138" 
  "1000144" -> "1000146" 
  "1000144" -> "1000148" 
  "1000146" -> "1000418" 
  "1000148" -> "1000155" 
  "1000151" -> "1000166" 
  "1000151" -> "1000201" 
  "1000153" -> "1000151" 
  "1000154" -> "1000153" 
  "1000155" -> "1000157" 
  "1000156" -> "1000154" 
  "1000157" -> "1000156" 
  "1000164" -> "1000171" 
  "1000164" -> "1000174" 
  "1000165" -> "1000164" 
  "1000166" -> "1000167" 
  "1000167" -> "1000165" 
  "1000171" -> "1000418" 
  "1000174" -> "1000177" 
  "1000174" -> "1000185" 
  "1000177" -> "1000194" 
  "1000181" -> "1000194" 
  "1000183" -> "1000181" 
  "1000184" -> "1000183" 
  "1000185" -> "1000187" 
  "1000186" -> "1000184" 
  "1000187" -> "1000186" 
  "1000190" -> "1000211" 
  "1000192" -> "1000190" 
  "1000193" -> "1000192" 
  "1000194" -> "1000196" 
  "1000195" -> "1000193" 
  "1000196" -> "1000195" 
  "1000201" -> "1000204" 
  "1000204" -> "1000211" 
  "1000208" -> "1000240" 
  "1000208" -> "1000220" 
  "1000209" -> "1000208" 
  "1000210" -> "1000209" 
  "1000211" -> "1000212" 
  "1000212" -> "1000210" 
  "1000216" -> "1000226" 
  "1000218" -> "1000216" 
  "1000220" -> "1000218" 
  "1000223" -> "1000232" 
  "1000224" -> "1000223" 
  "1000225" -> "1000224" 
  "1000226" -> "1000227" 
  "1000227" -> "1000225" 
  "1000232" -> "1000240" 
  "1000232" -> "1000234" 
  "1000234" -> "1000418" 
  "1000237" -> "1000249" 
  "1000237" -> "1000265" 
  "1000238" -> "1000237" 
  "1000239" -> "1000238" 
  "1000240" -> "1000241" 
  "1000241" -> "1000239" 
  "1000245" -> "1000255" 
  "1000247" -> "1000245" 
  "1000249" -> "1000247" 
  "1000252" -> "1000261" 
  "1000253" -> "1000252" 
  "1000254" -> "1000253" 
  "1000255" -> "1000256" 
  "1000256" -> "1000254" 
  "1000261" -> "1000263" 
  "1000261" -> "1000265" 
  "1000263" -> "1000418" 
  "1000265" -> "1000270" 
  "1000268" -> "1000276" 
  "1000270" -> "1000268" 
  "1000273" -> "1000284" 
  "1000274" -> "1000273" 
  "1000275" -> "1000274" 
  "1000276" -> "1000277" 
  "1000277" -> "1000275" 
  "1000281" -> "1000292" 
  "1000282" -> "1000281" 
  "1000283" -> "1000282" 
  "1000284" -> "1000285" 
  "1000285" -> "1000283" 
  "1000289" -> "1000298" 
  "1000290" -> "1000289" 
  "1000291" -> "1000290" 
  "1000292" -> "1000291" 
  "1000295" -> "1000307" 
  "1000296" -> "1000302" 
  "1000297" -> "1000296" 
  "1000298" -> "1000299" 
  "1000299" -> "1000297" 
  "1000302" -> "1000295" 
  "1000304" -> "1000314" 
  "1000305" -> "1000304" 
  "1000306" -> "1000305" 
  "1000307" -> "1000308" 
  "1000308" -> "1000306" 
  "1000312" -> "1000320" 
  "1000314" -> "1000312" 
  "1000317" -> "1000328" 
  "1000318" -> "1000317" 
  "1000319" -> "1000318" 
  "1000320" -> "1000321" 
  "1000321" -> "1000319" 
  "1000325" -> "1000338" 
  "1000326" -> "1000334" 
  "1000327" -> "1000326" 
  "1000328" -> "1000329" 
  "1000329" -> "1000327" 
  "1000332" -> "1000325" 
  "1000333" -> "1000332" 
  "1000334" -> "1000335" 
  "1000335" -> "1000333" 
  "1000338" -> "1000346" 
  "1000341" -> "1000357" 
  "1000341" -> "1000385" 
  "1000342" -> "1000341" 
  "1000343" -> "1000342" 
  "1000344" -> "1000343" 
  "1000345" -> "1000344" 
  "1000346" -> "1000345" 
  "1000353" -> "1000379" 
  "1000353" -> "1000398" 
  "1000354" -> "1000353" 
  "1000355" -> "1000362" 
  "1000356" -> "1000355" 
  "1000357" -> "1000358" 
  "1000358" -> "1000356" 
  "1000361" -> "1000368" 
  "1000362" -> "1000363" 
  "1000363" -> "1000361" 
  "1000366" -> "1000354" 
  "1000367" -> "1000366" 
  "1000368" -> "1000370" 
  "1000369" -> "1000367" 
  "1000370" -> "1000369" 
  "1000375" -> "1000385" 
  "1000376" -> "1000375" 
  "1000377" -> "1000376" 
  "1000378" -> "1000377" 
  "1000379" -> "1000378" 
  "1000384" -> "1000387" 
  "1000385" -> "1000384" 
  "1000387" -> "1000391" 
  "1000390" -> "1000394" 
  "1000391" -> "1000390" 
  "1000394" -> "1000418" 
  "1000396" -> "1000401" 
  "1000398" -> "1000396" 
  "1000399" -> "1000406" 
  "1000401" -> "1000399" 
  "1000403" -> "1000412" 
  "1000405" -> "1000403" 
  "1000406" -> "1000408" 
  "1000407" -> "1000405" 
  "1000408" -> "1000407" 
  "1000412" -> "1000416" 
  "1000416" -> "1000418" 
  "1000115" -> "1000135" 
}
