digraph tftp_connect {  
"1000135" [label = "(<operator>.assignment,v17 = __readfsqword(0x28u))" ]
"1000137" [label = "(__readfsqword,__readfsqword(0x28u))" ]
"1000139" [label = "(<operator>.assignment,a1[167] = v3)" ]
"1000140" [label = "(<operator>.indirectIndexAccess,a1[167])" ]
"1000145" [label = "(<operator>.logicalNot,!v3)" ]
"1000148" [label = "(<operator>.assignment,v4 = v3)" ]
"1000156" [label = "(<operator>.greaterThan,(unsigned int)(v5 - 8) > 0xFFB0)" ]
"1000157" [label = "(<operator>.cast,(unsigned int)(v5 - 8))" ]
"1000158" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000159" [label = "(<operator>.subtraction,v5 - 8)" ]
"1000163" [label = "(RETURN,return result;,return result;)" ]
"1000165" [label = "(<operator>.assignment,v8 = 512)" ]
"1000169" [label = "(<operator>.greaterEqualsThan,(int)v5 >= 512)" ]
"1000170" [label = "(<operator>.cast,(int)v5)" ]
"1000171" [label = "(UNKNOWN,int,int)" ]
"1000176" [label = "(<operator>.assignment,v7 = 512)" ]
"1000179" [label = "(<operator>.assignment,v8 = 512)" ]
"1000183" [label = "(<operator>.logicalNot,!*(_QWORD *)(v4 + 352))" ]
"1000184" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 352))" ]
"1000185" [label = "(<operator>.cast,(_QWORD *)(v4 + 352))" ]
"1000186" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000187" [label = "(<operator>.addition,v4 + 352)" ]
"1000191" [label = "(<operator>.assignment,*(_QWORD *)(v4 + 352) = v9)" ]
"1000192" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 352))" ]
"1000193" [label = "(<operator>.cast,(_QWORD *)(v4 + 352))" ]
"1000194" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000195" [label = "(<operator>.addition,v4 + 352)" ]
"1000200" [label = "(<operator>.logicalNot,!v9)" ]
"1000204" [label = "(<operator>.logicalNot,!*(_QWORD *)(v4 + 360))" ]
"1000205" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 360))" ]
"1000206" [label = "(<operator>.cast,(_QWORD *)(v4 + 360))" ]
"1000207" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000208" [label = "(<operator>.addition,v4 + 360)" ]
"1000212" [label = "(<operator>.assignment,*(_QWORD *)(v4 + 360) = v10)" ]
"1000213" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 360))" ]
"1000214" [label = "(<operator>.cast,(_QWORD *)(v4 + 360))" ]
"1000215" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000216" [label = "(<operator>.addition,v4 + 360)" ]
"1000221" [label = "(<operator>.logicalNot,!v10)" ]
"1000224" [label = "(<operator>.assignment,*(_QWORD *)(v4 + 16) = a1)" ]
"1000225" [label = "(<operator>.indirection,*(_QWORD *)(v4 + 16))" ]
"1000226" [label = "(<operator>.cast,(_QWORD *)(v4 + 16))" ]
"1000227" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000228" [label = "(<operator>.addition,v4 + 16)" ]
"1000232" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 24) = *((_DWORD *)a1 + 156))" ]
"1000233" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 24))" ]
"1000234" [label = "(<operator>.cast,(_DWORD *)(v4 + 24))" ]
"1000235" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000236" [label = "(<operator>.addition,v4 + 24)" ]
"1000239" [label = "(<operator>.indirection,*((_DWORD *)a1 + 156))" ]
"1000240" [label = "(<operator>.addition,(_DWORD *)a1 + 156)" ]
"1000241" [label = "(<operator>.cast,(_DWORD *)a1)" ]
"1000242" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000245" [label = "(<operator>.assignment,*(_DWORD *)v4 = 0)" ]
"1000246" [label = "(<operator>.indirection,*(_DWORD *)v4)" ]
"1000247" [label = "(<operator>.cast,(_DWORD *)v4)" ]
"1000248" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000251" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 8) = -100)" ]
"1000252" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 8))" ]
"1000253" [label = "(<operator>.cast,(_DWORD *)(v4 + 8))" ]
"1000254" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000255" [label = "(<operator>.addition,v4 + 8)" ]
"1000258" [label = "(<operator>.minus,-100)" ]
"1000260" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 340) = 512)" ]
"1000261" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 340))" ]
"1000262" [label = "(<operator>.cast,(_DWORD *)(v4 + 340))" ]
"1000263" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000264" [label = "(<operator>.addition,v4 + 340)" ]
"1000268" [label = "(<operator>.assignment,*(_DWORD *)(v4 + 344) = v7)" ]
"1000269" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 344))" ]
"1000270" [label = "(<operator>.cast,(_DWORD *)(v4 + 344))" ]
"1000271" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000272" [label = "(<operator>.addition,v4 + 344)" ]
"1000276" [label = "(tftp_set_timeouts,tftp_set_timeouts(v4))" ]
"1000279" [label = "(<operator>.equals,(*((_BYTE *)a1 + 951) & 2) == 0)" ]
"1000280" [label = "(<operator>.and,*((_BYTE *)a1 + 951) & 2)" ]
"1000281" [label = "(<operator>.indirection,*((_BYTE *)a1 + 951))" ]
"1000282" [label = "(<operator>.addition,(_BYTE *)a1 + 951)" ]
"1000283" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000284" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000291" [label = "(<operator>.assignment,v11 = __errno_location())" ]
"1000293" [label = "(__errno_location,__errno_location())" ]
"1000294" [label = "(Curl_failf,Curl_failf(*a1, (unsigned int)\"bind() failed; %s\", v12, v13, v14, v15, v16[0]))" ]
"1000295" [label = "(<operator>.indirection,*a1)" ]
"1000297" [label = "(<operator>.cast,(unsigned int)\"bind() failed; %s\")" ]
"1000298" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000304" [label = "(<operator>.indirectIndexAccess,v16[0])" ]
"1000308" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 951) |= 2u)" ]
"1000309" [label = "(<operator>.indirection,*((_BYTE *)a1 + 951))" ]
"1000310" [label = "(<operator>.addition,(_BYTE *)a1 + 951)" ]
"1000311" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000312" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000316" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000317" [label = "(<operator>.indirection,*a1)" ]
"1000319" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000320" [label = "(<operator>.indirection,*a2)" ]
"1000116" [label = "(METHOD,tftp_connect)" ]
"1000324" [label = "(METHOD_RETURN,__int64 __fastcall)" ]
  "1000135" -> "1000140" 
  "1000137" -> "1000135" 
  "1000139" -> "1000145" 
  "1000140" -> "1000139" 
  "1000145" -> "1000148" 
  "1000148" -> "1000158" 
  "1000148" -> "1000176" 
  "1000156" -> "1000163" 
  "1000156" -> "1000165" 
  "1000157" -> "1000156" 
  "1000158" -> "1000159" 
  "1000159" -> "1000157" 
  "1000163" -> "1000324" 
  "1000165" -> "1000171" 
  "1000169" -> "1000186" 
  "1000170" -> "1000169" 
  "1000171" -> "1000170" 
  "1000176" -> "1000179" 
  "1000179" -> "1000186" 
  "1000183" -> "1000194" 
  "1000183" -> "1000207" 
  "1000184" -> "1000183" 
  "1000185" -> "1000184" 
  "1000186" -> "1000187" 
  "1000187" -> "1000185" 
  "1000191" -> "1000200" 
  "1000192" -> "1000191" 
  "1000193" -> "1000192" 
  "1000194" -> "1000195" 
  "1000195" -> "1000193" 
  "1000200" -> "1000207" 
  "1000204" -> "1000215" 
  "1000204" -> "1000227" 
  "1000205" -> "1000204" 
  "1000206" -> "1000205" 
  "1000207" -> "1000208" 
  "1000208" -> "1000206" 
  "1000212" -> "1000221" 
  "1000213" -> "1000212" 
  "1000214" -> "1000213" 
  "1000215" -> "1000216" 
  "1000216" -> "1000214" 
  "1000221" -> "1000227" 
  "1000224" -> "1000235" 
  "1000225" -> "1000224" 
  "1000226" -> "1000225" 
  "1000227" -> "1000228" 
  "1000228" -> "1000226" 
  "1000232" -> "1000248" 
  "1000233" -> "1000242" 
  "1000234" -> "1000233" 
  "1000235" -> "1000236" 
  "1000236" -> "1000234" 
  "1000239" -> "1000232" 
  "1000240" -> "1000239" 
  "1000241" -> "1000240" 
  "1000242" -> "1000241" 
  "1000245" -> "1000254" 
  "1000246" -> "1000245" 
  "1000247" -> "1000246" 
  "1000248" -> "1000247" 
  "1000251" -> "1000263" 
  "1000252" -> "1000258" 
  "1000253" -> "1000252" 
  "1000254" -> "1000255" 
  "1000255" -> "1000253" 
  "1000258" -> "1000251" 
  "1000260" -> "1000271" 
  "1000261" -> "1000260" 
  "1000262" -> "1000261" 
  "1000263" -> "1000264" 
  "1000264" -> "1000262" 
  "1000268" -> "1000276" 
  "1000269" -> "1000268" 
  "1000270" -> "1000269" 
  "1000271" -> "1000272" 
  "1000272" -> "1000270" 
  "1000276" -> "1000284" 
  "1000279" -> "1000293" 
  "1000279" -> "1000317" 
  "1000280" -> "1000279" 
  "1000281" -> "1000280" 
  "1000282" -> "1000281" 
  "1000283" -> "1000282" 
  "1000284" -> "1000283" 
  "1000291" -> "1000295" 
  "1000293" -> "1000291" 
  "1000294" -> "1000312" 
  "1000295" -> "1000298" 
  "1000297" -> "1000304" 
  "1000298" -> "1000297" 
  "1000304" -> "1000294" 
  "1000308" -> "1000317" 
  "1000309" -> "1000308" 
  "1000310" -> "1000309" 
  "1000311" -> "1000310" 
  "1000312" -> "1000311" 
  "1000316" -> "1000320" 
  "1000317" -> "1000316" 
  "1000319" -> "1000324" 
  "1000320" -> "1000319" 
  "1000116" -> "1000137" 
}
