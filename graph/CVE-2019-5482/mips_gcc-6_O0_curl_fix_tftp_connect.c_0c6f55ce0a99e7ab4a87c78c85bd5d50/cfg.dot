digraph tftp_connect {  
"1000119" [label = "(<operator>.assignment,v8 = 512)" ]
"1000122" [label = "(<operator>.assignment,a1[188] = Curl_ccalloc(1, 336))" ]
"1000123" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000126" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000129" [label = "(<operator>.assignment,v10 = a1[188])" ]
"1000131" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000135" [label = "(<operator>.logicalNot,!v10)" ]
"1000137" [label = "(RETURN,return 27;,return 27;)" ]
"1000140" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000141" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000142" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000143" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000144" [label = "(<operator>.indirection,*a1)" ]
"1000148" [label = "(<operator>.assignment,v8 = *(_DWORD *)(*a1 + 1576))" ]
"1000150" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000151" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000152" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000153" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000154" [label = "(<operator>.indirection,*a1)" ]
"1000158" [label = "(<operator>.logicalOr,v8 >= 65465 || v8 < 8)" ]
"1000159" [label = "(<operator>.greaterEqualsThan,v8 >= 65465)" ]
"1000162" [label = "(<operator>.lessThan,v8 < 8)" ]
"1000165" [label = "(RETURN,return 71;,return 71;)" ]
"1000167" [label = "(<operator>.assignment,v9 = v8)" ]
"1000171" [label = "(<operator>.lessThan,v8 < 512)" ]
"1000174" [label = "(<operator>.assignment,v9 = 512)" ]
"1000178" [label = "(<operator>.logicalNot,!*(_DWORD *)(v10 + 328))" ]
"1000179" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 328))" ]
"1000180" [label = "(<operator>.cast,(_DWORD *)(v10 + 328))" ]
"1000181" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000182" [label = "(<operator>.addition,v10 + 328)" ]
"1000186" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 328) = Curl_ccalloc(1, v9 + 4))" ]
"1000187" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 328))" ]
"1000188" [label = "(<operator>.cast,(_DWORD *)(v10 + 328))" ]
"1000189" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000190" [label = "(<operator>.addition,v10 + 328)" ]
"1000193" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9 + 4))" ]
"1000195" [label = "(<operator>.addition,v9 + 4)" ]
"1000199" [label = "(<operator>.logicalNot,!*(_DWORD *)(v10 + 328))" ]
"1000200" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 328))" ]
"1000201" [label = "(<operator>.cast,(_DWORD *)(v10 + 328))" ]
"1000202" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000203" [label = "(<operator>.addition,v10 + 328)" ]
"1000206" [label = "(RETURN,return 27;,return 27;)" ]
"1000209" [label = "(<operator>.logicalNot,!*(_DWORD *)(v10 + 332))" ]
"1000210" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 332))" ]
"1000211" [label = "(<operator>.cast,(_DWORD *)(v10 + 332))" ]
"1000212" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000213" [label = "(<operator>.addition,v10 + 332)" ]
"1000217" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 332) = Curl_ccalloc(1, v9 + 4))" ]
"1000218" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 332))" ]
"1000219" [label = "(<operator>.cast,(_DWORD *)(v10 + 332))" ]
"1000220" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000221" [label = "(<operator>.addition,v10 + 332)" ]
"1000224" [label = "(Curl_ccalloc,Curl_ccalloc(1, v9 + 4))" ]
"1000226" [label = "(<operator>.addition,v9 + 4)" ]
"1000230" [label = "(<operator>.logicalNot,!*(_DWORD *)(v10 + 332))" ]
"1000231" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 332))" ]
"1000232" [label = "(<operator>.cast,(_DWORD *)(v10 + 332))" ]
"1000233" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000234" [label = "(<operator>.addition,v10 + 332)" ]
"1000237" [label = "(RETURN,return 27;,return 27;)" ]
"1000239" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000242" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 16) = a1)" ]
"1000243" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 16))" ]
"1000244" [label = "(<operator>.cast,(_DWORD *)(v10 + 16))" ]
"1000245" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000246" [label = "(<operator>.addition,v10 + 16)" ]
"1000250" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 20) = *(_DWORD *)(*(_DWORD *)(v10 + 16) + 420))" ]
"1000251" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 20))" ]
"1000252" [label = "(<operator>.cast,(_DWORD *)(v10 + 20))" ]
"1000253" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000254" [label = "(<operator>.addition,v10 + 20)" ]
"1000257" [label = "(<operator>.indirection,*(_DWORD *)(*(_DWORD *)(v10 + 16) + 420))" ]
"1000258" [label = "(<operator>.cast,(_DWORD *)(*(_DWORD *)(v10 + 16) + 420))" ]
"1000259" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000260" [label = "(<operator>.addition,*(_DWORD *)(v10 + 16) + 420)" ]
"1000261" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 16))" ]
"1000262" [label = "(<operator>.cast,(_DWORD *)(v10 + 16))" ]
"1000263" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000264" [label = "(<operator>.addition,v10 + 16)" ]
"1000268" [label = "(<operator>.assignment,*(_DWORD *)v10 = 0)" ]
"1000269" [label = "(<operator>.indirection,*(_DWORD *)v10)" ]
"1000270" [label = "(<operator>.cast,(_DWORD *)v10)" ]
"1000271" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000274" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 8) = -100)" ]
"1000275" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 8))" ]
"1000276" [label = "(<operator>.cast,(_DWORD *)(v10 + 8))" ]
"1000277" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000278" [label = "(<operator>.addition,v10 + 8)" ]
"1000281" [label = "(<operator>.minus,-100)" ]
"1000283" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 320) = 512)" ]
"1000284" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 320))" ]
"1000285" [label = "(<operator>.cast,(_DWORD *)(v10 + 320))" ]
"1000286" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000287" [label = "(<operator>.addition,v10 + 320)" ]
"1000291" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 324) = v8)" ]
"1000292" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 324))" ]
"1000293" [label = "(<operator>.cast,(_DWORD *)(v10 + 324))" ]
"1000294" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000295" [label = "(<operator>.addition,v10 + 324)" ]
"1000299" [label = "(<operator>.assignment,*(_WORD *)(v10 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000300" [label = "(<operator>.indirection,*(_WORD *)(v10 + 52))" ]
"1000301" [label = "(<operator>.cast,(_WORD *)(v10 + 52))" ]
"1000302" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000303" [label = "(<operator>.addition,v10 + 52)" ]
"1000306" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000307" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000308" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000309" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000310" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000314" [label = "(tftp_set_timeouts,tftp_set_timeouts(v10))" ]
"1000317" [label = "(<operator>.equals,(a1[147] & 0x40) == 0)" ]
"1000318" [label = "(<operator>.and,a1[147] & 0x40)" ]
"1000319" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000326" [label = "(bind,bind(*(_DWORD *)(v10 + 20), (const struct sockaddr *)(v10 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000327" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 20))" ]
"1000328" [label = "(<operator>.cast,(_DWORD *)(v10 + 20))" ]
"1000329" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000330" [label = "(<operator>.addition,v10 + 20)" ]
"1000333" [label = "(<operator>.cast,(const struct sockaddr *)(v10 + 52))" ]
"1000334" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000335" [label = "(<operator>.addition,v10 + 52)" ]
"1000338" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000339" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000340" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000341" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000342" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000347" [label = "(<operator>.assignment,v3 = *a1)" ]
"1000349" [label = "(<operator>.indirection,*a1)" ]
"1000351" [label = "(<operator>.assignment,v4 = _errno_location())" ]
"1000353" [label = "(_errno_location,_errno_location())" ]
"1000354" [label = "(<operator>.assignment,v5 = (const char *)Curl_strerror(*v4, v11, 128))" ]
"1000356" [label = "(<operator>.cast,(const char *)Curl_strerror(*v4, v11, 128))" ]
"1000357" [label = "(UNKNOWN,const char *,const char *)" ]
"1000358" [label = "(Curl_strerror,Curl_strerror(*v4, v11, 128))" ]
"1000359" [label = "(<operator>.indirection,*v4)" ]
"1000363" [label = "(Curl_failf,Curl_failf(v3, \"bind() failed; %s\", v5))" ]
"1000367" [label = "(RETURN,return 7;,return 7;)" ]
"1000369" [label = "(<operator>.assignment,a1[147] = a1[147] & 0xFFFFFFBF | 0x40)" ]
"1000370" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000373" [label = "(<operator>.or,a1[147] & 0xFFFFFFBF | 0x40)" ]
"1000374" [label = "(<operator>.and,a1[147] & 0xFFFFFFBF)" ]
"1000375" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000380" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000381" [label = "(<operator>.indirection,*a1)" ]
"1000383" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000384" [label = "(<operator>.indirection,*a2)" ]
"1000387" [label = "(RETURN,return 0;,return 0;)" ]
"1000108" [label = "(METHOD,tftp_connect)" ]
"1000389" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000119" -> "1000123" 
  "1000122" -> "1000131" 
  "1000123" -> "1000126" 
  "1000126" -> "1000122" 
  "1000129" -> "1000135" 
  "1000131" -> "1000129" 
  "1000135" -> "1000142" 
  "1000135" -> "1000137" 
  "1000137" -> "1000389" 
  "1000140" -> "1000152" 
  "1000140" -> "1000167" 
  "1000141" -> "1000140" 
  "1000142" -> "1000144" 
  "1000143" -> "1000141" 
  "1000144" -> "1000143" 
  "1000148" -> "1000159" 
  "1000150" -> "1000148" 
  "1000151" -> "1000150" 
  "1000152" -> "1000154" 
  "1000153" -> "1000151" 
  "1000154" -> "1000153" 
  "1000158" -> "1000165" 
  "1000158" -> "1000167" 
  "1000159" -> "1000158" 
  "1000159" -> "1000162" 
  "1000162" -> "1000158" 
  "1000165" -> "1000389" 
  "1000167" -> "1000171" 
  "1000171" -> "1000181" 
  "1000171" -> "1000174" 
  "1000174" -> "1000181" 
  "1000178" -> "1000189" 
  "1000178" -> "1000212" 
  "1000179" -> "1000178" 
  "1000180" -> "1000179" 
  "1000181" -> "1000182" 
  "1000182" -> "1000180" 
  "1000186" -> "1000202" 
  "1000187" -> "1000195" 
  "1000188" -> "1000187" 
  "1000189" -> "1000190" 
  "1000190" -> "1000188" 
  "1000193" -> "1000186" 
  "1000195" -> "1000193" 
  "1000199" -> "1000212" 
  "1000199" -> "1000206" 
  "1000200" -> "1000199" 
  "1000201" -> "1000200" 
  "1000202" -> "1000203" 
  "1000203" -> "1000201" 
  "1000206" -> "1000389" 
  "1000209" -> "1000220" 
  "1000209" -> "1000239" 
  "1000210" -> "1000209" 
  "1000211" -> "1000210" 
  "1000212" -> "1000213" 
  "1000213" -> "1000211" 
  "1000217" -> "1000233" 
  "1000218" -> "1000226" 
  "1000219" -> "1000218" 
  "1000220" -> "1000221" 
  "1000221" -> "1000219" 
  "1000224" -> "1000217" 
  "1000226" -> "1000224" 
  "1000230" -> "1000237" 
  "1000230" -> "1000239" 
  "1000231" -> "1000230" 
  "1000232" -> "1000231" 
  "1000233" -> "1000234" 
  "1000234" -> "1000232" 
  "1000237" -> "1000389" 
  "1000239" -> "1000245" 
  "1000242" -> "1000253" 
  "1000243" -> "1000242" 
  "1000244" -> "1000243" 
  "1000245" -> "1000246" 
  "1000246" -> "1000244" 
  "1000250" -> "1000271" 
  "1000251" -> "1000259" 
  "1000252" -> "1000251" 
  "1000253" -> "1000254" 
  "1000254" -> "1000252" 
  "1000257" -> "1000250" 
  "1000258" -> "1000257" 
  "1000259" -> "1000263" 
  "1000260" -> "1000258" 
  "1000261" -> "1000260" 
  "1000262" -> "1000261" 
  "1000263" -> "1000264" 
  "1000264" -> "1000262" 
  "1000268" -> "1000277" 
  "1000269" -> "1000268" 
  "1000270" -> "1000269" 
  "1000271" -> "1000270" 
  "1000274" -> "1000286" 
  "1000275" -> "1000281" 
  "1000276" -> "1000275" 
  "1000277" -> "1000278" 
  "1000278" -> "1000276" 
  "1000281" -> "1000274" 
  "1000283" -> "1000294" 
  "1000284" -> "1000283" 
  "1000285" -> "1000284" 
  "1000286" -> "1000287" 
  "1000287" -> "1000285" 
  "1000291" -> "1000302" 
  "1000292" -> "1000291" 
  "1000293" -> "1000292" 
  "1000294" -> "1000295" 
  "1000295" -> "1000293" 
  "1000299" -> "1000314" 
  "1000300" -> "1000308" 
  "1000301" -> "1000300" 
  "1000302" -> "1000303" 
  "1000303" -> "1000301" 
  "1000306" -> "1000299" 
  "1000307" -> "1000306" 
  "1000308" -> "1000310" 
  "1000309" -> "1000307" 
  "1000310" -> "1000309" 
  "1000314" -> "1000319" 
  "1000317" -> "1000329" 
  "1000317" -> "1000381" 
  "1000318" -> "1000317" 
  "1000319" -> "1000318" 
  "1000326" -> "1000349" 
  "1000326" -> "1000370" 
  "1000327" -> "1000334" 
  "1000328" -> "1000327" 
  "1000329" -> "1000330" 
  "1000330" -> "1000328" 
  "1000333" -> "1000340" 
  "1000334" -> "1000335" 
  "1000335" -> "1000333" 
  "1000338" -> "1000326" 
  "1000339" -> "1000338" 
  "1000340" -> "1000342" 
  "1000341" -> "1000339" 
  "1000342" -> "1000341" 
  "1000347" -> "1000353" 
  "1000349" -> "1000347" 
  "1000351" -> "1000357" 
  "1000353" -> "1000351" 
  "1000354" -> "1000363" 
  "1000356" -> "1000354" 
  "1000357" -> "1000359" 
  "1000358" -> "1000356" 
  "1000359" -> "1000358" 
  "1000363" -> "1000367" 
  "1000367" -> "1000389" 
  "1000369" -> "1000381" 
  "1000370" -> "1000375" 
  "1000373" -> "1000369" 
  "1000374" -> "1000373" 
  "1000375" -> "1000374" 
  "1000380" -> "1000384" 
  "1000381" -> "1000380" 
  "1000383" -> "1000387" 
  "1000384" -> "1000383" 
  "1000387" -> "1000389" 
  "1000108" -> "1000119" 
}
