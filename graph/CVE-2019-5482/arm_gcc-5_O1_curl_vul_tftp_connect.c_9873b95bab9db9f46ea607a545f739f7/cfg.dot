digraph tftp_connect {  
"1000123" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000125" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000128" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000129" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000134" [label = "(<operator>.logicalNot,!v4)" ]
"1000136" [label = "(RETURN,return 27;,return 27;)" ]
"1000138" [label = "(<operator>.assignment,v6 = v4)" ]
"1000141" [label = "(<operator>.assignment,v7 = *(_DWORD *)(*a1 + 1576))" ]
"1000143" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000144" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000145" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000146" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000147" [label = "(<operator>.indirection,*a1)" ]
"1000154" [label = "(<operator>.greaterThan,(unsigned int)(v7 - 8) > 0xFFB0)" ]
"1000155" [label = "(<operator>.cast,(unsigned int)(v7 - 8))" ]
"1000156" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000157" [label = "(<operator>.subtraction,v7 - 8)" ]
"1000161" [label = "(RETURN,return 71;,return 71;)" ]
"1000165" [label = "(<operator>.assignment,v7 = 512)" ]
"1000169" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000170" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000171" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000172" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000173" [label = "(<operator>.addition,v4 + 328)" ]
"1000177" [label = "(<operator>.assignment,v8 = Curl_ccalloc(1u, v7 + 4))" ]
"1000179" [label = "(Curl_ccalloc,Curl_ccalloc(1u, v7 + 4))" ]
"1000181" [label = "(<operator>.addition,v7 + 4)" ]
"1000184" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 328) = v8)" ]
"1000185" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 328))" ]
"1000186" [label = "(<operator>.cast,(_DWORD *)(v6 + 328))" ]
"1000187" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000188" [label = "(<operator>.addition,v6 + 328)" ]
"1000193" [label = "(<operator>.logicalNot,!v8)" ]
"1000195" [label = "(RETURN,return 27;,return 27;)" ]
"1000198" [label = "(<operator>.logicalNot,!*(_DWORD *)(v6 + 332))" ]
"1000199" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000200" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000201" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000202" [label = "(<operator>.addition,v6 + 332)" ]
"1000206" [label = "(<operator>.assignment,v9 = Curl_ccalloc(1u, v7 + 4))" ]
"1000208" [label = "(Curl_ccalloc,Curl_ccalloc(1u, v7 + 4))" ]
"1000210" [label = "(<operator>.addition,v7 + 4)" ]
"1000213" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 332) = v9)" ]
"1000214" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 332))" ]
"1000215" [label = "(<operator>.cast,(_DWORD *)(v6 + 332))" ]
"1000216" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000217" [label = "(<operator>.addition,v6 + 332)" ]
"1000222" [label = "(<operator>.logicalNot,!v9)" ]
"1000224" [label = "(RETURN,return 27;,return 27;)" ]
"1000226" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000229" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 16) = a1)" ]
"1000230" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 16))" ]
"1000231" [label = "(<operator>.cast,(_DWORD *)(v6 + 16))" ]
"1000232" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000233" [label = "(<operator>.addition,v6 + 16)" ]
"1000237" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 20) = a1[105])" ]
"1000238" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000239" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000240" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000241" [label = "(<operator>.addition,v6 + 20)" ]
"1000244" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000247" [label = "(<operator>.assignment,*(_DWORD *)v6 = 0)" ]
"1000248" [label = "(<operator>.indirection,*(_DWORD *)v6)" ]
"1000249" [label = "(<operator>.cast,(_DWORD *)v6)" ]
"1000250" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000253" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 8) = -100)" ]
"1000254" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 8))" ]
"1000255" [label = "(<operator>.cast,(_DWORD *)(v6 + 8))" ]
"1000256" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000257" [label = "(<operator>.addition,v6 + 8)" ]
"1000260" [label = "(<operator>.minus,-100)" ]
"1000262" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 320) = v7)" ]
"1000263" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 320))" ]
"1000264" [label = "(<operator>.cast,(_DWORD *)(v6 + 320))" ]
"1000265" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000266" [label = "(<operator>.addition,v6 + 320)" ]
"1000270" [label = "(<operator>.assignment,*(_DWORD *)(v6 + 324) = v7)" ]
"1000271" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 324))" ]
"1000272" [label = "(<operator>.cast,(_DWORD *)(v6 + 324))" ]
"1000273" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000274" [label = "(<operator>.addition,v6 + 324)" ]
"1000278" [label = "(<operator>.assignment,*(_WORD *)(v6 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000279" [label = "(<operator>.indirection,*(_WORD *)(v6 + 52))" ]
"1000280" [label = "(<operator>.cast,(_WORD *)(v6 + 52))" ]
"1000281" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000282" [label = "(<operator>.addition,v6 + 52)" ]
"1000285" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000286" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000287" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000288" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000289" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000293" [label = "(tftp_set_timeouts,tftp_set_timeouts(v6))" ]
"1000296" [label = "(<operator>.equals,(*((_BYTE *)a1 + 591) & 2) == 0)" ]
"1000297" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000298" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000299" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000300" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000301" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000308" [label = "(bind,bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000309" [label = "(<operator>.indirection,*(_DWORD *)(v6 + 20))" ]
"1000310" [label = "(<operator>.cast,(_DWORD *)(v6 + 20))" ]
"1000311" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000312" [label = "(<operator>.addition,v6 + 20)" ]
"1000315" [label = "(<operator>.cast,(const struct sockaddr *)(v6 + 52))" ]
"1000316" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000317" [label = "(<operator>.addition,v6 + 52)" ]
"1000320" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000321" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000322" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000323" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000324" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000329" [label = "(<operator>.assignment,v10 = *a1)" ]
"1000331" [label = "(<operator>.indirection,*a1)" ]
"1000333" [label = "(<operator>.assignment,v11 = _errno_location())" ]
"1000335" [label = "(_errno_location,_errno_location())" ]
"1000336" [label = "(<operator>.assignment,v12 = (const char *)Curl_strerror(*v11, v13, 128))" ]
"1000338" [label = "(<operator>.cast,(const char *)Curl_strerror(*v11, v13, 128))" ]
"1000339" [label = "(UNKNOWN,const char *,const char *)" ]
"1000340" [label = "(Curl_strerror,Curl_strerror(*v11, v13, 128))" ]
"1000341" [label = "(<operator>.indirection,*v11)" ]
"1000345" [label = "(Curl_failf,Curl_failf(v10, \"bind() failed; %s\", v12))" ]
"1000349" [label = "(RETURN,return 7;,return 7;)" ]
"1000351" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 591) |= 2u)" ]
"1000352" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000353" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000354" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000355" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000359" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000360" [label = "(<operator>.indirection,*a1)" ]
"1000362" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000363" [label = "(<operator>.indirection,*a2)" ]
"1000366" [label = "(RETURN,return 0;,return 0;)" ]
"1000110" [label = "(METHOD,tftp_connect)" ]
"1000368" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000123" -> "1000129" 
  "1000125" -> "1000123" 
  "1000128" -> "1000134" 
  "1000129" -> "1000128" 
  "1000134" -> "1000136" 
  "1000134" -> "1000138" 
  "1000136" -> "1000368" 
  "1000138" -> "1000145" 
  "1000141" -> "1000156" 
  "1000141" -> "1000165" 
  "1000143" -> "1000141" 
  "1000144" -> "1000143" 
  "1000145" -> "1000147" 
  "1000146" -> "1000144" 
  "1000147" -> "1000146" 
  "1000154" -> "1000172" 
  "1000154" -> "1000161" 
  "1000155" -> "1000154" 
  "1000156" -> "1000157" 
  "1000157" -> "1000155" 
  "1000161" -> "1000368" 
  "1000165" -> "1000172" 
  "1000169" -> "1000201" 
  "1000169" -> "1000181" 
  "1000170" -> "1000169" 
  "1000171" -> "1000170" 
  "1000172" -> "1000173" 
  "1000173" -> "1000171" 
  "1000177" -> "1000187" 
  "1000179" -> "1000177" 
  "1000181" -> "1000179" 
  "1000184" -> "1000193" 
  "1000185" -> "1000184" 
  "1000186" -> "1000185" 
  "1000187" -> "1000188" 
  "1000188" -> "1000186" 
  "1000193" -> "1000201" 
  "1000193" -> "1000195" 
  "1000195" -> "1000368" 
  "1000198" -> "1000210" 
  "1000198" -> "1000226" 
  "1000199" -> "1000198" 
  "1000200" -> "1000199" 
  "1000201" -> "1000202" 
  "1000202" -> "1000200" 
  "1000206" -> "1000216" 
  "1000208" -> "1000206" 
  "1000210" -> "1000208" 
  "1000213" -> "1000222" 
  "1000214" -> "1000213" 
  "1000215" -> "1000214" 
  "1000216" -> "1000217" 
  "1000217" -> "1000215" 
  "1000222" -> "1000224" 
  "1000222" -> "1000226" 
  "1000224" -> "1000368" 
  "1000226" -> "1000232" 
  "1000229" -> "1000240" 
  "1000230" -> "1000229" 
  "1000231" -> "1000230" 
  "1000232" -> "1000233" 
  "1000233" -> "1000231" 
  "1000237" -> "1000250" 
  "1000238" -> "1000244" 
  "1000239" -> "1000238" 
  "1000240" -> "1000241" 
  "1000241" -> "1000239" 
  "1000244" -> "1000237" 
  "1000247" -> "1000256" 
  "1000248" -> "1000247" 
  "1000249" -> "1000248" 
  "1000250" -> "1000249" 
  "1000253" -> "1000265" 
  "1000254" -> "1000260" 
  "1000255" -> "1000254" 
  "1000256" -> "1000257" 
  "1000257" -> "1000255" 
  "1000260" -> "1000253" 
  "1000262" -> "1000273" 
  "1000263" -> "1000262" 
  "1000264" -> "1000263" 
  "1000265" -> "1000266" 
  "1000266" -> "1000264" 
  "1000270" -> "1000281" 
  "1000271" -> "1000270" 
  "1000272" -> "1000271" 
  "1000273" -> "1000274" 
  "1000274" -> "1000272" 
  "1000278" -> "1000293" 
  "1000279" -> "1000287" 
  "1000280" -> "1000279" 
  "1000281" -> "1000282" 
  "1000282" -> "1000280" 
  "1000285" -> "1000278" 
  "1000286" -> "1000285" 
  "1000287" -> "1000289" 
  "1000288" -> "1000286" 
  "1000289" -> "1000288" 
  "1000293" -> "1000301" 
  "1000296" -> "1000311" 
  "1000296" -> "1000360" 
  "1000297" -> "1000296" 
  "1000298" -> "1000297" 
  "1000299" -> "1000298" 
  "1000300" -> "1000299" 
  "1000301" -> "1000300" 
  "1000308" -> "1000355" 
  "1000308" -> "1000331" 
  "1000309" -> "1000316" 
  "1000310" -> "1000309" 
  "1000311" -> "1000312" 
  "1000312" -> "1000310" 
  "1000315" -> "1000322" 
  "1000316" -> "1000317" 
  "1000317" -> "1000315" 
  "1000320" -> "1000308" 
  "1000321" -> "1000320" 
  "1000322" -> "1000324" 
  "1000323" -> "1000321" 
  "1000324" -> "1000323" 
  "1000329" -> "1000335" 
  "1000331" -> "1000329" 
  "1000333" -> "1000339" 
  "1000335" -> "1000333" 
  "1000336" -> "1000345" 
  "1000338" -> "1000336" 
  "1000339" -> "1000341" 
  "1000340" -> "1000338" 
  "1000341" -> "1000340" 
  "1000345" -> "1000349" 
  "1000349" -> "1000368" 
  "1000351" -> "1000360" 
  "1000352" -> "1000351" 
  "1000353" -> "1000352" 
  "1000354" -> "1000353" 
  "1000355" -> "1000354" 
  "1000359" -> "1000363" 
  "1000360" -> "1000359" 
  "1000362" -> "1000366" 
  "1000363" -> "1000362" 
  "1000366" -> "1000368" 
  "1000110" -> "1000125" 
}
