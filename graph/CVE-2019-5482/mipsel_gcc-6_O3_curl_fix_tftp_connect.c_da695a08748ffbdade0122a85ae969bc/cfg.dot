digraph tftp_connect {  
"1000137" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000139" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000142" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000143" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000148" [label = "(<operator>.logicalNot,!v4)" ]
"1000150" [label = "(RETURN,return 27;,return 27;)" ]
"1000152" [label = "(<operator>.assignment,v5 = v4)" ]
"1000155" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000157" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000158" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000159" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000160" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000161" [label = "(<operator>.indirection,*a1)" ]
"1000167" [label = "(<operator>.assignment,v13 = 512)" ]
"1000171" [label = "(<operator>.greaterEqualsThan,(unsigned int)(v6 - 8) >= 0xFFB1)" ]
"1000172" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000173" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000174" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000178" [label = "(RETURN,return 71;,return 71;)" ]
"1000181" [label = "(<operator>.greaterEqualsThan,v6 >= 512)" ]
"1000184" [label = "(<operator>.assignment,v13 = *(_DWORD *)(*a1 + 1576))" ]
"1000186" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000187" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000188" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000189" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000190" [label = "(<operator>.indirection,*a1)" ]
"1000193" [label = "(<operator>.assignment,v7 = *(_DWORD *)(*a1 + 1576))" ]
"1000195" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000196" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000197" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000198" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000199" [label = "(<operator>.indirection,*a1)" ]
"1000202" [label = "(<operator>.assignment,v8 = v13)" ]
"1000207" [label = "(<operator>.assignment,v7 = 512)" ]
"1000210" [label = "(<operator>.assignment,v8 = 512)" ]
"1000214" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 328))" ]
"1000215" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000216" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000217" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000218" [label = "(<operator>.addition,v5 + 328)" ]
"1000222" [label = "(<operator>.assignment,v14 = Curl_ccalloc(1, v8 + 4))" ]
"1000224" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000226" [label = "(<operator>.addition,v8 + 4)" ]
"1000229" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v14)" ]
"1000230" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000231" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000232" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000233" [label = "(<operator>.addition,v5 + 328)" ]
"1000238" [label = "(<operator>.logicalNot,!v14)" ]
"1000240" [label = "(RETURN,return 27;,return 27;)" ]
"1000243" [label = "(<operator>.logicalOr,*(_DWORD *)(v5 + 332) || (v18 = Curl_ccalloc(1, v8 + 4), (*(_DWORD *)(v5 + 332) = v18) != 0))" ]
"1000244" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000245" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000246" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000247" [label = "(<operator>.addition,v5 + 332)" ]
"1000251" [label = "(<operator>.assignment,v18 = Curl_ccalloc(1, v8 + 4))" ]
"1000253" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000255" [label = "(<operator>.addition,v8 + 4)" ]
"1000258" [label = "(<operator>.notEquals,(*(_DWORD *)(v5 + 332) = v18) != 0)" ]
"1000259" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v18)" ]
"1000260" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000261" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000262" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000263" [label = "(<operator>.addition,v5 + 332)" ]
"1000269" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000272" [label = "(<operator>.assignment,v9 = a1[20])" ]
"1000274" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000277" [label = "(<operator>.assignment,v10 = a1[105])" ]
"1000279" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000282" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000283" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000284" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000285" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000286" [label = "(<operator>.addition,v5 + 16)" ]
"1000290" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000291" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000292" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000293" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000296" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = v10)" ]
"1000297" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000298" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000299" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000300" [label = "(<operator>.addition,v5 + 20)" ]
"1000304" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v7)" ]
"1000305" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000306" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000307" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000308" [label = "(<operator>.addition,v5 + 324)" ]
"1000312" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000313" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000314" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000315" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000316" [label = "(<operator>.addition,v5 + 8)" ]
"1000319" [label = "(<operator>.minus,-100)" ]
"1000321" [label = "(<operator>.assignment,v11 = *(_DWORD *)(v9 + 4))" ]
"1000323" [label = "(<operator>.indirection,*(_DWORD *)(v9 + 4))" ]
"1000324" [label = "(<operator>.cast,(_DWORD *)(v9 + 4))" ]
"1000325" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000326" [label = "(<operator>.addition,v9 + 4)" ]
"1000329" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = 512)" ]
"1000330" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000331" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000332" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000333" [label = "(<operator>.addition,v5 + 320)" ]
"1000337" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = v11)" ]
"1000338" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000339" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000340" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000341" [label = "(<operator>.addition,v5 + 52)" ]
"1000345" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000348" [label = "(<operator>.equals,((a1[147] >> 25) & 1) == 0)" ]
"1000349" [label = "(<operator>.and,(a1[147] >> 25) & 1)" ]
"1000350" [label = "(<operator>.arithmeticShiftRight,a1[147] >> 25)" ]
"1000351" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000359" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000360" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000361" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000362" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000363" [label = "(<operator>.addition,v5 + 20)" ]
"1000366" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000367" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000368" [label = "(<operator>.addition,v5 + 52)" ]
"1000371" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000372" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000373" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000374" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000375" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000380" [label = "(<operator>.assignment,v16 = *a1)" ]
"1000382" [label = "(<operator>.indirection,*a1)" ]
"1000384" [label = "(<operator>.assignment,v15 = _errno_location())" ]
"1000386" [label = "(_errno_location,_errno_location())" ]
"1000387" [label = "(<operator>.assignment,v17 = (const char *)Curl_strerror(*v15, v19, 128))" ]
"1000389" [label = "(<operator>.cast,(const char *)Curl_strerror(*v15, v19, 128))" ]
"1000390" [label = "(UNKNOWN,const char *,const char *)" ]
"1000391" [label = "(Curl_strerror,Curl_strerror(*v15, v19, 128))" ]
"1000392" [label = "(<operator>.indirection,*v15)" ]
"1000396" [label = "(Curl_failf,Curl_failf(v16, \"bind() failed; %s\", v17))" ]
"1000400" [label = "(RETURN,return 7;,return 7;)" ]
"1000402" [label = "(<operator>.assignment,a1[147] = a1[147] & 0xFDFFFFFF | 0x2000000)" ]
"1000403" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000406" [label = "(<operator>.or,a1[147] & 0xFDFFFFFF | 0x2000000)" ]
"1000407" [label = "(<operator>.and,a1[147] & 0xFDFFFFFF)" ]
"1000408" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000413" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000414" [label = "(<operator>.indirection,*a1)" ]
"1000416" [label = "(<operator>.assignment,result = 0)" ]
"1000419" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000420" [label = "(<operator>.indirection,*a2)" ]
"1000423" [label = "(RETURN,return result;,return result;)" ]
"1000425" [label = "(RETURN,return 27;,return 27;)" ]
"1000117" [label = "(METHOD,tftp_connect)" ]
"1000427" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000137" -> "1000143" 
  "1000139" -> "1000137" 
  "1000142" -> "1000148" 
  "1000143" -> "1000142" 
  "1000148" -> "1000150" 
  "1000148" -> "1000152" 
  "1000150" -> "1000427" 
  "1000152" -> "1000159" 
  "1000155" -> "1000167" 
  "1000155" -> "1000207" 
  "1000157" -> "1000155" 
  "1000158" -> "1000157" 
  "1000159" -> "1000161" 
  "1000160" -> "1000158" 
  "1000161" -> "1000160" 
  "1000167" -> "1000173" 
  "1000171" -> "1000178" 
  "1000171" -> "1000181" 
  "1000172" -> "1000171" 
  "1000173" -> "1000174" 
  "1000174" -> "1000172" 
  "1000178" -> "1000427" 
  "1000181" -> "1000188" 
  "1000181" -> "1000197" 
  "1000184" -> "1000197" 
  "1000186" -> "1000184" 
  "1000187" -> "1000186" 
  "1000188" -> "1000190" 
  "1000189" -> "1000187" 
  "1000190" -> "1000189" 
  "1000193" -> "1000202" 
  "1000195" -> "1000193" 
  "1000196" -> "1000195" 
  "1000197" -> "1000199" 
  "1000198" -> "1000196" 
  "1000199" -> "1000198" 
  "1000202" -> "1000217" 
  "1000207" -> "1000210" 
  "1000210" -> "1000217" 
  "1000214" -> "1000246" 
  "1000214" -> "1000226" 
  "1000215" -> "1000214" 
  "1000216" -> "1000215" 
  "1000217" -> "1000218" 
  "1000218" -> "1000216" 
  "1000222" -> "1000232" 
  "1000224" -> "1000222" 
  "1000226" -> "1000224" 
  "1000229" -> "1000238" 
  "1000230" -> "1000229" 
  "1000231" -> "1000230" 
  "1000232" -> "1000233" 
  "1000233" -> "1000231" 
  "1000238" -> "1000246" 
  "1000238" -> "1000240" 
  "1000240" -> "1000427" 
  "1000243" -> "1000269" 
  "1000243" -> "1000425" 
  "1000244" -> "1000243" 
  "1000244" -> "1000255" 
  "1000245" -> "1000244" 
  "1000246" -> "1000247" 
  "1000247" -> "1000245" 
  "1000251" -> "1000262" 
  "1000253" -> "1000251" 
  "1000255" -> "1000253" 
  "1000258" -> "1000243" 
  "1000259" -> "1000258" 
  "1000260" -> "1000259" 
  "1000261" -> "1000260" 
  "1000262" -> "1000263" 
  "1000263" -> "1000261" 
  "1000269" -> "1000274" 
  "1000272" -> "1000279" 
  "1000274" -> "1000272" 
  "1000277" -> "1000285" 
  "1000279" -> "1000277" 
  "1000282" -> "1000293" 
  "1000283" -> "1000282" 
  "1000284" -> "1000283" 
  "1000285" -> "1000286" 
  "1000286" -> "1000284" 
  "1000290" -> "1000299" 
  "1000291" -> "1000290" 
  "1000292" -> "1000291" 
  "1000293" -> "1000292" 
  "1000296" -> "1000307" 
  "1000297" -> "1000296" 
  "1000298" -> "1000297" 
  "1000299" -> "1000300" 
  "1000300" -> "1000298" 
  "1000304" -> "1000315" 
  "1000305" -> "1000304" 
  "1000306" -> "1000305" 
  "1000307" -> "1000308" 
  "1000308" -> "1000306" 
  "1000312" -> "1000325" 
  "1000313" -> "1000319" 
  "1000314" -> "1000313" 
  "1000315" -> "1000316" 
  "1000316" -> "1000314" 
  "1000319" -> "1000312" 
  "1000321" -> "1000332" 
  "1000323" -> "1000321" 
  "1000324" -> "1000323" 
  "1000325" -> "1000326" 
  "1000326" -> "1000324" 
  "1000329" -> "1000340" 
  "1000330" -> "1000329" 
  "1000331" -> "1000330" 
  "1000332" -> "1000333" 
  "1000333" -> "1000331" 
  "1000337" -> "1000345" 
  "1000338" -> "1000337" 
  "1000339" -> "1000338" 
  "1000340" -> "1000341" 
  "1000341" -> "1000339" 
  "1000345" -> "1000351" 
  "1000348" -> "1000362" 
  "1000348" -> "1000414" 
  "1000349" -> "1000348" 
  "1000350" -> "1000349" 
  "1000351" -> "1000350" 
  "1000359" -> "1000382" 
  "1000359" -> "1000403" 
  "1000360" -> "1000367" 
  "1000361" -> "1000360" 
  "1000362" -> "1000363" 
  "1000363" -> "1000361" 
  "1000366" -> "1000373" 
  "1000367" -> "1000368" 
  "1000368" -> "1000366" 
  "1000371" -> "1000359" 
  "1000372" -> "1000371" 
  "1000373" -> "1000375" 
  "1000374" -> "1000372" 
  "1000375" -> "1000374" 
  "1000380" -> "1000386" 
  "1000382" -> "1000380" 
  "1000384" -> "1000390" 
  "1000386" -> "1000384" 
  "1000387" -> "1000396" 
  "1000389" -> "1000387" 
  "1000390" -> "1000392" 
  "1000391" -> "1000389" 
  "1000392" -> "1000391" 
  "1000396" -> "1000400" 
  "1000400" -> "1000427" 
  "1000402" -> "1000414" 
  "1000403" -> "1000408" 
  "1000406" -> "1000402" 
  "1000407" -> "1000406" 
  "1000408" -> "1000407" 
  "1000413" -> "1000416" 
  "1000414" -> "1000413" 
  "1000416" -> "1000420" 
  "1000419" -> "1000423" 
  "1000420" -> "1000419" 
  "1000423" -> "1000427" 
  "1000425" -> "1000427" 
  "1000117" -> "1000139" 
}
