digraph tftp_connect {  
"1000133" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000135" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000138" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000139" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000144" [label = "(<operator>.logicalNot,!v4)" ]
"1000146" [label = "(RETURN,return 27;,return 27;)" ]
"1000148" [label = "(<operator>.assignment,v5 = v4)" ]
"1000151" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000153" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000154" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000155" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000156" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000157" [label = "(<operator>.indirection,*a1)" ]
"1000161" [label = "(<operator>.logicalNot,!v6)" ]
"1000164" [label = "(<operator>.assignment,v8 = 512)" ]
"1000168" [label = "(<operator>.assignment,v6 = v8)" ]
"1000172" [label = "(<operator>.assignment,result = 71)" ]
"1000176" [label = "(<operator>.greaterEqualsThan,(unsigned int)(v6 - 8) >= 0xFFB1)" ]
"1000177" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000178" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000179" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000183" [label = "(RETURN,return result;,return result;)" ]
"1000185" [label = "(<operator>.assignment,v8 = 512)" ]
"1000189" [label = "(<operator>.greaterEqualsThan,v6 >= 512)" ]
"1000193" [label = "(<operator>.assignment,v8 = *(_DWORD *)(*a1 + 1576))" ]
"1000195" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000196" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000197" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000198" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000199" [label = "(<operator>.indirection,*a1)" ]
"1000205" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 328))" ]
"1000206" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000207" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000208" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000209" [label = "(<operator>.addition,v5 + 328)" ]
"1000213" [label = "(<operator>.assignment,v12 = Curl_ccalloc(1, v8 + 4))" ]
"1000215" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000217" [label = "(<operator>.addition,v8 + 4)" ]
"1000220" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v12)" ]
"1000221" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000222" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000223" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000224" [label = "(<operator>.addition,v5 + 328)" ]
"1000229" [label = "(<operator>.logicalNot,!v12)" ]
"1000231" [label = "(RETURN,return 27;,return 27;)" ]
"1000234" [label = "(<operator>.logicalOr,*(_DWORD *)(v5 + 332) || (v16 = Curl_ccalloc(1, v8 + 4), (*(_DWORD *)(v5 + 332) = v16) != 0))" ]
"1000235" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000236" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000237" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000238" [label = "(<operator>.addition,v5 + 332)" ]
"1000242" [label = "(<operator>.assignment,v16 = Curl_ccalloc(1, v8 + 4))" ]
"1000244" [label = "(Curl_ccalloc,Curl_ccalloc(1, v8 + 4))" ]
"1000246" [label = "(<operator>.addition,v8 + 4)" ]
"1000249" [label = "(<operator>.notEquals,(*(_DWORD *)(v5 + 332) = v16) != 0)" ]
"1000250" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v16)" ]
"1000251" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000252" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000253" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000254" [label = "(<operator>.addition,v5 + 332)" ]
"1000260" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000263" [label = "(<operator>.assignment,v9 = a1[105])" ]
"1000265" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000268" [label = "(<operator>.assignment,v10 = a1[20])" ]
"1000270" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000273" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000274" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000275" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000276" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000277" [label = "(<operator>.addition,v5 + 16)" ]
"1000281" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = v9)" ]
"1000282" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000283" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000284" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000285" [label = "(<operator>.addition,v5 + 20)" ]
"1000289" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000290" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000291" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000292" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000295" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v6)" ]
"1000296" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000297" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000298" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000299" [label = "(<operator>.addition,v5 + 324)" ]
"1000303" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000304" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000305" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000306" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000307" [label = "(<operator>.addition,v5 + 8)" ]
"1000310" [label = "(<operator>.minus,-100)" ]
"1000312" [label = "(<operator>.assignment,v11 = *(_DWORD *)(v10 + 4))" ]
"1000314" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 4))" ]
"1000315" [label = "(<operator>.cast,(_DWORD *)(v10 + 4))" ]
"1000316" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000317" [label = "(<operator>.addition,v10 + 4)" ]
"1000320" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = 512)" ]
"1000321" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000322" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000323" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000324" [label = "(<operator>.addition,v5 + 320)" ]
"1000328" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = v11)" ]
"1000329" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000330" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000331" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000332" [label = "(<operator>.addition,v5 + 52)" ]
"1000336" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000339" [label = "(<operator>.equals,(a1[147] & 0x40) == 0)" ]
"1000340" [label = "(<operator>.and,a1[147] & 0x40)" ]
"1000341" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000348" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000349" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000350" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000351" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000352" [label = "(<operator>.addition,v5 + 20)" ]
"1000355" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000356" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000357" [label = "(<operator>.addition,v5 + 52)" ]
"1000360" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000361" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000362" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000363" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000364" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000369" [label = "(<operator>.assignment,v14 = *a1)" ]
"1000371" [label = "(<operator>.indirection,*a1)" ]
"1000373" [label = "(<operator>.assignment,v13 = _errno_location())" ]
"1000375" [label = "(_errno_location,_errno_location())" ]
"1000376" [label = "(<operator>.assignment,v15 = (const char *)Curl_strerror(*v13, v17, 128))" ]
"1000378" [label = "(<operator>.cast,(const char *)Curl_strerror(*v13, v17, 128))" ]
"1000379" [label = "(UNKNOWN,const char *,const char *)" ]
"1000380" [label = "(Curl_strerror,Curl_strerror(*v13, v17, 128))" ]
"1000381" [label = "(<operator>.indirection,*v13)" ]
"1000385" [label = "(Curl_failf,Curl_failf(v14, \"bind() failed; %s\", v15))" ]
"1000389" [label = "(RETURN,return 7;,return 7;)" ]
"1000391" [label = "(<operator>.assignment,a1[147] = a1[147] & 0xFFFFFFBF | 0x40)" ]
"1000392" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000395" [label = "(<operator>.or,a1[147] & 0xFFFFFFBF | 0x40)" ]
"1000396" [label = "(<operator>.and,a1[147] & 0xFFFFFFBF)" ]
"1000397" [label = "(<operator>.indirectIndexAccess,a1[147])" ]
"1000402" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000403" [label = "(<operator>.indirection,*a1)" ]
"1000405" [label = "(<operator>.assignment,result = 0)" ]
"1000408" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000409" [label = "(<operator>.indirection,*a2)" ]
"1000412" [label = "(RETURN,return result;,return result;)" ]
"1000414" [label = "(RETURN,return 27;,return 27;)" ]
"1000115" [label = "(METHOD,tftp_connect)" ]
"1000416" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000133" -> "1000139" 
  "1000135" -> "1000133" 
  "1000138" -> "1000144" 
  "1000139" -> "1000138" 
  "1000144" -> "1000146" 
  "1000144" -> "1000148" 
  "1000146" -> "1000416" 
  "1000148" -> "1000155" 
  "1000151" -> "1000161" 
  "1000153" -> "1000151" 
  "1000154" -> "1000153" 
  "1000155" -> "1000157" 
  "1000156" -> "1000154" 
  "1000157" -> "1000156" 
  "1000161" -> "1000164" 
  "1000161" -> "1000172" 
  "1000164" -> "1000168" 
  "1000168" -> "1000208" 
  "1000172" -> "1000178" 
  "1000176" -> "1000183" 
  "1000176" -> "1000185" 
  "1000177" -> "1000176" 
  "1000178" -> "1000179" 
  "1000179" -> "1000177" 
  "1000183" -> "1000416" 
  "1000185" -> "1000189" 
  "1000189" -> "1000197" 
  "1000189" -> "1000208" 
  "1000193" -> "1000168" 
  "1000195" -> "1000193" 
  "1000196" -> "1000195" 
  "1000197" -> "1000199" 
  "1000198" -> "1000196" 
  "1000199" -> "1000198" 
  "1000205" -> "1000237" 
  "1000205" -> "1000217" 
  "1000206" -> "1000205" 
  "1000207" -> "1000206" 
  "1000208" -> "1000209" 
  "1000209" -> "1000207" 
  "1000213" -> "1000223" 
  "1000215" -> "1000213" 
  "1000217" -> "1000215" 
  "1000220" -> "1000229" 
  "1000221" -> "1000220" 
  "1000222" -> "1000221" 
  "1000223" -> "1000224" 
  "1000224" -> "1000222" 
  "1000229" -> "1000237" 
  "1000229" -> "1000231" 
  "1000231" -> "1000416" 
  "1000234" -> "1000260" 
  "1000234" -> "1000414" 
  "1000235" -> "1000234" 
  "1000235" -> "1000246" 
  "1000236" -> "1000235" 
  "1000237" -> "1000238" 
  "1000238" -> "1000236" 
  "1000242" -> "1000253" 
  "1000244" -> "1000242" 
  "1000246" -> "1000244" 
  "1000249" -> "1000234" 
  "1000250" -> "1000249" 
  "1000251" -> "1000250" 
  "1000252" -> "1000251" 
  "1000253" -> "1000254" 
  "1000254" -> "1000252" 
  "1000260" -> "1000265" 
  "1000263" -> "1000270" 
  "1000265" -> "1000263" 
  "1000268" -> "1000276" 
  "1000270" -> "1000268" 
  "1000273" -> "1000284" 
  "1000274" -> "1000273" 
  "1000275" -> "1000274" 
  "1000276" -> "1000277" 
  "1000277" -> "1000275" 
  "1000281" -> "1000292" 
  "1000282" -> "1000281" 
  "1000283" -> "1000282" 
  "1000284" -> "1000285" 
  "1000285" -> "1000283" 
  "1000289" -> "1000298" 
  "1000290" -> "1000289" 
  "1000291" -> "1000290" 
  "1000292" -> "1000291" 
  "1000295" -> "1000306" 
  "1000296" -> "1000295" 
  "1000297" -> "1000296" 
  "1000298" -> "1000299" 
  "1000299" -> "1000297" 
  "1000303" -> "1000316" 
  "1000304" -> "1000310" 
  "1000305" -> "1000304" 
  "1000306" -> "1000307" 
  "1000307" -> "1000305" 
  "1000310" -> "1000303" 
  "1000312" -> "1000323" 
  "1000314" -> "1000312" 
  "1000315" -> "1000314" 
  "1000316" -> "1000317" 
  "1000317" -> "1000315" 
  "1000320" -> "1000331" 
  "1000321" -> "1000320" 
  "1000322" -> "1000321" 
  "1000323" -> "1000324" 
  "1000324" -> "1000322" 
  "1000328" -> "1000336" 
  "1000329" -> "1000328" 
  "1000330" -> "1000329" 
  "1000331" -> "1000332" 
  "1000332" -> "1000330" 
  "1000336" -> "1000341" 
  "1000339" -> "1000351" 
  "1000339" -> "1000403" 
  "1000340" -> "1000339" 
  "1000341" -> "1000340" 
  "1000348" -> "1000371" 
  "1000348" -> "1000392" 
  "1000349" -> "1000356" 
  "1000350" -> "1000349" 
  "1000351" -> "1000352" 
  "1000352" -> "1000350" 
  "1000355" -> "1000362" 
  "1000356" -> "1000357" 
  "1000357" -> "1000355" 
  "1000360" -> "1000348" 
  "1000361" -> "1000360" 
  "1000362" -> "1000364" 
  "1000363" -> "1000361" 
  "1000364" -> "1000363" 
  "1000369" -> "1000375" 
  "1000371" -> "1000369" 
  "1000373" -> "1000379" 
  "1000375" -> "1000373" 
  "1000376" -> "1000385" 
  "1000378" -> "1000376" 
  "1000379" -> "1000381" 
  "1000380" -> "1000378" 
  "1000381" -> "1000380" 
  "1000385" -> "1000389" 
  "1000389" -> "1000416" 
  "1000391" -> "1000403" 
  "1000392" -> "1000397" 
  "1000395" -> "1000391" 
  "1000396" -> "1000395" 
  "1000397" -> "1000396" 
  "1000402" -> "1000405" 
  "1000403" -> "1000402" 
  "1000405" -> "1000409" 
  "1000408" -> "1000412" 
  "1000409" -> "1000408" 
  "1000412" -> "1000416" 
  "1000414" -> "1000416" 
  "1000115" -> "1000135" 
}
