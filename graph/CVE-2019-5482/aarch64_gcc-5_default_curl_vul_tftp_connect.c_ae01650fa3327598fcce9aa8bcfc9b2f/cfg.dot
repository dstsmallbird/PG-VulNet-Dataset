digraph tftp_connect {  
"1000131" [label = "(<operator>.assignment,a1[148] = v4)" ]
"1000132" [label = "(<operator>.indirectIndexAccess,a1[148])" ]
"1000137" [label = "(<operator>.logicalNot,!v4)" ]
"1000140" [label = "(<operator>.assignment,v5 = v4)" ]
"1000148" [label = "(<operator>.greaterThan,(unsigned int)(v6 - 8) > 0xFFB0)" ]
"1000149" [label = "(<operator>.cast,(unsigned int)(v6 - 8))" ]
"1000150" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000151" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000155" [label = "(RETURN,return result;,return result;)" ]
"1000159" [label = "(<operator>.assignment,v7 = 512)" ]
"1000163" [label = "(<operator>.logicalNot,!*(_QWORD *)(v5 + 352))" ]
"1000164" [label = "(<operator>.indirection,*(_QWORD *)(v5 + 352))" ]
"1000165" [label = "(<operator>.cast,(_QWORD *)(v5 + 352))" ]
"1000166" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000167" [label = "(<operator>.addition,v5 + 352)" ]
"1000171" [label = "(<operator>.assignment,*(_QWORD *)(v5 + 352) = v11)" ]
"1000172" [label = "(<operator>.indirection,*(_QWORD *)(v5 + 352))" ]
"1000173" [label = "(<operator>.cast,(_QWORD *)(v5 + 352))" ]
"1000174" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000175" [label = "(<operator>.addition,v5 + 352)" ]
"1000180" [label = "(<operator>.logicalNot,!v11)" ]
"1000184" [label = "(<operator>.assignment,v8 = *((_DWORD *)a1 + 156))" ]
"1000186" [label = "(<operator>.indirection,*((_DWORD *)a1 + 156))" ]
"1000187" [label = "(<operator>.addition,(_DWORD *)a1 + 156)" ]
"1000188" [label = "(<operator>.cast,(_DWORD *)a1)" ]
"1000189" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000192" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000193" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000194" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000195" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000198" [label = "(<operator>.assignment,*(_WORD *)(v5 + 72) = v9)" ]
"1000199" [label = "(<operator>.indirection,*(_WORD *)(v5 + 72))" ]
"1000200" [label = "(<operator>.cast,(_WORD *)(v5 + 72))" ]
"1000201" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000202" [label = "(<operator>.addition,v5 + 72)" ]
"1000206" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000207" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000208" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000209" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000210" [label = "(<operator>.addition,v5 + 8)" ]
"1000213" [label = "(<operator>.minus,-100)" ]
"1000215" [label = "(<operator>.assignment,*(_QWORD *)(v5 + 16) = a1)" ]
"1000216" [label = "(<operator>.indirection,*(_QWORD *)(v5 + 16))" ]
"1000217" [label = "(<operator>.cast,(_QWORD *)(v5 + 16))" ]
"1000218" [label = "(UNKNOWN,_QWORD *,_QWORD *)" ]
"1000219" [label = "(<operator>.addition,v5 + 16)" ]
"1000223" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 24) = v8)" ]
"1000224" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 24))" ]
"1000225" [label = "(<operator>.cast,(_DWORD *)(v5 + 24))" ]
"1000226" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000227" [label = "(<operator>.addition,v5 + 24)" ]
"1000231" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 340) = v7)" ]
"1000232" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 340))" ]
"1000233" [label = "(<operator>.cast,(_DWORD *)(v5 + 340))" ]
"1000234" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000235" [label = "(<operator>.addition,v5 + 340)" ]
"1000239" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 344) = v7)" ]
"1000240" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 344))" ]
"1000241" [label = "(<operator>.cast,(_DWORD *)(v5 + 344))" ]
"1000242" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000243" [label = "(<operator>.addition,v5 + 344)" ]
"1000247" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000250" [label = "(<operator>.equals,(*((_BYTE *)a1 + 895) & 2) == 0)" ]
"1000251" [label = "(<operator>.and,*((_BYTE *)a1 + 895) & 2)" ]
"1000252" [label = "(<operator>.indirection,*((_BYTE *)a1 + 895))" ]
"1000253" [label = "(<operator>.addition,(_BYTE *)a1 + 895)" ]
"1000254" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000255" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000262" [label = "(<operator>.assignment,v12 = __errno_location())" ]
"1000264" [label = "(__errno_location,__errno_location())" ]
"1000265" [label = "(<operator>.assignment,v13 = *a1)" ]
"1000267" [label = "(<operator>.indirection,*a1)" ]
"1000269" [label = "(Curl_failf,Curl_failf(v13, \"bind() failed; %s\", v14))" ]
"1000274" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 895) |= 2u)" ]
"1000275" [label = "(<operator>.indirection,*((_BYTE *)a1 + 895))" ]
"1000276" [label = "(<operator>.addition,(_BYTE *)a1 + 895)" ]
"1000277" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000278" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000282" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000283" [label = "(<operator>.indirection,*a1)" ]
"1000286" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000287" [label = "(<operator>.indirection,*a2)" ]
"1000290" [label = "(RETURN,return result;,return result;)" ]
"1000114" [label = "(METHOD,tftp_connect)" ]
"1000293" [label = "(METHOD_RETURN,__int64 __fastcall)" ]
  "1000131" -> "1000137" 
  "1000132" -> "1000131" 
  "1000137" -> "1000140" 
  "1000140" -> "1000150" 
  "1000140" -> "1000159" 
  "1000148" -> "1000166" 
  "1000148" -> "1000155" 
  "1000149" -> "1000148" 
  "1000150" -> "1000151" 
  "1000151" -> "1000149" 
  "1000155" -> "1000293" 
  "1000159" -> "1000166" 
  "1000163" -> "1000174" 
  "1000163" -> "1000189" 
  "1000164" -> "1000163" 
  "1000165" -> "1000164" 
  "1000166" -> "1000167" 
  "1000167" -> "1000165" 
  "1000171" -> "1000180" 
  "1000172" -> "1000171" 
  "1000173" -> "1000172" 
  "1000174" -> "1000175" 
  "1000175" -> "1000173" 
  "1000180" -> "1000189" 
  "1000184" -> "1000195" 
  "1000186" -> "1000184" 
  "1000187" -> "1000186" 
  "1000188" -> "1000187" 
  "1000189" -> "1000188" 
  "1000192" -> "1000201" 
  "1000193" -> "1000192" 
  "1000194" -> "1000193" 
  "1000195" -> "1000194" 
  "1000198" -> "1000209" 
  "1000199" -> "1000198" 
  "1000200" -> "1000199" 
  "1000201" -> "1000202" 
  "1000202" -> "1000200" 
  "1000206" -> "1000218" 
  "1000207" -> "1000213" 
  "1000208" -> "1000207" 
  "1000209" -> "1000210" 
  "1000210" -> "1000208" 
  "1000213" -> "1000206" 
  "1000215" -> "1000226" 
  "1000216" -> "1000215" 
  "1000217" -> "1000216" 
  "1000218" -> "1000219" 
  "1000219" -> "1000217" 
  "1000223" -> "1000234" 
  "1000224" -> "1000223" 
  "1000225" -> "1000224" 
  "1000226" -> "1000227" 
  "1000227" -> "1000225" 
  "1000231" -> "1000242" 
  "1000232" -> "1000231" 
  "1000233" -> "1000232" 
  "1000234" -> "1000235" 
  "1000235" -> "1000233" 
  "1000239" -> "1000247" 
  "1000240" -> "1000239" 
  "1000241" -> "1000240" 
  "1000242" -> "1000243" 
  "1000243" -> "1000241" 
  "1000247" -> "1000255" 
  "1000250" -> "1000264" 
  "1000250" -> "1000283" 
  "1000251" -> "1000250" 
  "1000252" -> "1000251" 
  "1000253" -> "1000252" 
  "1000254" -> "1000253" 
  "1000255" -> "1000254" 
  "1000262" -> "1000267" 
  "1000264" -> "1000262" 
  "1000265" -> "1000269" 
  "1000267" -> "1000265" 
  "1000269" -> "1000278" 
  "1000274" -> "1000283" 
  "1000275" -> "1000274" 
  "1000276" -> "1000275" 
  "1000277" -> "1000276" 
  "1000278" -> "1000277" 
  "1000282" -> "1000287" 
  "1000283" -> "1000282" 
  "1000286" -> "1000290" 
  "1000287" -> "1000286" 
  "1000290" -> "1000293" 
  "1000114" -> "1000132" 
}
