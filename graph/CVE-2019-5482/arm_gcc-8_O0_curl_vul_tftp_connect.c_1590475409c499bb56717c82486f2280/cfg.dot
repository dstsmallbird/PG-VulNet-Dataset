digraph tftp_connect {  
"1000117" [label = "(<operator>.assignment,v9 = 512)" ]
"1000120" [label = "(<operator>.assignment,a1[188] = Curl_ccalloc(1, 336))" ]
"1000121" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000124" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000127" [label = "(<operator>.assignment,v10 = a1[188])" ]
"1000129" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000133" [label = "(<operator>.logicalNot,!v10)" ]
"1000135" [label = "(RETURN,return 27;,return 27;)" ]
"1000138" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000139" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000140" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000141" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000142" [label = "(<operator>.indirection,*a1)" ]
"1000146" [label = "(<operator>.assignment,v9 = *(_DWORD *)(*a1 + 1576))" ]
"1000148" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000149" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000150" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000151" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000152" [label = "(<operator>.indirection,*a1)" ]
"1000156" [label = "(<operator>.logicalOr,v9 > 65464 || v9 <= 7)" ]
"1000157" [label = "(<operator>.greaterThan,v9 > 65464)" ]
"1000160" [label = "(<operator>.lessEqualsThan,v9 <= 7)" ]
"1000163" [label = "(RETURN,return 71;,return 71;)" ]
"1000166" [label = "(<operator>.logicalNot,!*(_DWORD *)(v10 + 328))" ]
"1000167" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 328))" ]
"1000168" [label = "(<operator>.cast,(_DWORD *)(v10 + 328))" ]
"1000169" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000170" [label = "(<operator>.addition,v10 + 328)" ]
"1000174" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 328) = Curl_ccalloc(1u, v9 + 4))" ]
"1000175" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 328))" ]
"1000176" [label = "(<operator>.cast,(_DWORD *)(v10 + 328))" ]
"1000177" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000178" [label = "(<operator>.addition,v10 + 328)" ]
"1000181" [label = "(Curl_ccalloc,Curl_ccalloc(1u, v9 + 4))" ]
"1000183" [label = "(<operator>.addition,v9 + 4)" ]
"1000187" [label = "(<operator>.logicalNot,!*(_DWORD *)(v10 + 328))" ]
"1000188" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 328))" ]
"1000189" [label = "(<operator>.cast,(_DWORD *)(v10 + 328))" ]
"1000190" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000191" [label = "(<operator>.addition,v10 + 328)" ]
"1000194" [label = "(RETURN,return 27;,return 27;)" ]
"1000197" [label = "(<operator>.logicalOr,*(_DWORD *)(v10 + 332) || (*(_DWORD *)(v10 + 332) = Curl_ccalloc(1u, v9 + 4)) != 0)" ]
"1000198" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 332))" ]
"1000199" [label = "(<operator>.cast,(_DWORD *)(v10 + 332))" ]
"1000200" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000201" [label = "(<operator>.addition,v10 + 332)" ]
"1000204" [label = "(<operator>.notEquals,(*(_DWORD *)(v10 + 332) = Curl_ccalloc(1u, v9 + 4)) != 0)" ]
"1000205" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 332) = Curl_ccalloc(1u, v9 + 4))" ]
"1000206" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 332))" ]
"1000207" [label = "(<operator>.cast,(_DWORD *)(v10 + 332))" ]
"1000208" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000209" [label = "(<operator>.addition,v10 + 332)" ]
"1000212" [label = "(Curl_ccalloc,Curl_ccalloc(1u, v9 + 4))" ]
"1000214" [label = "(<operator>.addition,v9 + 4)" ]
"1000219" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000222" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 16) = a1)" ]
"1000223" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 16))" ]
"1000224" [label = "(<operator>.cast,(_DWORD *)(v10 + 16))" ]
"1000225" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000226" [label = "(<operator>.addition,v10 + 16)" ]
"1000230" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 20) = *(_DWORD *)(*(_DWORD *)(v10 + 16) + 420))" ]
"1000231" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 20))" ]
"1000232" [label = "(<operator>.cast,(_DWORD *)(v10 + 20))" ]
"1000233" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000234" [label = "(<operator>.addition,v10 + 20)" ]
"1000237" [label = "(<operator>.indirection,*(_DWORD *)(*(_DWORD *)(v10 + 16) + 420))" ]
"1000238" [label = "(<operator>.cast,(_DWORD *)(*(_DWORD *)(v10 + 16) + 420))" ]
"1000239" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000240" [label = "(<operator>.addition,*(_DWORD *)(v10 + 16) + 420)" ]
"1000241" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 16))" ]
"1000242" [label = "(<operator>.cast,(_DWORD *)(v10 + 16))" ]
"1000243" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000244" [label = "(<operator>.addition,v10 + 16)" ]
"1000248" [label = "(<operator>.assignment,*(_DWORD *)v10 = 0)" ]
"1000249" [label = "(<operator>.indirection,*(_DWORD *)v10)" ]
"1000250" [label = "(<operator>.cast,(_DWORD *)v10)" ]
"1000251" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000254" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 8) = -100)" ]
"1000255" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 8))" ]
"1000256" [label = "(<operator>.cast,(_DWORD *)(v10 + 8))" ]
"1000257" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000258" [label = "(<operator>.addition,v10 + 8)" ]
"1000261" [label = "(<operator>.minus,-100)" ]
"1000263" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 320) = v9)" ]
"1000264" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 320))" ]
"1000265" [label = "(<operator>.cast,(_DWORD *)(v10 + 320))" ]
"1000266" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000267" [label = "(<operator>.addition,v10 + 320)" ]
"1000271" [label = "(<operator>.assignment,*(_DWORD *)(v10 + 324) = v9)" ]
"1000272" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 324))" ]
"1000273" [label = "(<operator>.cast,(_DWORD *)(v10 + 324))" ]
"1000274" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000275" [label = "(<operator>.addition,v10 + 324)" ]
"1000279" [label = "(<operator>.assignment,*(_WORD *)(v10 + 52) = *(_DWORD *)(a1[20] + 4))" ]
"1000280" [label = "(<operator>.indirection,*(_WORD *)(v10 + 52))" ]
"1000281" [label = "(<operator>.cast,(_WORD *)(v10 + 52))" ]
"1000282" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000283" [label = "(<operator>.addition,v10 + 52)" ]
"1000286" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000287" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000288" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000289" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000290" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000294" [label = "(tftp_set_timeouts,tftp_set_timeouts(v10))" ]
"1000297" [label = "(<operator>.equals,(*((_BYTE *)a1 + 591) & 2) == 0)" ]
"1000298" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000299" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000300" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000301" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000302" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000309" [label = "(bind,bind(*(_DWORD *)(v10 + 20), (const struct sockaddr *)(v10 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000310" [label = "(<operator>.indirection,*(_DWORD *)(v10 + 20))" ]
"1000311" [label = "(<operator>.cast,(_DWORD *)(v10 + 20))" ]
"1000312" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000313" [label = "(<operator>.addition,v10 + 20)" ]
"1000316" [label = "(<operator>.cast,(const struct sockaddr *)(v10 + 52))" ]
"1000317" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000318" [label = "(<operator>.addition,v10 + 52)" ]
"1000321" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000322" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000323" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000324" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000325" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000330" [label = "(<operator>.assignment,v3 = *a1)" ]
"1000332" [label = "(<operator>.indirection,*a1)" ]
"1000334" [label = "(<operator>.assignment,v4 = _errno_location())" ]
"1000336" [label = "(_errno_location,_errno_location())" ]
"1000337" [label = "(<operator>.assignment,v5 = (const char *)Curl_strerror(*v4, v11, 128))" ]
"1000339" [label = "(<operator>.cast,(const char *)Curl_strerror(*v4, v11, 128))" ]
"1000340" [label = "(UNKNOWN,const char *,const char *)" ]
"1000341" [label = "(Curl_strerror,Curl_strerror(*v4, v11, 128))" ]
"1000342" [label = "(<operator>.indirection,*v4)" ]
"1000346" [label = "(Curl_failf,Curl_failf(v3, \"bind() failed; %s\", v5))" ]
"1000350" [label = "(RETURN,return 7;,return 7;)" ]
"1000352" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 591) |= 2u)" ]
"1000353" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000354" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000355" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000356" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000360" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000361" [label = "(<operator>.indirection,*a1)" ]
"1000363" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000364" [label = "(<operator>.indirection,*a2)" ]
"1000367" [label = "(RETURN,return 0;,return 0;)" ]
"1000369" [label = "(RETURN,return 27;,return 27;)" ]
"1000107" [label = "(METHOD,tftp_connect)" ]
"1000371" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000117" -> "1000121" 
  "1000120" -> "1000129" 
  "1000121" -> "1000124" 
  "1000124" -> "1000120" 
  "1000127" -> "1000133" 
  "1000129" -> "1000127" 
  "1000133" -> "1000140" 
  "1000133" -> "1000135" 
  "1000135" -> "1000371" 
  "1000138" -> "1000169" 
  "1000138" -> "1000150" 
  "1000139" -> "1000138" 
  "1000140" -> "1000142" 
  "1000141" -> "1000139" 
  "1000142" -> "1000141" 
  "1000146" -> "1000157" 
  "1000148" -> "1000146" 
  "1000149" -> "1000148" 
  "1000150" -> "1000152" 
  "1000151" -> "1000149" 
  "1000152" -> "1000151" 
  "1000156" -> "1000169" 
  "1000156" -> "1000163" 
  "1000157" -> "1000156" 
  "1000157" -> "1000160" 
  "1000160" -> "1000156" 
  "1000163" -> "1000371" 
  "1000166" -> "1000177" 
  "1000166" -> "1000200" 
  "1000167" -> "1000166" 
  "1000168" -> "1000167" 
  "1000169" -> "1000170" 
  "1000170" -> "1000168" 
  "1000174" -> "1000190" 
  "1000175" -> "1000183" 
  "1000176" -> "1000175" 
  "1000177" -> "1000178" 
  "1000178" -> "1000176" 
  "1000181" -> "1000174" 
  "1000183" -> "1000181" 
  "1000187" -> "1000200" 
  "1000187" -> "1000194" 
  "1000188" -> "1000187" 
  "1000189" -> "1000188" 
  "1000190" -> "1000191" 
  "1000191" -> "1000189" 
  "1000194" -> "1000371" 
  "1000197" -> "1000219" 
  "1000197" -> "1000369" 
  "1000198" -> "1000208" 
  "1000198" -> "1000197" 
  "1000199" -> "1000198" 
  "1000200" -> "1000201" 
  "1000201" -> "1000199" 
  "1000204" -> "1000197" 
  "1000205" -> "1000204" 
  "1000206" -> "1000214" 
  "1000207" -> "1000206" 
  "1000208" -> "1000209" 
  "1000209" -> "1000207" 
  "1000212" -> "1000205" 
  "1000214" -> "1000212" 
  "1000219" -> "1000225" 
  "1000222" -> "1000233" 
  "1000223" -> "1000222" 
  "1000224" -> "1000223" 
  "1000225" -> "1000226" 
  "1000226" -> "1000224" 
  "1000230" -> "1000251" 
  "1000231" -> "1000239" 
  "1000232" -> "1000231" 
  "1000233" -> "1000234" 
  "1000234" -> "1000232" 
  "1000237" -> "1000230" 
  "1000238" -> "1000237" 
  "1000239" -> "1000243" 
  "1000240" -> "1000238" 
  "1000241" -> "1000240" 
  "1000242" -> "1000241" 
  "1000243" -> "1000244" 
  "1000244" -> "1000242" 
  "1000248" -> "1000257" 
  "1000249" -> "1000248" 
  "1000250" -> "1000249" 
  "1000251" -> "1000250" 
  "1000254" -> "1000266" 
  "1000255" -> "1000261" 
  "1000256" -> "1000255" 
  "1000257" -> "1000258" 
  "1000258" -> "1000256" 
  "1000261" -> "1000254" 
  "1000263" -> "1000274" 
  "1000264" -> "1000263" 
  "1000265" -> "1000264" 
  "1000266" -> "1000267" 
  "1000267" -> "1000265" 
  "1000271" -> "1000282" 
  "1000272" -> "1000271" 
  "1000273" -> "1000272" 
  "1000274" -> "1000275" 
  "1000275" -> "1000273" 
  "1000279" -> "1000294" 
  "1000280" -> "1000288" 
  "1000281" -> "1000280" 
  "1000282" -> "1000283" 
  "1000283" -> "1000281" 
  "1000286" -> "1000279" 
  "1000287" -> "1000286" 
  "1000288" -> "1000290" 
  "1000289" -> "1000287" 
  "1000290" -> "1000289" 
  "1000294" -> "1000302" 
  "1000297" -> "1000312" 
  "1000297" -> "1000361" 
  "1000298" -> "1000297" 
  "1000299" -> "1000298" 
  "1000300" -> "1000299" 
  "1000301" -> "1000300" 
  "1000302" -> "1000301" 
  "1000309" -> "1000356" 
  "1000309" -> "1000332" 
  "1000310" -> "1000317" 
  "1000311" -> "1000310" 
  "1000312" -> "1000313" 
  "1000313" -> "1000311" 
  "1000316" -> "1000323" 
  "1000317" -> "1000318" 
  "1000318" -> "1000316" 
  "1000321" -> "1000309" 
  "1000322" -> "1000321" 
  "1000323" -> "1000325" 
  "1000324" -> "1000322" 
  "1000325" -> "1000324" 
  "1000330" -> "1000336" 
  "1000332" -> "1000330" 
  "1000334" -> "1000340" 
  "1000336" -> "1000334" 
  "1000337" -> "1000346" 
  "1000339" -> "1000337" 
  "1000340" -> "1000342" 
  "1000341" -> "1000339" 
  "1000342" -> "1000341" 
  "1000346" -> "1000350" 
  "1000350" -> "1000371" 
  "1000352" -> "1000361" 
  "1000353" -> "1000352" 
  "1000354" -> "1000353" 
  "1000355" -> "1000354" 
  "1000356" -> "1000355" 
  "1000360" -> "1000364" 
  "1000361" -> "1000360" 
  "1000363" -> "1000367" 
  "1000364" -> "1000363" 
  "1000367" -> "1000371" 
  "1000369" -> "1000371" 
  "1000107" -> "1000117" 
}
