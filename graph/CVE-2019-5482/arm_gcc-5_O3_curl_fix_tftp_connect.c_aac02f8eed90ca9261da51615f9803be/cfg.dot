digraph tftp_connect {  
"1000129" [label = "(<operator>.assignment,v4 = Curl_ccalloc(1, 336))" ]
"1000131" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000134" [label = "(<operator>.assignment,a1[188] = v4)" ]
"1000135" [label = "(<operator>.indirectIndexAccess,a1[188])" ]
"1000140" [label = "(<operator>.logicalNot,!v4)" ]
"1000142" [label = "(RETURN,return 27;,return 27;)" ]
"1000144" [label = "(<operator>.assignment,v5 = v4)" ]
"1000147" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1576))" ]
"1000149" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000150" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000151" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000152" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000153" [label = "(<operator>.indirection,*a1)" ]
"1000157" [label = "(<operator>.logicalNot,!v6)" ]
"1000160" [label = "(<operator>.assignment,v7 = 512)" ]
"1000164" [label = "(<operator>.assignment,v6 = v7)" ]
"1000169" [label = "(<operator>.greaterThan,v6 - 8 > (unsigned int)&off_FFB0)" ]
"1000170" [label = "(<operator>.subtraction,v6 - 8)" ]
"1000173" [label = "(<operator>.cast,(unsigned int)&off_FFB0)" ]
"1000174" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000175" [label = "(<operator>.addressOf,&off_FFB0)" ]
"1000177" [label = "(RETURN,return 71;,return 71;)" ]
"1000180" [label = "(<operator>.greaterEqualsThan,v6 >= 512)" ]
"1000184" [label = "(<operator>.assignment,v7 = *(_DWORD *)(*a1 + 1576))" ]
"1000186" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1576))" ]
"1000187" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1576))" ]
"1000188" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000189" [label = "(<operator>.addition,*a1 + 1576)" ]
"1000190" [label = "(<operator>.indirection,*a1)" ]
"1000194" [label = "(<operator>.assignment,v7 = 512)" ]
"1000199" [label = "(<operator>.logicalNot,!*(_DWORD *)(v4 + 328))" ]
"1000200" [label = "(<operator>.indirection,*(_DWORD *)(v4 + 328))" ]
"1000201" [label = "(<operator>.cast,(_DWORD *)(v4 + 328))" ]
"1000202" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000203" [label = "(<operator>.addition,v4 + 328)" ]
"1000207" [label = "(<operator>.assignment,v10 = Curl_ccalloc(1, v7 + 4))" ]
"1000209" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000211" [label = "(<operator>.addition,v7 + 4)" ]
"1000214" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 328) = v10)" ]
"1000215" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 328))" ]
"1000216" [label = "(<operator>.cast,(_DWORD *)(v5 + 328))" ]
"1000217" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000218" [label = "(<operator>.addition,v5 + 328)" ]
"1000223" [label = "(<operator>.logicalNot,!v10)" ]
"1000225" [label = "(RETURN,return 27;,return 27;)" ]
"1000228" [label = "(<operator>.logicalNot,!*(_DWORD *)(v5 + 332))" ]
"1000229" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000230" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000231" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000232" [label = "(<operator>.addition,v5 + 332)" ]
"1000236" [label = "(<operator>.assignment,v14 = Curl_ccalloc(1, v7 + 4))" ]
"1000238" [label = "(Curl_ccalloc,Curl_ccalloc(1, v7 + 4))" ]
"1000240" [label = "(<operator>.addition,v7 + 4)" ]
"1000243" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 332) = v14)" ]
"1000244" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 332))" ]
"1000245" [label = "(<operator>.cast,(_DWORD *)(v5 + 332))" ]
"1000246" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000247" [label = "(<operator>.addition,v5 + 332)" ]
"1000252" [label = "(<operator>.logicalNot,!v14)" ]
"1000254" [label = "(RETURN,return 27;,return 27;)" ]
"1000256" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000259" [label = "(<operator>.assignment,v8 = *(_DWORD *)(a1[20] + 4))" ]
"1000261" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 4))" ]
"1000262" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 4))" ]
"1000263" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000264" [label = "(<operator>.addition,a1[20] + 4)" ]
"1000265" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000269" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 20) = a1[105])" ]
"1000270" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000271" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000272" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000273" [label = "(<operator>.addition,v5 + 20)" ]
"1000276" [label = "(<operator>.indirectIndexAccess,a1[105])" ]
"1000279" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 320) = 512)" ]
"1000280" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 320))" ]
"1000281" [label = "(<operator>.cast,(_DWORD *)(v5 + 320))" ]
"1000282" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000283" [label = "(<operator>.addition,v5 + 320)" ]
"1000287" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 16) = a1)" ]
"1000288" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 16))" ]
"1000289" [label = "(<operator>.cast,(_DWORD *)(v5 + 16))" ]
"1000290" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000291" [label = "(<operator>.addition,v5 + 16)" ]
"1000295" [label = "(<operator>.assignment,*(_WORD *)(v5 + 52) = v8)" ]
"1000296" [label = "(<operator>.indirection,*(_WORD *)(v5 + 52))" ]
"1000297" [label = "(<operator>.cast,(_WORD *)(v5 + 52))" ]
"1000298" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000299" [label = "(<operator>.addition,v5 + 52)" ]
"1000303" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 324) = v6)" ]
"1000304" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 324))" ]
"1000305" [label = "(<operator>.cast,(_DWORD *)(v5 + 324))" ]
"1000306" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000307" [label = "(<operator>.addition,v5 + 324)" ]
"1000311" [label = "(<operator>.assignment,*(_DWORD *)v5 = 0)" ]
"1000312" [label = "(<operator>.indirection,*(_DWORD *)v5)" ]
"1000313" [label = "(<operator>.cast,(_DWORD *)v5)" ]
"1000314" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000317" [label = "(<operator>.assignment,*(_DWORD *)(v5 + 8) = -100)" ]
"1000318" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 8))" ]
"1000319" [label = "(<operator>.cast,(_DWORD *)(v5 + 8))" ]
"1000320" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000321" [label = "(<operator>.addition,v5 + 8)" ]
"1000324" [label = "(<operator>.minus,-100)" ]
"1000326" [label = "(tftp_set_timeouts,tftp_set_timeouts(v5))" ]
"1000329" [label = "(<operator>.notEquals,(*((_BYTE *)a1 + 591) & 2) != 0)" ]
"1000330" [label = "(<operator>.and,*((_BYTE *)a1 + 591) & 2)" ]
"1000331" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000332" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000333" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000334" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000341" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000342" [label = "(<operator>.indirection,*a1)" ]
"1000344" [label = "(<operator>.assignment,result = 0)" ]
"1000347" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000348" [label = "(<operator>.indirection,*a2)" ]
"1000351" [label = "(RETURN,return result;,return result;)" ]
"1000354" [label = "(<operator>.logicalNot,!bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000355" [label = "(bind,bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)))" ]
"1000356" [label = "(<operator>.indirection,*(_DWORD *)(v5 + 20))" ]
"1000357" [label = "(<operator>.cast,(_DWORD *)(v5 + 20))" ]
"1000358" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000359" [label = "(<operator>.addition,v5 + 20)" ]
"1000362" [label = "(<operator>.cast,(const struct sockaddr *)(v5 + 52))" ]
"1000363" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000364" [label = "(<operator>.addition,v5 + 52)" ]
"1000367" [label = "(<operator>.indirection,*(_DWORD *)(a1[20] + 16))" ]
"1000368" [label = "(<operator>.cast,(_DWORD *)(a1[20] + 16))" ]
"1000369" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000370" [label = "(<operator>.addition,a1[20] + 16)" ]
"1000371" [label = "(<operator>.indirectIndexAccess,a1[20])" ]
"1000376" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 591) |= 2u)" ]
"1000377" [label = "(<operator>.indirection,*((_BYTE *)a1 + 591))" ]
"1000378" [label = "(<operator>.addition,(_BYTE *)a1 + 591)" ]
"1000379" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000380" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000385" [label = "(<operator>.assignment,v11 = _errno_location())" ]
"1000387" [label = "(_errno_location,_errno_location())" ]
"1000388" [label = "(<operator>.assignment,v12 = *a1)" ]
"1000390" [label = "(<operator>.indirection,*a1)" ]
"1000392" [label = "(<operator>.assignment,v13 = (const char *)Curl_strerror(*v11, v15, 128))" ]
"1000394" [label = "(<operator>.cast,(const char *)Curl_strerror(*v11, v15, 128))" ]
"1000395" [label = "(UNKNOWN,const char *,const char *)" ]
"1000396" [label = "(Curl_strerror,Curl_strerror(*v11, v15, 128))" ]
"1000397" [label = "(<operator>.indirection,*v11)" ]
"1000401" [label = "(Curl_failf,Curl_failf(v12, \"bind() failed; %s\", v13))" ]
"1000405" [label = "(RETURN,return 7;,return 7;)" ]
"1000113" [label = "(METHOD,tftp_connect)" ]
"1000407" [label = "(METHOD_RETURN,int __fastcall)" ]
  "1000129" -> "1000135" 
  "1000131" -> "1000129" 
  "1000134" -> "1000140" 
  "1000135" -> "1000134" 
  "1000140" -> "1000142" 
  "1000140" -> "1000144" 
  "1000142" -> "1000407" 
  "1000144" -> "1000151" 
  "1000147" -> "1000157" 
  "1000149" -> "1000147" 
  "1000150" -> "1000149" 
  "1000151" -> "1000153" 
  "1000152" -> "1000150" 
  "1000153" -> "1000152" 
  "1000157" -> "1000160" 
  "1000157" -> "1000170" 
  "1000160" -> "1000164" 
  "1000164" -> "1000202" 
  "1000169" -> "1000177" 
  "1000169" -> "1000180" 
  "1000170" -> "1000174" 
  "1000173" -> "1000169" 
  "1000174" -> "1000175" 
  "1000175" -> "1000173" 
  "1000177" -> "1000407" 
  "1000180" -> "1000188" 
  "1000180" -> "1000194" 
  "1000184" -> "1000164" 
  "1000186" -> "1000184" 
  "1000187" -> "1000186" 
  "1000188" -> "1000190" 
  "1000189" -> "1000187" 
  "1000190" -> "1000189" 
  "1000194" -> "1000202" 
  "1000199" -> "1000231" 
  "1000199" -> "1000211" 
  "1000200" -> "1000199" 
  "1000201" -> "1000200" 
  "1000202" -> "1000203" 
  "1000203" -> "1000201" 
  "1000207" -> "1000217" 
  "1000209" -> "1000207" 
  "1000211" -> "1000209" 
  "1000214" -> "1000223" 
  "1000215" -> "1000214" 
  "1000216" -> "1000215" 
  "1000217" -> "1000218" 
  "1000218" -> "1000216" 
  "1000223" -> "1000231" 
  "1000223" -> "1000225" 
  "1000225" -> "1000407" 
  "1000228" -> "1000240" 
  "1000228" -> "1000256" 
  "1000229" -> "1000228" 
  "1000230" -> "1000229" 
  "1000231" -> "1000232" 
  "1000232" -> "1000230" 
  "1000236" -> "1000246" 
  "1000238" -> "1000236" 
  "1000240" -> "1000238" 
  "1000243" -> "1000252" 
  "1000244" -> "1000243" 
  "1000245" -> "1000244" 
  "1000246" -> "1000247" 
  "1000247" -> "1000245" 
  "1000252" -> "1000254" 
  "1000252" -> "1000256" 
  "1000254" -> "1000407" 
  "1000256" -> "1000263" 
  "1000259" -> "1000272" 
  "1000261" -> "1000259" 
  "1000262" -> "1000261" 
  "1000263" -> "1000265" 
  "1000264" -> "1000262" 
  "1000265" -> "1000264" 
  "1000269" -> "1000282" 
  "1000270" -> "1000276" 
  "1000271" -> "1000270" 
  "1000272" -> "1000273" 
  "1000273" -> "1000271" 
  "1000276" -> "1000269" 
  "1000279" -> "1000290" 
  "1000280" -> "1000279" 
  "1000281" -> "1000280" 
  "1000282" -> "1000283" 
  "1000283" -> "1000281" 
  "1000287" -> "1000298" 
  "1000288" -> "1000287" 
  "1000289" -> "1000288" 
  "1000290" -> "1000291" 
  "1000291" -> "1000289" 
  "1000295" -> "1000306" 
  "1000296" -> "1000295" 
  "1000297" -> "1000296" 
  "1000298" -> "1000299" 
  "1000299" -> "1000297" 
  "1000303" -> "1000314" 
  "1000304" -> "1000303" 
  "1000305" -> "1000304" 
  "1000306" -> "1000307" 
  "1000307" -> "1000305" 
  "1000311" -> "1000320" 
  "1000312" -> "1000311" 
  "1000313" -> "1000312" 
  "1000314" -> "1000313" 
  "1000317" -> "1000326" 
  "1000318" -> "1000324" 
  "1000319" -> "1000318" 
  "1000320" -> "1000321" 
  "1000321" -> "1000319" 
  "1000324" -> "1000317" 
  "1000326" -> "1000334" 
  "1000329" -> "1000358" 
  "1000329" -> "1000342" 
  "1000330" -> "1000329" 
  "1000331" -> "1000330" 
  "1000332" -> "1000331" 
  "1000333" -> "1000332" 
  "1000334" -> "1000333" 
  "1000341" -> "1000344" 
  "1000342" -> "1000341" 
  "1000344" -> "1000348" 
  "1000347" -> "1000351" 
  "1000348" -> "1000347" 
  "1000351" -> "1000407" 
  "1000354" -> "1000380" 
  "1000354" -> "1000387" 
  "1000355" -> "1000354" 
  "1000356" -> "1000363" 
  "1000357" -> "1000356" 
  "1000358" -> "1000359" 
  "1000359" -> "1000357" 
  "1000362" -> "1000369" 
  "1000363" -> "1000364" 
  "1000364" -> "1000362" 
  "1000367" -> "1000355" 
  "1000368" -> "1000367" 
  "1000369" -> "1000371" 
  "1000370" -> "1000368" 
  "1000371" -> "1000370" 
  "1000376" -> "1000342" 
  "1000377" -> "1000376" 
  "1000378" -> "1000377" 
  "1000379" -> "1000378" 
  "1000380" -> "1000379" 
  "1000385" -> "1000390" 
  "1000387" -> "1000385" 
  "1000388" -> "1000395" 
  "1000390" -> "1000388" 
  "1000392" -> "1000401" 
  "1000394" -> "1000392" 
  "1000395" -> "1000397" 
  "1000396" -> "1000394" 
  "1000397" -> "1000396" 
  "1000401" -> "1000405" 
  "1000405" -> "1000407" 
  "1000113" -> "1000131" 
}
