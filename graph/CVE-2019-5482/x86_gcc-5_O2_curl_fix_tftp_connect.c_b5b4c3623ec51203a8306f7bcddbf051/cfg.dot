digraph tftp_connect {  
"1000139" [label = "(<operator>.assignment,v18 = __readgsdword(0x14u))" ]
"1000141" [label = "(__readgsdword,__readgsdword(0x14u))" ]
"1000143" [label = "(<operator>.assignment,v2 = Curl_ccalloc(1, 336))" ]
"1000145" [label = "(Curl_ccalloc,Curl_ccalloc(1, 336))" ]
"1000148" [label = "(<operator>.assignment,a1[185] = v2)" ]
"1000149" [label = "(<operator>.indirectIndexAccess,a1[185])" ]
"1000154" [label = "(<operator>.logicalNot,!v2)" ]
"1000156" [label = "(RETURN,return 27;,return 27;)" ]
"1000158" [label = "(<operator>.assignment,v3 = v2)" ]
"1000161" [label = "(<operator>.assignment,v4 = *(_DWORD *)(*a1 + 1568))" ]
"1000163" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1568))" ]
"1000164" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1568))" ]
"1000165" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000166" [label = "(<operator>.addition,*a1 + 1568)" ]
"1000167" [label = "(<operator>.indirection,*a1)" ]
"1000171" [label = "(<operator>.logicalNot,!v4)" ]
"1000174" [label = "(<operator>.assignment,v6 = 512)" ]
"1000178" [label = "(<operator>.assignment,result = 71)" ]
"1000182" [label = "(<operator>.lessEqualsThan,(unsigned int)(v4 - 8) <= 0xFFB0)" ]
"1000183" [label = "(<operator>.cast,(unsigned int)(v4 - 8))" ]
"1000184" [label = "(UNKNOWN,unsigned int,unsigned int)" ]
"1000185" [label = "(<operator>.subtraction,v4 - 8)" ]
"1000191" [label = "(<operator>.lessEqualsThan,v4 <= 511)" ]
"1000195" [label = "(<operator>.assignment,v6 = 512)" ]
"1000200" [label = "(<operator>.logicalOr,*(_DWORD *)(v3 + 328)\n        || (v16 = v4, v14 = v6, v9 = Curl_ccalloc(1, v6 + 4), *(_DWORD *)(v3 + 328) = v9, v6 = v14, v4 = v16, v9))" ]
"1000201" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 328))" ]
"1000202" [label = "(<operator>.cast,(_DWORD *)(v3 + 328))" ]
"1000203" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000204" [label = "(<operator>.addition,v3 + 328)" ]
"1000208" [label = "(<operator>.assignment,v16 = v4)" ]
"1000212" [label = "(<operator>.assignment,v14 = v6)" ]
"1000216" [label = "(<operator>.assignment,v9 = Curl_ccalloc(1, v6 + 4))" ]
"1000218" [label = "(Curl_ccalloc,Curl_ccalloc(1, v6 + 4))" ]
"1000220" [label = "(<operator>.addition,v6 + 4)" ]
"1000224" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 328) = v9)" ]
"1000225" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 328))" ]
"1000226" [label = "(<operator>.cast,(_DWORD *)(v3 + 328))" ]
"1000227" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000228" [label = "(<operator>.addition,v3 + 328)" ]
"1000233" [label = "(<operator>.assignment,v6 = v14)" ]
"1000237" [label = "(<operator>.assignment,v4 = v16)" ]
"1000243" [label = "(<operator>.logicalOr,*(_DWORD *)(v3 + 332)\n          || (v15 = v4, v12 = Curl_ccalloc(1, v6 + 4), *(_DWORD *)(v3 + 332) = v12, v4 = v15, v12))" ]
"1000244" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 332))" ]
"1000245" [label = "(<operator>.cast,(_DWORD *)(v3 + 332))" ]
"1000246" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000247" [label = "(<operator>.addition,v3 + 332)" ]
"1000251" [label = "(<operator>.assignment,v15 = v4)" ]
"1000255" [label = "(<operator>.assignment,v12 = Curl_ccalloc(1, v6 + 4))" ]
"1000257" [label = "(Curl_ccalloc,Curl_ccalloc(1, v6 + 4))" ]
"1000259" [label = "(<operator>.addition,v6 + 4)" ]
"1000263" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 332) = v12)" ]
"1000264" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 332))" ]
"1000265" [label = "(<operator>.cast,(_DWORD *)(v3 + 332))" ]
"1000266" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000267" [label = "(<operator>.addition,v3 + 332)" ]
"1000272" [label = "(<operator>.assignment,v4 = v15)" ]
"1000277" [label = "(<operator>.assignment,v13 = v4)" ]
"1000280" [label = "(Curl_conncontrol,Curl_conncontrol(a1, 1))" ]
"1000283" [label = "(<operator>.assignment,v7 = a1[103])" ]
"1000285" [label = "(<operator>.indirectIndexAccess,a1[103])" ]
"1000288" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 16) = a1)" ]
"1000289" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 16))" ]
"1000290" [label = "(<operator>.cast,(_DWORD *)(v3 + 16))" ]
"1000291" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000292" [label = "(<operator>.addition,v3 + 16)" ]
"1000296" [label = "(<operator>.assignment,*(_DWORD *)v3 = 0)" ]
"1000297" [label = "(<operator>.indirection,*(_DWORD *)v3)" ]
"1000298" [label = "(<operator>.cast,(_DWORD *)v3)" ]
"1000299" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000302" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 8) = -100)" ]
"1000303" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 8))" ]
"1000304" [label = "(<operator>.cast,(_DWORD *)(v3 + 8))" ]
"1000305" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000306" [label = "(<operator>.addition,v3 + 8)" ]
"1000309" [label = "(<operator>.minus,-100)" ]
"1000311" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 320) = 512)" ]
"1000312" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 320))" ]
"1000313" [label = "(<operator>.cast,(_DWORD *)(v3 + 320))" ]
"1000314" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000315" [label = "(<operator>.addition,v3 + 320)" ]
"1000319" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 20) = v7)" ]
"1000320" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 20))" ]
"1000321" [label = "(<operator>.cast,(_DWORD *)(v3 + 20))" ]
"1000322" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000323" [label = "(<operator>.addition,v3 + 20)" ]
"1000327" [label = "(<operator>.assignment,v8 = a1[18])" ]
"1000329" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000332" [label = "(<operator>.assignment,*(_DWORD *)(v3 + 324) = v13)" ]
"1000333" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 324))" ]
"1000334" [label = "(<operator>.cast,(_DWORD *)(v3 + 324))" ]
"1000335" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000336" [label = "(<operator>.addition,v3 + 324)" ]
"1000340" [label = "(<operator>.assignment,*(_WORD *)(v3 + 52) = *(_DWORD *)(v8 + 4))" ]
"1000341" [label = "(<operator>.indirection,*(_WORD *)(v3 + 52))" ]
"1000342" [label = "(<operator>.cast,(_WORD *)(v3 + 52))" ]
"1000343" [label = "(UNKNOWN,_WORD *,_WORD *)" ]
"1000344" [label = "(<operator>.addition,v3 + 52)" ]
"1000347" [label = "(<operator>.indirection,*(_DWORD *)(v8 + 4))" ]
"1000348" [label = "(<operator>.cast,(_DWORD *)(v8 + 4))" ]
"1000349" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000350" [label = "(<operator>.addition,v8 + 4)" ]
"1000353" [label = "(tftp_set_timeouts,tftp_set_timeouts())" ]
"1000355" [label = "(<operator>.equals,(*((_BYTE *)a1 + 583) & 2) == 0)" ]
"1000356" [label = "(<operator>.and,*((_BYTE *)a1 + 583) & 2)" ]
"1000357" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000358" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000359" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000360" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000367" [label = "(bind,bind(*(_DWORD *)(v3 + 20), (const struct sockaddr *)(v3 + 52), *(_DWORD *)(a1[18] + 16)))" ]
"1000368" [label = "(<operator>.indirection,*(_DWORD *)(v3 + 20))" ]
"1000369" [label = "(<operator>.cast,(_DWORD *)(v3 + 20))" ]
"1000370" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000371" [label = "(<operator>.addition,v3 + 20)" ]
"1000374" [label = "(<operator>.cast,(const struct sockaddr *)(v3 + 52))" ]
"1000375" [label = "(UNKNOWN,const struct sockaddr *,const struct sockaddr *)" ]
"1000376" [label = "(<operator>.addition,v3 + 52)" ]
"1000379" [label = "(<operator>.indirection,*(_DWORD *)(a1[18] + 16))" ]
"1000380" [label = "(<operator>.cast,(_DWORD *)(a1[18] + 16))" ]
"1000381" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000382" [label = "(<operator>.addition,a1[18] + 16)" ]
"1000383" [label = "(<operator>.indirectIndexAccess,a1[18])" ]
"1000388" [label = "(<operator>.assignment,v10 = __errno_location())" ]
"1000390" [label = "(__errno_location,__errno_location())" ]
"1000391" [label = "(<operator>.assignment,v11 = Curl_strerror(*v10, buf, 128))" ]
"1000393" [label = "(Curl_strerror,Curl_strerror(*v10, buf, 128))" ]
"1000394" [label = "(<operator>.indirection,*v10)" ]
"1000398" [label = "(Curl_failf,Curl_failf(*a1, \"bind() failed; %s\", v11))" ]
"1000399" [label = "(<operator>.indirection,*a1)" ]
"1000403" [label = "(RETURN,return 7;,return 7;)" ]
"1000405" [label = "(<operators>.assignmentOr,*((_BYTE *)a1 + 583) |= 2u)" ]
"1000406" [label = "(<operator>.indirection,*((_BYTE *)a1 + 583))" ]
"1000407" [label = "(<operator>.addition,(_BYTE *)a1 + 583)" ]
"1000408" [label = "(<operator>.cast,(_BYTE *)a1)" ]
"1000409" [label = "(UNKNOWN,_BYTE *,_BYTE *)" ]
"1000413" [label = "(Curl_pgrsStartNow,Curl_pgrsStartNow(*a1))" ]
"1000414" [label = "(<operator>.indirection,*a1)" ]
"1000416" [label = "(<operator>.assignment,*a2 = 1)" ]
"1000417" [label = "(<operator>.indirection,*a2)" ]
"1000420" [label = "(RETURN,return 0;,return 0;)" ]
"1000422" [label = "(RETURN,return 27;,return 27;)" ]
"1000424" [label = "(<operator>.assignment,v6 = *(_DWORD *)(*a1 + 1568))" ]
"1000426" [label = "(<operator>.indirection,*(_DWORD *)(*a1 + 1568))" ]
"1000427" [label = "(<operator>.cast,(_DWORD *)(*a1 + 1568))" ]
"1000428" [label = "(UNKNOWN,_DWORD *,_DWORD *)" ]
"1000429" [label = "(<operator>.addition,*a1 + 1568)" ]
"1000430" [label = "(<operator>.indirection,*a1)" ]
"1000434" [label = "(<operator>.assignment,v4 = v6)" ]
"1000438" [label = "(RETURN,return result;,return result;)" ]
"1000118" [label = "(METHOD,tftp_connect)" ]
"1000440" [label = "(METHOD_RETURN,int __cdecl)" ]
  "1000139" -> "1000145" 
  "1000141" -> "1000139" 
  "1000143" -> "1000149" 
  "1000145" -> "1000143" 
  "1000148" -> "1000154" 
  "1000149" -> "1000148" 
  "1000154" -> "1000156" 
  "1000154" -> "1000158" 
  "1000156" -> "1000440" 
  "1000158" -> "1000165" 
  "1000161" -> "1000171" 
  "1000163" -> "1000161" 
  "1000164" -> "1000163" 
  "1000165" -> "1000167" 
  "1000166" -> "1000164" 
  "1000167" -> "1000166" 
  "1000171" -> "1000174" 
  "1000171" -> "1000178" 
  "1000174" -> "1000434" 
  "1000178" -> "1000184" 
  "1000182" -> "1000191" 
  "1000182" -> "1000438" 
  "1000183" -> "1000182" 
  "1000184" -> "1000185" 
  "1000185" -> "1000183" 
  "1000191" -> "1000195" 
  "1000191" -> "1000428" 
  "1000195" -> "1000203" 
  "1000200" -> "1000246" 
  "1000200" -> "1000422" 
  "1000201" -> "1000200" 
  "1000201" -> "1000208" 
  "1000202" -> "1000201" 
  "1000203" -> "1000204" 
  "1000204" -> "1000202" 
  "1000208" -> "1000212" 
  "1000212" -> "1000220" 
  "1000216" -> "1000227" 
  "1000218" -> "1000216" 
  "1000220" -> "1000218" 
  "1000224" -> "1000233" 
  "1000225" -> "1000224" 
  "1000226" -> "1000225" 
  "1000227" -> "1000228" 
  "1000228" -> "1000226" 
  "1000233" -> "1000237" 
  "1000237" -> "1000200" 
  "1000243" -> "1000277" 
  "1000243" -> "1000422" 
  "1000244" -> "1000243" 
  "1000244" -> "1000251" 
  "1000245" -> "1000244" 
  "1000246" -> "1000247" 
  "1000247" -> "1000245" 
  "1000251" -> "1000259" 
  "1000255" -> "1000266" 
  "1000257" -> "1000255" 
  "1000259" -> "1000257" 
  "1000263" -> "1000272" 
  "1000264" -> "1000263" 
  "1000265" -> "1000264" 
  "1000266" -> "1000267" 
  "1000267" -> "1000265" 
  "1000272" -> "1000243" 
  "1000277" -> "1000280" 
  "1000280" -> "1000285" 
  "1000283" -> "1000291" 
  "1000285" -> "1000283" 
  "1000288" -> "1000299" 
  "1000289" -> "1000288" 
  "1000290" -> "1000289" 
  "1000291" -> "1000292" 
  "1000292" -> "1000290" 
  "1000296" -> "1000305" 
  "1000297" -> "1000296" 
  "1000298" -> "1000297" 
  "1000299" -> "1000298" 
  "1000302" -> "1000314" 
  "1000303" -> "1000309" 
  "1000304" -> "1000303" 
  "1000305" -> "1000306" 
  "1000306" -> "1000304" 
  "1000309" -> "1000302" 
  "1000311" -> "1000322" 
  "1000312" -> "1000311" 
  "1000313" -> "1000312" 
  "1000314" -> "1000315" 
  "1000315" -> "1000313" 
  "1000319" -> "1000329" 
  "1000320" -> "1000319" 
  "1000321" -> "1000320" 
  "1000322" -> "1000323" 
  "1000323" -> "1000321" 
  "1000327" -> "1000335" 
  "1000329" -> "1000327" 
  "1000332" -> "1000343" 
  "1000333" -> "1000332" 
  "1000334" -> "1000333" 
  "1000335" -> "1000336" 
  "1000336" -> "1000334" 
  "1000340" -> "1000353" 
  "1000341" -> "1000349" 
  "1000342" -> "1000341" 
  "1000343" -> "1000344" 
  "1000344" -> "1000342" 
  "1000347" -> "1000340" 
  "1000348" -> "1000347" 
  "1000349" -> "1000350" 
  "1000350" -> "1000348" 
  "1000353" -> "1000360" 
  "1000355" -> "1000370" 
  "1000355" -> "1000414" 
  "1000356" -> "1000355" 
  "1000357" -> "1000356" 
  "1000358" -> "1000357" 
  "1000359" -> "1000358" 
  "1000360" -> "1000359" 
  "1000367" -> "1000409" 
  "1000367" -> "1000390" 
  "1000368" -> "1000375" 
  "1000369" -> "1000368" 
  "1000370" -> "1000371" 
  "1000371" -> "1000369" 
  "1000374" -> "1000381" 
  "1000375" -> "1000376" 
  "1000376" -> "1000374" 
  "1000379" -> "1000367" 
  "1000380" -> "1000379" 
  "1000381" -> "1000383" 
  "1000382" -> "1000380" 
  "1000383" -> "1000382" 
  "1000388" -> "1000394" 
  "1000390" -> "1000388" 
  "1000391" -> "1000399" 
  "1000393" -> "1000391" 
  "1000394" -> "1000393" 
  "1000398" -> "1000403" 
  "1000399" -> "1000398" 
  "1000403" -> "1000440" 
  "1000405" -> "1000414" 
  "1000406" -> "1000405" 
  "1000407" -> "1000406" 
  "1000408" -> "1000407" 
  "1000409" -> "1000408" 
  "1000413" -> "1000417" 
  "1000414" -> "1000413" 
  "1000416" -> "1000420" 
  "1000417" -> "1000416" 
  "1000420" -> "1000440" 
  "1000422" -> "1000440" 
  "1000424" -> "1000434" 
  "1000426" -> "1000424" 
  "1000427" -> "1000426" 
  "1000428" -> "1000430" 
  "1000429" -> "1000427" 
  "1000430" -> "1000429" 
  "1000434" -> "1000203" 
  "1000438" -> "1000440" 
  "1000118" -> "1000141" 
}
