__int64 __fastcall tftp_connect(_QWORD *a1, _BYTE *a2)
{
  __int64 v4; // x0
  __int64 v6; // x19
  __int64 v7; // x0
  int v8; // w23
  __int64 v9; // x0
  __int64 v10; // x0
  __int64 v11; // x0
  int *v12; // x0
  __int64 v13; // x19
  const char *v14; // x0
  char v15[128]; // [xsp+48h] [xbp+48h] BYREF

  v4 = Curl_ccalloc(1LL, 368LL);
  a1[148] = v4;
  if ( !v4 )
    return 27LL;
  v6 = v4;
  v7 = *(_QWORD *)(*a1 + 1976LL);
  if ( v7 )
  {
    v8 = *(_QWORD *)(*a1 + 1976LL);
    if ( (unsigned int)(v7 - 8) > 0xFFB0 )
      return 71LL;
  }
  else
  {
    v8 = 512;
  }
  if ( !*(_QWORD *)(v6 + 352) )
  {
    v11 = Curl_ccalloc(1LL, v8 + 4);
    *(_QWORD *)(v6 + 352) = v11;
    if ( !v11 )
      return 27LL;
  }
  if ( !*(_QWORD *)(v6 + 360) )
  {
    v9 = Curl_ccalloc(1LL, v8 + 4);
    *(_QWORD *)(v6 + 360) = v9;
    if ( !v9 )
      return 27LL;
  }
  Curl_conncontrol(a1, 1LL);
  *(_DWORD *)(v6 + 24) = *((_DWORD *)a1 + 156);
  *(_DWORD *)(v6 + 8) = -100;
  v10 = a1[14];
  *(_DWORD *)v6 = 0;
  *(_QWORD *)(v6 + 16) = a1;
  *(_DWORD *)(v6 + 340) = v8;
  *(_WORD *)(v6 + 72) = *(_DWORD *)(v10 + 4);
  *(_DWORD *)(v6 + 344) = v8;
  tftp_set_timeouts(v6);
  if ( (*((_BYTE *)a1 + 895) & 2) != 0 )
    goto LABEL_11;
  if ( !bind(*(_DWORD *)(v6 + 24), (const struct sockaddr *)(v6 + 72), *(_DWORD *)(a1[14] + 16LL)) )
  {
    *((_BYTE *)a1 + 895) |= 2u;
LABEL_11:
    Curl_pgrsStartNow(*a1);
    *a2 = 1;
    return 0LL;
  }
  v12 = __errno_location();
  v13 = *a1;
  v14 = (const char *)Curl_strerror((unsigned int)*v12, v15, 128LL);
  Curl_failf(v13, "bind() failed; %s", v14);
  return 7LL;
}
