int __cdecl tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v2; // eax
  int v3; // esi
  int v4; // ebp
  int result; // eax
  int v6; // eax
  int v7; // eax
  int *v8; // eax
  char v9; // al
  char buf[128]; // [esp+24h] [ebp-A0h] BYREF
  unsigned int v11; // [esp+A4h] [ebp-20h]

  v11 = __readgsdword(0x14u);
  v2 = Curl_ccalloc(1, 336);
  a1[185] = v2;
  if ( !v2 )
    return 27;
  v3 = v2;
  v4 = *(_DWORD *)(*a1 + 1568);
  if ( !v4 )
  {
    v4 = 512;
    goto LABEL_6;
  }
  result = 71;
  if ( (unsigned int)(v4 - 8) <= 0xFFB0 )
  {
LABEL_6:
    if ( !*(_DWORD *)(v3 + 328) )
    {
      v6 = Curl_ccalloc(1, v4 + 4);
      *(_DWORD *)(v3 + 328) = v6;
      if ( !v6 )
        return 27;
    }
    if ( !*(_DWORD *)(v3 + 332) )
    {
      v7 = Curl_ccalloc(1, v4 + 4);
      *(_DWORD *)(v3 + 332) = v7;
      if ( !v7 )
        return 27;
    }
    Curl_conncontrol(a1, 1);
    *(_DWORD *)(v3 + 16) = a1;
    *(_DWORD *)(v3 + 20) = a1[103];
    *(_DWORD *)v3 = 0;
    *(_DWORD *)(v3 + 8) = -100;
    *(_DWORD *)(v3 + 320) = v4;
    *(_DWORD *)(v3 + 324) = v4;
    *(_WORD *)(v3 + 52) = *(_DWORD *)(a1[18] + 4);
    tftp_set_timeouts();
    if ( (*((_BYTE *)a1 + 583) & 2) == 0 )
    {
      if ( bind(*(_DWORD *)(v3 + 20), (const struct sockaddr *)(v3 + 52), *(_DWORD *)(a1[18] + 16)) )
      {
        v8 = __errno_location();
        v9 = Curl_strerror(*v8, buf, 128);
        Curl_failf(*a1, "bind() failed; %s", v9);
        return 7;
      }
      *((_BYTE *)a1 + 583) |= 2u;
    }
    Curl_pgrsStartNow(*a1);
    *a2 = 1;
    result = 0;
  }
  return result;
}
