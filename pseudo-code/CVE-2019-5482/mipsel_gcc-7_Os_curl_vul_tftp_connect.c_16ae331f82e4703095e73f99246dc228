int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // $v0
  int result; // $v0
  int v6; // $s0
  int v7; // $s2
  int v8; // $v0
  int v9; // $v0
  int v10; // $v0
  int v11; // $v0
  int *v12; // $v0
  int v13; // $s0
  const char *v14; // $v0
  char v15[128]; // [sp+1Ch] [-88h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v6 = v4;
  v7 = *(_DWORD *)(*a1 + 1576);
  if ( !v7 )
  {
    v7 = 512;
    goto LABEL_6;
  }
  result = 71;
  if ( (unsigned int)(v7 - 8) < 0xFFB1 )
  {
LABEL_6:
    if ( !*(_DWORD *)(v6 + 328) )
    {
      v10 = Curl_ccalloc(1, v7 + 4);
      *(_DWORD *)(v6 + 328) = v10;
      if ( !v10 )
        return 27;
    }
    if ( !*(_DWORD *)(v6 + 332) )
    {
      v11 = Curl_ccalloc(1, v7 + 4);
      *(_DWORD *)(v6 + 332) = v11;
      if ( !v11 )
        return 27;
    }
    Curl_conncontrol(a1, 1);
    v8 = a1[105];
    *(_DWORD *)(v6 + 16) = a1;
    *(_DWORD *)(v6 + 20) = v8;
    *(_DWORD *)v6 = 0;
    *(_DWORD *)(v6 + 8) = -100;
    v9 = a1[20];
    *(_DWORD *)(v6 + 320) = v7;
    *(_DWORD *)(v6 + 324) = v7;
    *(_WORD *)(v6 + 52) = *(_DWORD *)(v9 + 4);
    tftp_set_timeouts(v6);
    if ( ((a1[147] >> 25) & 1) == 0 )
    {
      if ( bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)) )
      {
        v13 = *a1;
        v12 = _errno_location();
        v14 = (const char *)Curl_strerror(*v12, v15, 128);
        Curl_failf(v13, "bind() failed; %s", v14);
        return 7;
      }
      a1[147] = a1[147] & 0xFDFFFFFF | 0x2000000;
    }
    Curl_pgrsStartNow(*a1);
    *a2 = 1;
    result = 0;
  }
  return result;
}
