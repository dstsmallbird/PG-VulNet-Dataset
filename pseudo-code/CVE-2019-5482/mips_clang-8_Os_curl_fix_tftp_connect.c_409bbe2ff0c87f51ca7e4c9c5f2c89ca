int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // $v0
  int v5; // $s5
  int v6; // $s3
  int result; // $v0
  int v8; // $v0
  int v9; // $s4
  int v10; // $v0
  int v11; // $v0
  bool v12; // dc
  int v13; // $at
  int v14; // $s1
  int *v15; // $v0
  const char *v16; // $v0
  char v17[128]; // [sp+10h] [-80h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v5 = *(_DWORD *)(*a1 + 1576);
  v6 = v4;
  if ( v5 )
  {
    result = 71;
    if ( (unsigned int)(v5 - 8) > 0xFFB0 )
      return result;
    v8 = 512;
    if ( v5 >= 513 )
      v8 = *(_DWORD *)(*a1 + 1576);
    v9 = v8 + 4;
  }
  else
  {
    v9 = 516;
    v5 = 512;
  }
  if ( !*(_DWORD *)(v6 + 328) )
  {
    v10 = Curl_ccalloc(1, v9);
    *(_DWORD *)(v6 + 328) = v10;
    if ( !v10 )
      return 27;
  }
  if ( *(_DWORD *)(v6 + 332)
    || (v11 = Curl_ccalloc(1, v9), *(_DWORD *)(v6 + 332) = v11, v12 = v11 == 0, result = 27, !v12) )
  {
    Curl_conncontrol(a1, 1);
    *(_DWORD *)(v6 + 16) = a1;
    v13 = a1[105];
    *(_DWORD *)(v6 + 324) = v5;
    *(_DWORD *)(v6 + 320) = 512;
    *(_DWORD *)(v6 + 8) = -100;
    *(_DWORD *)(v6 + 20) = v13;
    *(_DWORD *)v6 = 0;
    *(_WORD *)(v6 + 52) = *(_DWORD *)(a1[20] + 4);
    tftp_set_timeouts(v6);
    if ( (*((_BYTE *)a1 + 591) & 0x40) == 0 )
    {
      if ( bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)) )
      {
        v14 = *a1;
        v15 = _errno_location();
        v16 = (const char *)Curl_strerror(*v15, v17, 128);
        Curl_failf(v14, "bind() failed; %s", v16);
        return 7;
      }
      a1[147] |= 0x40u;
    }
    Curl_pgrsStartNow(*a1);
    *a2 = 1;
    result = 0;
  }
  return result;
}
