__int64 __fastcall tftp_connect(_QWORD *a1, _BYTE *a2)
{
  __int64 v4; // x0
  __int64 v5; // x19
  __int64 v6; // x1
  int v7; // w24
  int v8; // w21
  int v9; // w3
  int v10; // w2
  __int64 result; // x0
  __int64 v12; // x0
  __int64 v13; // x0
  int *v14; // x0
  __int64 v15; // x19
  const char *v16; // x0
  char v17[128]; // [xsp+58h] [xbp+58h] BYREF

  v4 = Curl_ccalloc(1LL, 368LL);
  a1[148] = v4;
  if ( !v4 )
    return 27LL;
  v5 = v4;
  v6 = *(_QWORD *)(*a1 + 1976LL);
  if ( v6 )
  {
    v7 = *(_QWORD *)(*a1 + 1976LL);
    result = 71LL;
    if ( (unsigned int)(v6 - 8) > 0xFFB0 )
      return result;
    if ( (int)v6 < 512 )
      v8 = 512;
    else
      v8 = *(_QWORD *)(*a1 + 1976LL);
    if ( *(_QWORD *)(v5 + 352) )
      goto LABEL_4;
  }
  else
  {
    v7 = 512;
    v8 = 512;
    if ( *(_QWORD *)(v4 + 352) )
      goto LABEL_4;
  }
  v12 = Curl_ccalloc(1LL, v8 + 4);
  *(_QWORD *)(v5 + 352) = v12;
  if ( !v12 )
    return 27LL;
LABEL_4:
  if ( !*(_QWORD *)(v5 + 360) )
  {
    v13 = Curl_ccalloc(1LL, v8 + 4);
    *(_QWORD *)(v5 + 360) = v13;
    if ( !v13 )
      return 27LL;
  }
  Curl_conncontrol(a1, 1LL);
  v9 = *((_DWORD *)a1 + 156);
  v10 = *(_DWORD *)(a1[14] + 4LL);
  *(_DWORD *)v5 = 0;
  *(_DWORD *)(v5 + 8) = -100;
  *(_QWORD *)(v5 + 16) = a1;
  *(_DWORD *)(v5 + 24) = v9;
  *(_WORD *)(v5 + 72) = v10;
  *(_DWORD *)(v5 + 340) = 512;
  *(_DWORD *)(v5 + 344) = v7;
  tftp_set_timeouts(v5);
  if ( (*((_BYTE *)a1 + 895) & 2) == 0 )
  {
    if ( bind(*(_DWORD *)(v5 + 24), (const struct sockaddr *)(v5 + 72), *(_DWORD *)(a1[14] + 16LL)) )
    {
      v14 = __errno_location();
      v15 = *a1;
      v16 = (const char *)Curl_strerror((unsigned int)*v14, v17, 128LL);
      Curl_failf(v15, "bind() failed; %s", v16);
      return 7LL;
    }
    *((_BYTE *)a1 + 895) |= 2u;
  }
  Curl_pgrsStartNow(*a1);
  result = 0LL;
  *a2 = 1;
  return result;
}
