int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // $v0
  int v5; // $s0
  int v6; // $s2
  int v7; // $v0
  int v8; // $v1
  int result; // $v0
  int v10; // $v0
  int v11; // $v0
  int *v12; // $v0
  int v13; // $s0
  const char *v14; // $v0
  char v15[128]; // [sp+1Ch] [-88h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v5 = v4;
  v6 = *(_DWORD *)(*a1 + 1576);
  if ( v6 )
  {
    result = 71;
    if ( (unsigned int)(v6 - 8) >= 0xFFB1 )
      return result;
  }
  else
  {
    v6 = 512;
  }
  if ( !*(_DWORD *)(v5 + 328) )
  {
    v11 = Curl_ccalloc(1, v6 + 4);
    *(_DWORD *)(v5 + 328) = v11;
    if ( !v11 )
      return 27;
  }
  if ( !*(_DWORD *)(v5 + 332) )
  {
    v10 = Curl_ccalloc(1, v6 + 4);
    *(_DWORD *)(v5 + 332) = v10;
    if ( !v10 )
      return 27;
  }
  Curl_conncontrol(a1, 1);
  v7 = a1[20];
  v8 = a1[105];
  *(_DWORD *)(v5 + 16) = a1;
  *(_DWORD *)v5 = 0;
  *(_DWORD *)(v5 + 20) = v8;
  *(_DWORD *)(v5 + 320) = v6;
  *(_DWORD *)(v5 + 8) = -100;
  *(_DWORD *)(v5 + 324) = v6;
  *(_WORD *)(v5 + 52) = *(_DWORD *)(v7 + 4);
  tftp_set_timeouts(v5);
  if ( (a1[147] & 0x40) == 0 )
  {
    if ( bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)) )
    {
      v13 = *a1;
      v12 = _errno_location();
      v14 = (const char *)Curl_strerror(*v12, v15, 128);
      Curl_failf(v13, "bind() failed; %s", v14);
      return 7;
    }
    a1[147] = a1[147] & 0xFFFFFFBF | 0x40;
  }
  Curl_pgrsStartNow(*a1);
  result = 0;
  *a2 = 1;
  return result;
}
