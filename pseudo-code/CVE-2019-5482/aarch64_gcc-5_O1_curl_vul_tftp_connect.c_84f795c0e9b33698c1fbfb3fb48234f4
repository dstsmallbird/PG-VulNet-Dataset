__int64 __fastcall tftp_connect(_QWORD *a1, _BYTE *a2)
{
  __int64 v4; // x0
  __int64 v5; // x19
  __int64 v6; // x1
  __int64 result; // x0
  int v8; // w22
  __int64 v9; // x0
  __int64 v10; // x0
  __int64 v11; // x19
  int *v12; // x0
  const char *v13; // x0
  __int64 v14; // [xsp+38h] [xbp+38h] BYREF

  v4 = Curl_ccalloc(1LL, 368LL);
  a1[148] = v4;
  if ( !v4 )
    return 27LL;
  v5 = v4;
  v6 = *(_QWORD *)(*a1 + 1976LL);
  if ( v6 )
  {
    result = 71LL;
    v8 = *(_QWORD *)(*a1 + 1976LL);
    if ( (unsigned int)(v6 - 8) > 0xFFB0 )
      return result;
  }
  else
  {
    v8 = 512;
  }
  if ( !*(_QWORD *)(v5 + 352) )
  {
    v9 = Curl_ccalloc(1LL, v8 + 4);
    *(_QWORD *)(v5 + 352) = v9;
    if ( !v9 )
      return 27LL;
  }
  if ( !*(_QWORD *)(v5 + 360) )
  {
    v10 = Curl_ccalloc(1LL, v8 + 4);
    *(_QWORD *)(v5 + 360) = v10;
    if ( !v10 )
      return 27LL;
  }
  Curl_conncontrol(a1, 1LL);
  *(_QWORD *)(v5 + 16) = a1;
  *(_DWORD *)(v5 + 24) = *((_DWORD *)a1 + 156);
  *(_DWORD *)v5 = 0;
  *(_DWORD *)(v5 + 8) = -100;
  *(_DWORD *)(v5 + 340) = v8;
  *(_DWORD *)(v5 + 344) = v8;
  *(_WORD *)(v5 + 72) = *(_DWORD *)(a1[14] + 4LL);
  tftp_set_timeouts(v5);
  if ( (*((_BYTE *)a1 + 895) & 2) == 0 )
  {
    if ( bind(*(_DWORD *)(v5 + 24), (const struct sockaddr *)(v5 + 72), *(_DWORD *)(a1[14] + 16LL)) )
    {
      v11 = *a1;
      v12 = __errno_location();
      v13 = (const char *)Curl_strerror((unsigned int)*v12, &v14, 128LL);
      Curl_failf(v11, "bind() failed; %s", v13);
      return 7LL;
    }
    *((_BYTE *)a1 + 895) |= 2u;
  }
  Curl_pgrsStartNow(*a1);
  *a2 = 1;
  return 0LL;
}
