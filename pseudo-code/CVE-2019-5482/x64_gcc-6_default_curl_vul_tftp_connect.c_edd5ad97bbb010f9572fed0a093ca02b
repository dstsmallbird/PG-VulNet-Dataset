__int64 __fastcall tftp_connect(_QWORD *a1, _BYTE *a2)
{
  __int64 v2; // rax
  __int64 v3; // rbx
  __int64 v4; // rdx
  int v5; // er12
  int v6; // eax
  __int64 result; // rax
  __int64 v8; // rax
  int *v9; // rax
  int v10; // eax
  int v11; // ecx
  int v12; // er8
  int v13; // er9
  __int64 v14; // rax
  char v15[136]; // [rsp+0h] [rbp-B8h] BYREF
  unsigned __int64 v16; // [rsp+88h] [rbp-30h]

  v16 = __readfsqword(0x28u);
  v2 = Curl_ccalloc(1LL, 368LL);
  a1[167] = v2;
  if ( !v2 )
    return 27LL;
  v3 = v2;
  v4 = *(_QWORD *)(*a1 + 1976LL);
  if ( v4 )
  {
    result = 71LL;
    v5 = *(_QWORD *)(*a1 + 1976LL);
    if ( (unsigned int)(v4 - 8) > 0xFFB0 )
      return result;
  }
  else
  {
    v5 = 512;
  }
  if ( !*(_QWORD *)(v3 + 352) )
  {
    v8 = Curl_ccalloc(1LL, v5 + 4);
    *(_QWORD *)(v3 + 352) = v8;
    if ( !v8 )
      return 27LL;
  }
  if ( !*(_QWORD *)(v3 + 360) )
  {
    v14 = Curl_ccalloc(1LL, v5 + 4);
    *(_QWORD *)(v3 + 360) = v14;
    if ( !v14 )
      return 27LL;
  }
  Curl_conncontrol(a1, 1LL);
  v6 = *((_DWORD *)a1 + 156);
  *(_QWORD *)(v3 + 16) = a1;
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 8) = -100;
  *(_DWORD *)(v3 + 340) = v5;
  *(_DWORD *)(v3 + 344) = v5;
  *(_DWORD *)(v3 + 24) = v6;
  *(_WORD *)(v3 + 72) = *(_DWORD *)(a1[14] + 4LL);
  tftp_set_timeouts(v3);
  if ( (*((_BYTE *)a1 + 951) & 2) != 0 )
  {
LABEL_9:
    Curl_pgrsStartNow(*a1);
    *a2 = 1;
    return 0LL;
  }
  if ( !bind(*(_DWORD *)(v3 + 24), (const struct sockaddr *)(v3 + 72), *(_DWORD *)(a1[14] + 16LL)) )
  {
    *((_BYTE *)a1 + 951) |= 2u;
    goto LABEL_9;
  }
  v9 = __errno_location();
  v10 = Curl_strerror((unsigned int)*v9, v15, 128LL);
  Curl_failf(*a1, (unsigned int)"bind() failed; %s", v10, v11, v12, v13, v15[0]);
  return 7LL;
}
