int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // r0
  int v5; // r6
  int v6; // r4
  int v7; // r7
  int v8; // r0
  int v9; // r7
  int v10; // r0
  int v11; // r0
  int v12; // r0
  int v13; // r4
  int *v14; // r0
  const char *v15; // r0
  int v17; // [sp+0h] [bp-98h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v5 = v4;
  v6 = *(_DWORD *)(*a1 + 1576);
  if ( v6 )
  {
    v7 = 71;
    if ( (unsigned int)(v6 - 8) > 0xFFB0 )
      return v7;
    v8 = *(_DWORD *)(*a1 + 1576);
    if ( v6 <= 512 )
      v8 = 512;
    v9 = v8 + 4;
  }
  else
  {
    v9 = 516;
    v6 = 512;
  }
  if ( !*(_DWORD *)(v5 + 328) )
  {
    v10 = Curl_ccalloc(1, v9);
    *(_DWORD *)(v5 + 328) = v10;
    if ( !v10 )
      return 27;
  }
  if ( *(_DWORD *)(v5 + 332) || (v11 = Curl_ccalloc(1, v9), v7 = 27, (*(_DWORD *)(v5 + 332) = v11) != 0) )
  {
    Curl_conncontrol(a1, 1);
    *(_DWORD *)(v5 + 16) = a1;
    v7 = 0;
    v12 = a1[105];
    *(_DWORD *)v5 = 0;
    *(_DWORD *)(v5 + 20) = v12;
    *(_DWORD *)(v5 + 8) = -100;
    *(_DWORD *)(v5 + 320) = 512;
    *(_DWORD *)(v5 + 324) = v6;
    *(_WORD *)(v5 + 52) = *(_DWORD *)(a1[20] + 4);
    tftp_set_timeouts(v5);
    if ( (*((_BYTE *)a1 + 591) & 2) == 0 )
    {
      if ( bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)) )
      {
        v13 = *a1;
        v14 = _errno_location();
        v15 = (const char *)Curl_strerror(*v14, &v17, 128);
        Curl_failf(v13, "bind() failed; %s", v15);
        return 7;
      }
      a1[147] |= 0x2000000u;
    }
    Curl_pgrsStartNow(*a1);
    *a2 = 1;
  }
  return v7;
}
