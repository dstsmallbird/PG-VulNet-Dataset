__int64 __fastcall tftp_connect(_QWORD *a1, _BYTE *a2)
{
  __int64 v2; // rax
  __int64 v3; // rbx
  __int64 v4; // rax
  int v5; // er14
  int v6; // eax
  __int64 v7; // rax
  __int64 result; // rax
  unsigned int v9; // edx
  __int64 v10; // rax
  __int64 v11; // rax
  int *v12; // rax
  int v13; // eax
  int v14; // ecx
  int v15; // er8
  int v16; // er9
  char v17[136]; // [rsp+0h] [rbp-B8h] BYREF
  unsigned __int64 v18; // [rsp+88h] [rbp-30h]

  v18 = __readfsqword(0x28u);
  v2 = Curl_ccalloc(1LL, 368LL);
  a1[167] = v2;
  if ( !v2 )
    return 27LL;
  v3 = v2;
  v4 = *(_QWORD *)(*a1 + 1976LL);
  if ( !v4 )
  {
    v5 = 512;
    if ( *(_QWORD *)(v3 + 352) )
      goto LABEL_4;
LABEL_12:
    v10 = Curl_ccalloc(1LL, v5 + 4);
    *(_QWORD *)(v3 + 352) = v10;
    if ( !v10 )
      return 27LL;
    goto LABEL_4;
  }
  v9 = v4 - 8;
  v5 = *(_QWORD *)(*a1 + 1976LL);
  result = 71LL;
  if ( v9 > 0xFFB0 )
    return result;
  if ( !*(_QWORD *)(v3 + 352) )
    goto LABEL_12;
LABEL_4:
  if ( !*(_QWORD *)(v3 + 360) )
  {
    v11 = Curl_ccalloc(1LL, v5 + 4);
    *(_QWORD *)(v3 + 360) = v11;
    if ( !v11 )
      return 27LL;
  }
  Curl_conncontrol(a1, 1LL);
  v6 = *((_DWORD *)a1 + 156);
  *(_QWORD *)(v3 + 16) = a1;
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 24) = v6;
  v7 = a1[14];
  *(_DWORD *)(v3 + 8) = -100;
  LODWORD(v7) = *(_DWORD *)(v7 + 4);
  *(_DWORD *)(v3 + 340) = v5;
  *(_DWORD *)(v3 + 344) = v5;
  *(_WORD *)(v3 + 72) = v7;
  tftp_set_timeouts(v3);
  if ( (*((_BYTE *)a1 + 951) & 2) == 0 )
  {
    if ( bind(*(_DWORD *)(v3 + 24), (const struct sockaddr *)(v3 + 72), *(_DWORD *)(a1[14] + 16LL)) )
    {
      v12 = __errno_location();
      v13 = Curl_strerror((unsigned int)*v12, v17, 128LL);
      Curl_failf(*a1, (unsigned int)"bind() failed; %s", v13, v14, v15, v16, v17[0]);
      return 7LL;
    }
    *((_BYTE *)a1 + 951) |= 2u;
  }
  Curl_pgrsStartNow(*a1);
  *a2 = 1;
  return 0LL;
}
