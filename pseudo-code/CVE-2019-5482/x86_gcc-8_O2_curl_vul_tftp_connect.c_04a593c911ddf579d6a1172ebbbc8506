int __cdecl tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v2; // eax
  int v3; // esi
  int v4; // ebp
  int v5; // eax
  int v6; // eax
  int v7; // eax
  int result; // eax
  int v9; // eax
  int v10; // eax
  int *v11; // eax
  char v12; // al
  char buf[128]; // [esp+14h] [ebp-A0h] BYREF
  unsigned int v14; // [esp+94h] [ebp-20h]

  v14 = __readgsdword(0x14u);
  v2 = Curl_ccalloc(1, 336);
  a1[185] = v2;
  if ( !v2 )
    return 27;
  v3 = v2;
  v4 = *(_DWORD *)(*a1 + 1568);
  if ( !v4 )
  {
    v4 = 512;
    if ( *(_DWORD *)(v2 + 328) )
      goto LABEL_4;
LABEL_12:
    v9 = Curl_ccalloc(1, v4 + 4);
    *(_DWORD *)(v3 + 328) = v9;
    if ( !v9 )
      return 27;
    goto LABEL_4;
  }
  result = 71;
  if ( (unsigned int)(v4 - 8) > 0xFFB0 )
    return result;
  if ( !*(_DWORD *)(v3 + 328) )
    goto LABEL_12;
LABEL_4:
  if ( !*(_DWORD *)(v3 + 332) )
  {
    v10 = Curl_ccalloc(1, v4 + 4);
    *(_DWORD *)(v3 + 332) = v10;
    if ( !v10 )
      return 27;
  }
  Curl_conncontrol(a1, 1);
  v5 = a1[103];
  *(_DWORD *)(v3 + 16) = a1;
  *(_DWORD *)v3 = 0;
  *(_DWORD *)(v3 + 20) = v5;
  v6 = a1[18];
  *(_DWORD *)(v3 + 8) = -100;
  v7 = *(_DWORD *)(v6 + 4);
  *(_DWORD *)(v3 + 320) = v4;
  *(_DWORD *)(v3 + 324) = v4;
  *(_WORD *)(v3 + 52) = v7;
  tftp_set_timeouts();
  if ( (*((_BYTE *)a1 + 583) & 2) == 0 )
  {
    if ( bind(*(_DWORD *)(v3 + 20), (const struct sockaddr *)(v3 + 52), *(_DWORD *)(a1[18] + 16)) )
    {
      v11 = __errno_location();
      v12 = Curl_strerror(*v11, buf, 128);
      Curl_failf(*a1, "bind() failed; %s", v12);
      return 7;
    }
    *((_BYTE *)a1 + 583) |= 2u;
  }
  Curl_pgrsStartNow(*a1);
  *a2 = 1;
  return 0;
}
