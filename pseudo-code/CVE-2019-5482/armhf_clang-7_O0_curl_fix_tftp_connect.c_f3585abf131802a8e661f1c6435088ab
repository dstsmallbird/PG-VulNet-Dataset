int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v2; // r0
  int *v3; // r0
  const char *v4; // r0
  _DWORD *v5; // r0
  int v6; // r1
  int v8; // [sp+Ch] [bp-B4h]
  char v9[128]; // [sp+24h] [bp-9Ch] BYREF
  int *v11; // [sp+A8h] [bp-18h]
  int *v12; // [sp+ACh] [bp-14h]
  int v13; // [sp+B0h] [bp-10h]
  _BYTE *v14; // [sp+B4h] [bp-Ch]
  _DWORD *v15; // [sp+B8h] [bp-8h]

  v15 = a1;
  v14 = a2;
  v12 = &elf_gnu_hash_bucket[47];
  v2 = Curl_ccalloc(1, &elf_gnu_hash_bucket[3]);
  v15[188] = v2;
  v13 = v2;
  if ( !v2 )
    return 27;
  if ( *(_DWORD *)(*v15 + 1576) )
  {
    v12 = *(int **)(*v15 + 1576);
    if ( (int)v12 > 65464 || (int)v12 < 8 )
      return 71;
  }
  v11 = v12;
  if ( (int)v12 < 512 )
    v11 = &elf_gnu_hash_bucket[47];
  if ( !*(_DWORD *)(v13 + 328) )
  {
    *(_DWORD *)(v13 + 328) = Curl_ccalloc(1, v11 + 1);
    if ( !*(_DWORD *)(v13 + 328) )
      return 27;
  }
  if ( *(_DWORD *)(v13 + 332) || (*(_DWORD *)(v13 + 332) = Curl_ccalloc(1, v11 + 1)) != 0 )
  {
    Curl_conncontrol(v15);
    *(_DWORD *)(v13 + 16) = v15;
    *(_DWORD *)(v13 + 20) = *(_DWORD *)(*(_DWORD *)(v13 + 16) + 420);
    *(_DWORD *)v13 = 0;
    *(_DWORD *)(v13 + 8) = -100;
    *(_DWORD *)(v13 + 320) = 512;
    *(_DWORD *)(v13 + 324) = v12;
    *(_WORD *)(v13 + 52) = *(_DWORD *)(v15[20] + 4);
    tftp_set_timeouts(v13);
    if ( ((v15[147] >> 25) & 1) == 0 )
    {
      if ( bind(*(_DWORD *)(v13 + 20), (const struct sockaddr *)(v13 + 52), *(_DWORD *)(v15[20] + 16)) )
      {
        v8 = *v15;
        v3 = _errno_location();
        v4 = (const char *)Curl_strerror(*v3, v9, &dword_80);
        Curl_failf(v8, "bind() failed; %s", v4);
        return 7;
      }
      v5 = v15;
      v6 = v15[147] | 0x2000000;
      v15[148] = v15[148];
      v5[147] = v6;
    }
    Curl_pgrsStartNow(*v15);
    *v14 = 1;
    return 0;
  }
  return 27;
}
