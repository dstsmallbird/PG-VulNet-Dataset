__int64 __fastcall tftp_connect(_QWORD *a1, _BYTE *a2)
{
  __int64 v4; // x19
  __int64 result; // x0
  __int64 v6; // x1
  int v7; // w22
  __int64 v8; // x1
  __int64 v9; // x1
  __int64 v10; // x19
  int *v11; // x0
  const char *v12; // x0
  __int64 v13; // [xsp+38h] [xbp+38h] BYREF

  v4 = Curl_ccalloc(1LL, 368LL);
  a1[148] = v4;
  result = 27LL;
  if ( v4 )
  {
    v6 = *(_QWORD *)(*a1 + 1976LL);
    if ( v6 )
    {
      result = 71LL;
      v7 = *(_QWORD *)(*a1 + 1976LL);
      if ( (unsigned int)(v6 - 8) > 0xFFB0 )
        return result;
    }
    else
    {
      v7 = 512;
    }
    if ( *(_QWORD *)(v4 + 352) || (v8 = Curl_ccalloc(1LL, v7 + 4), *(_QWORD *)(v4 + 352) = v8, result = 27LL, v8) )
    {
      if ( *(_QWORD *)(v4 + 360) || (v9 = Curl_ccalloc(1LL, v7 + 4), *(_QWORD *)(v4 + 360) = v9, result = 27LL, v9) )
      {
        Curl_conncontrol(a1, 1LL);
        *(_QWORD *)(v4 + 16) = a1;
        *(_DWORD *)(v4 + 24) = *((_DWORD *)a1 + 156);
        *(_DWORD *)v4 = 0;
        *(_DWORD *)(v4 + 8) = -100;
        *(_DWORD *)(v4 + 340) = v7;
        *(_DWORD *)(v4 + 344) = v7;
        *(_WORD *)(v4 + 72) = *(_DWORD *)(a1[14] + 4LL);
        tftp_set_timeouts(v4);
        if ( (*((_BYTE *)a1 + 895) & 2) == 0 )
        {
          if ( bind(*(_DWORD *)(v4 + 24), (const struct sockaddr *)(v4 + 72), *(_DWORD *)(a1[14] + 16LL)) )
          {
            v10 = *a1;
            v11 = __errno_location();
            v12 = (const char *)Curl_strerror((unsigned int)*v11, &v13, 128LL);
            Curl_failf(v10, "bind() failed; %s", v12);
            return 7LL;
          }
          *((_BYTE *)a1 + 895) |= 2u;
        }
        Curl_pgrsStartNow(*a1);
        *a2 = 1;
        result = 0LL;
      }
    }
  }
  return result;
}
