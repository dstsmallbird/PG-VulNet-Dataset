int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // r0
  int v5; // r4
  int v6; // r6
  int v7; // r10
  int v8; // r2
  int v9; // r3
  int v10; // r0
  int result; // r0
  int v12; // r0
  int v13; // r0
  int *v14; // r0
  int v15; // r4
  const char *v16; // r0
  char v17[128]; // [sp+4h] [bp-A4h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v5 = v4;
  v6 = *(_DWORD *)(*a1 + 1576);
  if ( v6 )
  {
    if ( (unsigned int)(v6 - 8) > 0xFFB0 )
      return 71;
    v7 = *(_DWORD *)(*a1 + 1576);
    if ( v6 < 512 )
      v7 = 512;
    if ( *(_DWORD *)(v4 + 328) )
      goto LABEL_4;
  }
  else
  {
    v6 = 512;
    v7 = 512;
    if ( *(_DWORD *)(v4 + 328) )
      goto LABEL_4;
  }
  v12 = Curl_ccalloc(1, v7 + 4);
  *(_DWORD *)(v5 + 328) = v12;
  if ( !v12 )
    return 27;
LABEL_4:
  if ( !*(_DWORD *)(v5 + 332) )
  {
    v13 = Curl_ccalloc(1, v7 + 4);
    *(_DWORD *)(v5 + 332) = v13;
    if ( !v13 )
      return 27;
  }
  Curl_conncontrol(a1, 1);
  v8 = a1[20];
  v9 = a1[105];
  *(_DWORD *)(v5 + 16) = a1;
  v10 = *(_DWORD *)(v8 + 4);
  *(_DWORD *)(v5 + 20) = v9;
  *(_DWORD *)(v5 + 324) = v6;
  *(_WORD *)(v5 + 52) = v10;
  *(_DWORD *)(v5 + 320) = 512;
  *(_DWORD *)v5 = 0;
  *(_DWORD *)(v5 + 8) = -100;
  tftp_set_timeouts(v5);
  if ( (*((_BYTE *)a1 + 591) & 2) != 0 )
  {
LABEL_8:
    Curl_pgrsStartNow(*a1);
    result = 0;
    *a2 = 1;
    return result;
  }
  if ( !bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)) )
  {
    *((_BYTE *)a1 + 591) |= 2u;
    goto LABEL_8;
  }
  v14 = _errno_location();
  v15 = *a1;
  v16 = (const char *)Curl_strerror(*v14, v17, 128);
  Curl_failf(v15, "bind() failed; %s", v16);
  return 7;
}
