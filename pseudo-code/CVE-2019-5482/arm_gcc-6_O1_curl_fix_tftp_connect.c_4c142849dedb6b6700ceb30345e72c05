int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // r0
  int v6; // r4
  int v7; // r3
  int v8; // r8
  int v9; // r9
  int v10; // r0
  int v11; // r0
  int v12; // r4
  int *v13; // r0
  const char *v14; // r0
  char v15[128]; // [sp+4h] [bp-A4h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v6 = v4;
  v7 = *(_DWORD *)(*a1 + 1576);
  if ( v7 )
  {
    if ( (unsigned int)(v7 - 8) > 0xFFB0 )
      return 71;
    v8 = *(_DWORD *)(*a1 + 1576);
  }
  else
  {
    v8 = 512;
  }
  if ( v8 < 512 )
    v9 = 512;
  else
    v9 = v8;
  if ( !*(_DWORD *)(v4 + 328) )
  {
    v10 = Curl_ccalloc(1u, v9 + 4);
    *(_DWORD *)(v6 + 328) = v10;
    if ( !v10 )
      return 27;
  }
  if ( !*(_DWORD *)(v6 + 332) )
  {
    v11 = Curl_ccalloc(1u, v9 + 4);
    *(_DWORD *)(v6 + 332) = v11;
    if ( !v11 )
      return 27;
  }
  Curl_conncontrol(a1, 1);
  *(_DWORD *)(v6 + 16) = a1;
  *(_DWORD *)(v6 + 20) = a1[105];
  *(_DWORD *)v6 = 0;
  *(_DWORD *)(v6 + 8) = -100;
  *(_DWORD *)(v6 + 320) = 512;
  *(_DWORD *)(v6 + 324) = v8;
  *(_WORD *)(v6 + 52) = *(_DWORD *)(a1[20] + 4);
  tftp_set_timeouts(v6);
  if ( (*((_BYTE *)a1 + 591) & 2) == 0 )
  {
    if ( bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)) )
    {
      v12 = *a1;
      v13 = _errno_location();
      v14 = (const char *)Curl_strerror(*v13, v15, 128);
      Curl_failf(v12, "bind() failed; %s", v14);
      return 7;
    }
    *((_BYTE *)a1 + 591) |= 2u;
  }
  Curl_pgrsStartNow(*a1);
  *a2 = 1;
  return 0;
}
