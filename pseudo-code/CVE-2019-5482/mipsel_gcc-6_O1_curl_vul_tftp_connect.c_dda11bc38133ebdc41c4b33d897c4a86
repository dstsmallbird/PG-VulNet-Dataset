int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // $v0
  int v5; // $s0
  int v6; // $v0
  int v7; // $s2
  int v9; // $v0
  int v10; // $v0
  int v11; // $s0
  int *v12; // $v0
  const char *v13; // $v0
  char v14[128]; // [sp+1Ch] [-88h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v5 = v4;
  v6 = *(_DWORD *)(*a1 + 1576);
  if ( v6 )
  {
    v7 = *(_DWORD *)(*a1 + 1576);
    if ( (unsigned int)(v6 - 8) >= 0xFFB1 )
      return 71;
  }
  else
  {
    v7 = 512;
  }
  if ( !*(_DWORD *)(v5 + 328) )
  {
    v9 = Curl_ccalloc(1, v7 + 4);
    *(_DWORD *)(v5 + 328) = v9;
    if ( !v9 )
      return 27;
  }
  if ( !*(_DWORD *)(v5 + 332) )
  {
    v10 = Curl_ccalloc(1, v7 + 4);
    *(_DWORD *)(v5 + 332) = v10;
    if ( !v10 )
      return 27;
  }
  Curl_conncontrol(a1, 1);
  *(_DWORD *)(v5 + 16) = a1;
  *(_DWORD *)(v5 + 20) = a1[105];
  *(_DWORD *)v5 = 0;
  *(_DWORD *)(v5 + 8) = -100;
  *(_DWORD *)(v5 + 320) = v7;
  *(_DWORD *)(v5 + 324) = v7;
  *(_WORD *)(v5 + 52) = *(_DWORD *)(a1[20] + 4);
  tftp_set_timeouts(v5);
  if ( ((a1[147] >> 25) & 1) != 0 )
  {
LABEL_11:
    Curl_pgrsStartNow(*a1);
    *a2 = 1;
    return 0;
  }
  if ( !bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)) )
  {
    a1[147] = a1[147] & 0xFDFFFFFF | 0x2000000;
    goto LABEL_11;
  }
  v11 = *a1;
  v12 = _errno_location();
  v13 = (const char *)Curl_strerror(*v12, v14, 128);
  Curl_failf(v11, "bind() failed; %s", v13);
  return 7;
}
