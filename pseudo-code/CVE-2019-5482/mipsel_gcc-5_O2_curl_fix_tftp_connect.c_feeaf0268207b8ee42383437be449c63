int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // $v0
  int v5; // $s0
  int v6; // $s3
  int result; // $v0
  int v8; // $s6
  int v9; // $v1
  int v10; // $v0
  int v11; // $v0
  int v12; // $v0
  int *v13; // $v0
  int v14; // $s0
  const char *v15; // $v0
  int v16; // $v0
  char v17[128]; // [sp+1Ch] [-84h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v5 = v4;
  v6 = *(_DWORD *)(*a1 + 1576);
  if ( !v6 )
  {
    v8 = 512;
LABEL_6:
    v6 = v8;
    goto LABEL_7;
  }
  result = 71;
  if ( (unsigned int)(v6 - 8) >= 0xFFB1 )
    return result;
  v8 = 512;
  if ( v6 >= 512 )
  {
    v8 = *(_DWORD *)(*a1 + 1576);
    goto LABEL_6;
  }
LABEL_7:
  if ( !*(_DWORD *)(v5 + 328) )
  {
    v12 = Curl_ccalloc(1, v8 + 4);
    *(_DWORD *)(v5 + 328) = v12;
    if ( !v12 )
      return 27;
  }
  if ( *(_DWORD *)(v5 + 332) || (v16 = Curl_ccalloc(1, v8 + 4), (*(_DWORD *)(v5 + 332) = v16) != 0) )
  {
    Curl_conncontrol(a1, 1);
    v9 = a1[105];
    v10 = a1[20];
    *(_DWORD *)(v5 + 324) = v6;
    *(_DWORD *)(v5 + 20) = v9;
    *(_DWORD *)(v5 + 16) = a1;
    *(_DWORD *)v5 = 0;
    *(_DWORD *)(v5 + 8) = -100;
    v11 = *(_DWORD *)(v10 + 4);
    *(_DWORD *)(v5 + 320) = 512;
    *(_WORD *)(v5 + 52) = v11;
    tftp_set_timeouts(v5);
    if ( (a1[147] & 0x2000000) == 0 )
    {
      if ( bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)) )
      {
        v14 = *a1;
        v13 = _errno_location();
        v15 = (const char *)Curl_strerror(*v13, v17, 128);
        Curl_failf(v14, "bind() failed; %s", v15);
        return 7;
      }
      a1[147] |= 0x2000000u;
    }
    Curl_pgrsStartNow(*a1);
    result = 0;
    *a2 = 1;
    return result;
  }
  return 27;
}
