int __cdecl tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v2; // esi
  int result; // eax
  int v4; // edx
  int v5; // edx
  int v6; // edx
  int *v7; // eax
  char v8; // al
  int v9; // [esp+14h] [ebp-B0h]
  char buf[128]; // [esp+24h] [ebp-A0h] BYREF
  unsigned int v11; // [esp+A4h] [ebp-20h]

  v11 = __readgsdword(0x14u);
  v2 = Curl_ccalloc(1, 336);
  a1[185] = v2;
  result = 27;
  if ( v2 )
  {
    v4 = *(_DWORD *)(*a1 + 1568);
    if ( v4 )
    {
      result = 71;
      if ( (unsigned int)(v4 - 8) > 0xFFB0 )
        return result;
      v9 = *(_DWORD *)(*a1 + 1568);
    }
    else
    {
      v9 = 512;
    }
    if ( *(_DWORD *)(v2 + 328) || (v5 = Curl_ccalloc(1, v9 + 4), *(_DWORD *)(v2 + 328) = v5, result = 27, v5) )
    {
      if ( *(_DWORD *)(v2 + 332) || (v6 = Curl_ccalloc(1, v9 + 4), *(_DWORD *)(v2 + 332) = v6, result = 27, v6) )
      {
        Curl_conncontrol(a1, 1);
        *(_DWORD *)(v2 + 16) = a1;
        *(_DWORD *)(v2 + 20) = a1[103];
        *(_DWORD *)v2 = 0;
        *(_DWORD *)(v2 + 8) = -100;
        *(_DWORD *)(v2 + 320) = v9;
        *(_DWORD *)(v2 + 324) = v9;
        *(_WORD *)(v2 + 52) = *(_DWORD *)(a1[18] + 4);
        tftp_set_timeouts();
        if ( (*((_BYTE *)a1 + 583) & 2) == 0 )
        {
          if ( bind(*(_DWORD *)(v2 + 20), (const struct sockaddr *)(v2 + 52), *(_DWORD *)(a1[18] + 16)) )
          {
            v7 = __errno_location();
            v8 = Curl_strerror(*v7, buf, 128);
            Curl_failf(*a1, "bind() failed; %s", v8);
            return 7;
          }
          *((_BYTE *)a1 + 583) |= 2u;
        }
        Curl_pgrsStartNow(*a1);
        *a2 = 1;
        result = 0;
      }
    }
  }
  return result;
}
