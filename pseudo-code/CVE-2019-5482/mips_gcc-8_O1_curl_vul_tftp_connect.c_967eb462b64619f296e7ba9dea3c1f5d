int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // $v0
  int v5; // $s0
  int v6; // $s2
  int result; // $v0
  int v8; // $v0
  int v9; // $v0
  int v10; // $s0
  int *v11; // $v0
  const char *v12; // $v0
  char v13[128]; // [sp+1Ch] [-88h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v5 = v4;
  v6 = *(_DWORD *)(*a1 + 1576);
  if ( !v6 )
  {
    v6 = 512;
    goto LABEL_6;
  }
  result = 71;
  if ( (unsigned int)(v6 - 8) < 0xFFB1 )
  {
LABEL_6:
    if ( !*(_DWORD *)(v5 + 328) )
    {
      v8 = Curl_ccalloc(1, v6 + 4);
      *(_DWORD *)(v5 + 328) = v8;
      if ( !v8 )
        return 27;
    }
    if ( !*(_DWORD *)(v5 + 332) )
    {
      v9 = Curl_ccalloc(1, v6 + 4);
      *(_DWORD *)(v5 + 332) = v9;
      if ( !v9 )
        return 27;
    }
    Curl_conncontrol(a1, 1);
    *(_DWORD *)(v5 + 16) = a1;
    *(_DWORD *)(v5 + 20) = a1[105];
    *(_DWORD *)v5 = 0;
    *(_DWORD *)(v5 + 8) = -100;
    *(_DWORD *)(v5 + 320) = v6;
    *(_DWORD *)(v5 + 324) = v6;
    *(_WORD *)(v5 + 52) = *(_DWORD *)(a1[20] + 4);
    tftp_set_timeouts(v5);
    if ( (a1[147] & 0x40) == 0 )
    {
      if ( bind(*(_DWORD *)(v5 + 20), (const struct sockaddr *)(v5 + 52), *(_DWORD *)(a1[20] + 16)) )
      {
        v10 = *a1;
        v11 = _errno_location();
        v12 = (const char *)Curl_strerror(*v11, v13, 128);
        Curl_failf(v10, "bind() failed; %s", v12);
        return 7;
      }
      a1[147] = a1[147] & 0xFFFFFFBF | 0x40;
    }
    Curl_pgrsStartNow(*a1);
    *a2 = 1;
    result = 0;
  }
  return result;
}
