int __fastcall tftp_connect(_DWORD *a1, _BYTE *a2)
{
  int v4; // $v0
  int result; // $v0
  int v6; // $s0
  int v7; // $v1
  int v8; // $s6
  int v9; // $v0
  int v10; // $s2
  int v11; // $v0
  int v12; // $v0
  int v13; // $v0
  int *v14; // $v0
  int v15; // $s0
  const char *v16; // $v0
  char v17[128]; // [sp+1Ch] [-84h] BYREF

  v4 = Curl_ccalloc(1, 336);
  a1[188] = v4;
  if ( !v4 )
    return 27;
  v6 = v4;
  v7 = *(_DWORD *)(*a1 + 1576);
  v8 = 512;
  if ( !v7 )
  {
    v10 = 512;
    goto LABEL_9;
  }
  result = 71;
  if ( (unsigned int)(v7 - 8) < 0xFFB1 )
  {
    v9 = 512;
    if ( v7 >= 512 )
      v9 = *(_DWORD *)(*a1 + 1576);
    v8 = *(_DWORD *)(*a1 + 1576);
    v10 = v9;
LABEL_9:
    if ( !*(_DWORD *)(v6 + 328) )
    {
      v13 = Curl_ccalloc(1, v10 + 4);
      *(_DWORD *)(v6 + 328) = v13;
      if ( !v13 )
        return 27;
    }
    if ( *(_DWORD *)(v6 + 332) || (v11 = Curl_ccalloc(1, v10 + 4), (*(_DWORD *)(v6 + 332) = v11) != 0) )
    {
      Curl_conncontrol(a1, 1);
      v12 = a1[105];
      *(_DWORD *)(v6 + 16) = a1;
      *(_DWORD *)(v6 + 20) = v12;
      *(_DWORD *)v6 = 0;
      *(_DWORD *)(v6 + 8) = -100;
      *(_DWORD *)(v6 + 324) = v8;
      *(_DWORD *)(v6 + 320) = 512;
      *(_WORD *)(v6 + 52) = *(_DWORD *)(a1[20] + 4);
      tftp_set_timeouts(v6);
      if ( ((a1[147] >> 25) & 1) == 0 )
      {
        if ( bind(*(_DWORD *)(v6 + 20), (const struct sockaddr *)(v6 + 52), *(_DWORD *)(a1[20] + 16)) )
        {
          v15 = *a1;
          v14 = _errno_location();
          v16 = (const char *)Curl_strerror(*v14, v17, 128);
          Curl_failf(v15, "bind() failed; %s", v16);
          return 7;
        }
        a1[147] = a1[147] & 0xFDFFFFFF | 0x2000000;
      }
      Curl_pgrsStartNow(*a1);
      *a2 = 1;
      return 0;
    }
    return 27;
  }
  return result;
}
