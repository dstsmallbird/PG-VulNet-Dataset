__int64 __fastcall tftp_connect(_QWORD *a1, _BYTE *a2)
{
  __int64 v4; // x0
  __int64 v5; // x19
  __int64 v6; // x1
  int v7; // w22
  int v8; // w1
  __int64 result; // x0
  __int64 v10; // x0
  int *v11; // x0
  __int64 v12; // x19
  const char *v13; // x0
  __int64 v14; // x0
  __int64 v15; // [xsp+48h] [xbp+48h] BYREF

  v4 = Curl_ccalloc(1LL, 368LL);
  a1[148] = v4;
  if ( !v4 )
    return 27LL;
  v5 = v4;
  v6 = *(_QWORD *)(*a1 + 1976LL);
  if ( v6 )
  {
    result = 71LL;
    v7 = *(_QWORD *)(*a1 + 1976LL);
    if ( (unsigned int)(v6 - 8) > 0xFFB0 )
      return result;
  }
  else
  {
    v7 = 512;
  }
  if ( !*(_QWORD *)(v5 + 352) )
  {
    v10 = Curl_ccalloc(1LL, v7 + 4);
    *(_QWORD *)(v5 + 352) = v10;
    if ( !v10 )
      return 27LL;
  }
  if ( *(_QWORD *)(v5 + 360) || (v14 = Curl_ccalloc(1LL, v7 + 4), (*(_QWORD *)(v5 + 360) = v14) != 0LL) )
  {
    Curl_conncontrol(a1, 1LL);
    v8 = *((_DWORD *)a1 + 156);
    *(_WORD *)(v5 + 72) = *(_DWORD *)(a1[14] + 4LL);
    *(_DWORD *)(v5 + 24) = v8;
    *(_DWORD *)(v5 + 340) = v7;
    *(_DWORD *)(v5 + 344) = v7;
    *(_DWORD *)v5 = 0;
    *(_QWORD *)(v5 + 16) = a1;
    *(_DWORD *)(v5 + 8) = -100;
    tftp_set_timeouts(v5);
    if ( (*((_BYTE *)a1 + 895) & 2) == 0 )
    {
      if ( bind(*(_DWORD *)(v5 + 24), (const struct sockaddr *)(v5 + 72), *(_DWORD *)(a1[14] + 16LL)) )
      {
        v11 = __errno_location();
        v12 = *a1;
        v13 = (const char *)Curl_strerror((unsigned int)*v11, &v15, 128LL);
        Curl_failf(v12, "bind() failed; %s", v13);
        return 7LL;
      }
      *((_BYTE *)a1 + 895) |= 2u;
    }
    Curl_pgrsStartNow(*a1);
    result = 0LL;
    *a2 = 1;
    return result;
  }
  return 27LL;
}
