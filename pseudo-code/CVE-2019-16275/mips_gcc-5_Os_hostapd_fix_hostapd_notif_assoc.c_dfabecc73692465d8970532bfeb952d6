int __fastcall hostapd_notif_assoc(hostapd_data *hapd, const u8 *addr, const u8 *req_ies, size_t req_ies_len, int reassoc)
{
  int v5; // $s6
  int v6; // $a0
  const char *v7; // $a1
  const u8 *v12; // $s3
  size_t v13; // $s6
  sta_info *v14; // $v0
  sta_info *v15; // $s0
  int v16; // $a2
  wpa_state_machine *v17; // $a1
  int v18; // $v0
  int v19; // $s7
  u32 v20; // $v0
  int v21; // $s3
  u8 *v22; // $v0
  int v23; // $v0
  u32 v24; // $v1
  unsigned int v25; // $v1
  int v26; // $s1
  wpa_event v27; // $a1
  int v28; // $a3
  int v29; // $a2
  ieee802_11_elems elems; // [sp+30h] [-58Ch] BYREF
  u8 buf[1064]; // [sp+18Ch] [-430h] BYREF

  if ( !addr )
  {
    v6 = 2;
    v7 = "hostapd_notif_assoc: Skip event with no address";
LABEL_31:
    wpa_printf(v6, v7, req_ies, req_ies_len);
    return -1;
  }
  v5 = *addr;
  if ( (v5 & 1) != 0
    || !((unsigned __int8)(v5 | addr[1] | addr[2] | addr[3] | addr[4]) | addr[5])
    || !memcmp(addr, hapd->own_addr, 6u) )
  {
    wpa_printf(
      2,
      "%s: Invalid SA=%02x:%02x:%02x:%02x:%02x:%02x in received indication - ignore this indication silently",
      "hostapd_notif_assoc",
      v5,
      addr[1],
      addr[2],
      addr[3],
      addr[4],
      addr[5]);
    return 0;
  }
  random_add_randomness(addr, 6u);
  hostapd_logger(hapd, addr, 1u, 2, "associated");
  ieee802_11_parse_elems(req_ies, req_ies_len, &elems, 0);
  if ( elems.wps_ie )
  {
    v12 = elems.wps_ie - 2;
    v13 = elems.wps_ie_len + 2;
    wpa_printf(2, "STA included WPS IE in (Re)AssocReq");
  }
  else if ( elems.rsn_ie )
  {
    v12 = elems.rsn_ie - 2;
    v13 = elems.rsn_ie_len + 2;
    wpa_printf(2, "STA included RSN IE in (Re)AssocReq");
  }
  else if ( elems.wpa_ie )
  {
    v12 = elems.wpa_ie - 2;
    v13 = elems.wpa_ie_len + 2;
    wpa_printf(2, "STA included WPA IE in (Re)AssocReq");
  }
  else
  {
    v13 = 0;
    wpa_printf(2, "STA did not include WPS/RSN/WPA IE in (Re)AssocReq");
    v12 = 0;
  }
  v14 = ap_get_sta(hapd, addr);
  v15 = v14;
  if ( v14 )
  {
    ap_sta_no_session_timeout(hapd, v14);
    accounting_sta_stop(hapd, v15);
    v15->timeout_next = STA_NULLFUNC;
  }
  else
  {
    v15 = ap_sta_add(hapd, addr);
    if ( !v15 )
    {
      hostapd_drv_sta_disassoc(hapd, addr, 5);
      return -1;
    }
  }
  v15->flags &= 0xFFFECFFF;
  if ( !hapd->iface->drv_max_acl_mac_addrs && hostapd_check_acl(hapd, addr, 0) != 1 )
  {
    wpa_printf(
      3,
      "STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect",
      *addr,
      addr[1],
      addr[2],
      addr[3],
      addr[4],
      addr[5]);
    v16 = 1;
fail:
    hostapd_drv_sta_disassoc(hapd, v15->addr, v16);
    ((void (__fastcall *)(hostapd_data *, sta_info *, int, int))ap_free_sta)(hapd, v15, v29, v28);
    return -1;
  }
  ap_copy_sta_supp_op_classes(v15, elems.supp_op_classes, elems.supp_op_classes_len);
  if ( !hapd->conf->wpa )
  {
LABEL_56:
    v26 = v15->flags & 2;
    v15->flags = v15->flags & 0xFFF7FFFF | 3;
    hostapd_set_sta_flags(hapd, v15);
    if ( !reassoc || (v27 = WPA_ASSOC_FT, v15->auth_alg != 2) )
      v27 = WPA_ASSOC;
    wpa_auth_sm_event(v15->wpa_sm, v27);
    hostapd_new_assoc_sta(hapd, v15, v26 != 0);
    ieee802_1x_notify_port_enabled(v15->eapol_sm, 1);
    return 0;
  }
  if ( !v12 || !v13 )
  {
    wpa_printf(2, "No WPA/RSN IE from STA");
    v16 = 13;
    goto fail;
  }
  if ( !v15->wpa_sm )
    v15->wpa_sm = wpa_auth_sta_init(hapd->wpa_auth, v15->addr, 0);
  v17 = v15->wpa_sm;
  if ( !v17 )
  {
    v6 = 5;
    v7 = "Failed to initialize WPA state machine";
    goto LABEL_31;
  }
  v18 = wpa_validate_wpa_ie(
          hapd->wpa_auth,
          v17,
          hapd->iface->freq,
          v12,
          v13,
          elems.mdie,
          elems.mdie_len,
          elems.owe_dh,
          elems.owe_dh_len);
  v19 = v18;
  if ( v18 )
  {
    wpa_printf(2, "WPA/RSN information element rejected? (res %u)", v18);
    wpa_hexdump(2, "IE", v12, v13);
    v16 = 18;
    if ( v19 != 2 )
    {
      v16 = 19;
      if ( v19 != 3 )
      {
        v16 = 20;
        if ( v19 != 4 )
        {
          v16 = 13;
          if ( v19 == 8 )
            v16 = 24;
        }
      }
    }
    goto fail;
  }
  if ( (v15->flags & 0x402) == 1026 )
  {
    if ( v15->sa_query_timed_out )
    {
      v20 = v15->flags;
    }
    else
    {
      if ( v15->sa_query_count > 0 )
        ap_check_sa_query_timeout(hapd, v15);
      v20 = v15->flags;
    }
  }
  else
  {
    v20 = v15->flags;
  }
  if ( (v20 & 0x402) != 1026 || (v21 = v15->sa_query_timed_out) != 0 || v15->auth_alg == 2 )
  {
    v23 = wpa_auth_uses_mfp(v15->wpa_sm);
    v24 = v15->flags;
    if ( v23 )
      v25 = v24 | 0x400;
    else
      v25 = v24 & 0xFFFFFBFF;
    v15->flags = v25;
    goto LABEL_56;
  }
  if ( !v15->sa_query_count )
    ap_sta_start_sa_query(hapd, v15);
  v22 = hostapd_eid_assoc_comeback_time(hapd, v15, buf);
  hostapd_sta_assoc(hapd, addr, reassoc, 0x1Eu, buf, v22 - buf);
  return v21;
}
