int __fastcall hostapd_notif_assoc(hostapd_data *hapd, const u8 *addr, const u8 *req_ies, size_t req_ies_len, int reassoc)
{
  int v8; // r0
  int v9; // r6
  const unsigned __int8 *v10; // r7
  int v11; // r8
  int v12; // r9
  int v13; // r3
  int v14; // r0
  const u8 *v15; // r9
  size_t v16; // r8
  sta_info *v17; // r0
  sta_info *v18; // r7
  int v19; // r2
  wpa_state_machine *v20; // r1
  int v21; // r6
  int v22; // r6
  u8 *v23; // r0
  int v24; // r0
  u32 v25; // r3
  unsigned int v26; // r3
  int v27; // r4
  wpa_event v28; // r1
  int v29; // r2
  unsigned __int8 *fmt; // [sp+0h] [bp-5D8h]
  unsigned __int8 *fmta; // [sp+0h] [bp-5D8h]
  unsigned __int8 *fmtb; // [sp+0h] [bp-5D8h]
  int v35; // [sp+24h] [bp-5B4h]
  ieee802_11_elems elems; // [sp+28h] [bp-5B0h] BYREF
  u8 buf[1064]; // [sp+184h] [bp-454h] BYREF

  if ( !addr )
  {
    v8 = 2;
LABEL_30:
    wpa_printf(v8, fmt);
    return -1;
  }
  v9 = *addr;
  v10 = (const unsigned __int8 *)addr[1];
  v11 = addr[2];
  v12 = addr[3];
  v13 = addr[4];
  if ( (v9 & 1) != 0
    || !(v9 | (unsigned int)v10 | v11 | v12 | v13 | addr[5])
    || (v35 = addr[4], v14 = memcmp(addr, hapd->own_addr, 6u), v13 = v35, !v14) )
  {
    wpa_printf(2, v10, v11, v12, v13, addr[5]);
    return 0;
  }
  random_add_randomness(addr, 6u);
  hostapd_logger(hapd, addr, 1u, 2, "associated");
  ieee802_11_parse_elems(req_ies, req_ies_len, &elems, 0);
  if ( elems.wps_ie )
  {
    v15 = elems.wps_ie - 2;
    v16 = elems.wps_ie_len + 2;
LABEL_11:
    wpa_printf(2, fmta);
    goto LABEL_15;
  }
  if ( elems.rsn_ie )
  {
    v15 = elems.rsn_ie - 2;
    v16 = elems.rsn_ie_len + 2;
    goto LABEL_11;
  }
  if ( elems.wpa_ie )
  {
    v15 = elems.wpa_ie - 2;
    v16 = elems.wpa_ie_len + 2;
    goto LABEL_11;
  }
  v16 = 0;
  v15 = 0;
  wpa_printf(2, fmta);
LABEL_15:
  v17 = ap_get_sta(hapd, addr);
  v18 = v17;
  if ( v17 )
  {
    ap_sta_no_session_timeout(hapd, v17);
    accounting_sta_stop(hapd, v18);
    v18->timeout_next = STA_NULLFUNC;
  }
  else
  {
    v18 = ap_sta_add(hapd, addr);
    if ( !v18 )
    {
      hostapd_drv_sta_disassoc(hapd, addr, 5);
      return -1;
    }
  }
  v18->flags &= 0xFFFECFFF;
  if ( !hapd->iface->drv_max_acl_mac_addrs && hostapd_check_acl(hapd, addr, 0) != 1 )
  {
    wpa_printf(3, (const unsigned __int8 *)addr[2], addr[3], addr[4], addr[5]);
    v19 = 1;
fail:
    hostapd_drv_sta_disassoc(hapd, v18->addr, v19);
    ap_free_sta(hapd, v18);
    return -1;
  }
  ap_copy_sta_supp_op_classes(v18, elems.supp_op_classes, elems.supp_op_classes_len);
  if ( !hapd->conf->wpa )
  {
LABEL_52:
    v27 = v18->flags & 2;
    v18->flags = v18->flags & 0xFFF7FFFF | 3;
    hostapd_set_sta_flags(hapd, v18);
    if ( reassoc && v18->auth_alg == 2 )
      v28 = WPA_ASSOC_FT;
    else
      v28 = WPA_ASSOC;
    wpa_auth_sm_event(v18->wpa_sm, v28);
    v29 = v27;
    if ( v27 )
      v29 = 1;
    hostapd_new_assoc_sta(hapd, v18, v29);
    ieee802_1x_notify_port_enabled(v18->eapol_sm, 1);
    return 0;
  }
  if ( !v15 || !v16 )
  {
    wpa_printf(2, fmt);
    v19 = 13;
    goto fail;
  }
  if ( !v18->wpa_sm )
    v18->wpa_sm = wpa_auth_sta_init(hapd->wpa_auth, v18->addr, 0);
  v20 = v18->wpa_sm;
  if ( !v20 )
  {
    v8 = 5;
    goto LABEL_30;
  }
  v21 = wpa_validate_wpa_ie(
          hapd->wpa_auth,
          v20,
          hapd->iface->freq,
          v15,
          v16,
          elems.mdie,
          elems.mdie_len,
          elems.owe_dh,
          elems.owe_dh_len);
  if ( v21 )
  {
    wpa_printf(2, fmtb);
    wpa_hexdump(2, (const unsigned __int8 *)"IE", v15, v16);
    switch ( v21 )
    {
      case 2:
        v19 = 18;
        break;
      case 3:
        v19 = 19;
        break;
      case 4:
        v19 = 20;
        break;
      case 8:
        v19 = 24;
        break;
      default:
        v19 = 13;
        break;
    }
    goto fail;
  }
  if ( (~v18->flags & 0x402) == 0 && !v18->sa_query_timed_out && v18->sa_query_count > 0 )
    ap_check_sa_query_timeout(hapd, v18);
  if ( (~v18->flags & 0x402) != 0 || (v22 = v18->sa_query_timed_out) != 0 || v18->auth_alg == 2 )
  {
    v24 = wpa_auth_uses_mfp(v18->wpa_sm);
    v25 = v18->flags;
    if ( v24 )
      v26 = v25 | 0x400;
    else
      v26 = v25 & 0xFFFFFBFF;
    v18->flags = v26;
    goto LABEL_52;
  }
  if ( !v18->sa_query_count )
    ap_sta_start_sa_query(hapd, v18);
  v23 = hostapd_eid_assoc_comeback_time(hapd, v18, buf);
  hostapd_sta_assoc(hapd, addr, reassoc, 0x1Eu, buf, v23 - buf);
  return v22;
}
