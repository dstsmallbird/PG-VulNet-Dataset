int __fastcall hostapd_notif_assoc(hostapd_data *hapd, const u8 *addr, const u8 *req_ies, size_t req_ies_len, int reassoc)
{
  int v9; // r7
  int v10; // r8
  const u8 *v12; // r8
  size_t v13; // r9
  sta_info *v14; // r0
  sta_info *v15; // r7
  bool v16; // zf
  wpa_state_machine *v17; // r1
  int v18; // r10
  int v19; // r4
  int v20; // r2
  int v21; // r2
  u8 *v22; // r0
  unsigned __int8 *fmt; // [sp+0h] [bp-5C0h]
  unsigned __int8 *fmta; // [sp+0h] [bp-5C0h]
  unsigned __int8 *fmtb; // [sp+0h] [bp-5C0h]
  unsigned __int8 *fmtc; // [sp+0h] [bp-5C0h]
  ieee802_11_elems elems; // [sp+18h] [bp-5A8h] BYREF
  u8 buf[1064]; // [sp+174h] [bp-44Ch] BYREF

  if ( !addr )
  {
    wpa_printf(2, fmt);
    return -1;
  }
  v9 = *addr;
  if ( (v9 & 1) != 0 || !(addr[1] | v9 | addr[2] | addr[3] | addr[4] | addr[5]) || !memcmp(addr, hapd->own_addr, 6u) )
  {
    wpa_printf(2, (const unsigned __int8 *)addr[1], addr[2], addr[3], addr[4], addr[5]);
    return 0;
  }
  random_add_randomness(addr, 6u);
  hostapd_logger(hapd, addr, 1u, 2, "associated");
  ieee802_11_parse_elems(req_ies, req_ies_len, &elems, 0);
  if ( elems.wps_ie )
  {
    v12 = elems.wps_ie - 2;
    v13 = elems.wps_ie_len + 2;
    wpa_printf(2, fmta);
  }
  else if ( elems.rsn_ie )
  {
    v12 = elems.rsn_ie - 2;
    v13 = elems.rsn_ie_len + 2;
    wpa_printf(2, fmta);
  }
  else
  {
    v12 = elems.wpa_ie;
    if ( elems.wpa_ie )
    {
      v12 = elems.wpa_ie - 2;
      v13 = elems.wpa_ie_len + 2;
      wpa_printf(2, fmta);
    }
    else
    {
      wpa_printf(2, fmta);
      v13 = 0;
    }
  }
  v14 = ap_get_sta(hapd, addr);
  v15 = v14;
  if ( v14 )
  {
    ap_sta_no_session_timeout(hapd, v14);
    accounting_sta_stop(hapd, v15);
    v15->timeout_next = STA_NULLFUNC;
  }
  else
  {
    v15 = ap_sta_add(hapd, addr);
    if ( !v15 )
    {
      hostapd_drv_sta_disassoc(hapd, addr, 5);
      return -1;
    }
  }
  v15->flags &= 0xFFFECFFF;
  if ( !hapd->iface->drv_max_acl_mac_addrs && hostapd_check_acl(hapd, addr, 0) != 1 )
  {
    wpa_printf(3, (const unsigned __int8 *)addr[2], addr[3], addr[4], addr[5]);
    v21 = 1;
fail:
    hostapd_drv_sta_disassoc(hapd, v15->addr, v21);
    ap_free_sta(hapd, v15);
    return -1;
  }
  ap_copy_sta_supp_op_classes(v15, elems.supp_op_classes, elems.supp_op_classes_len);
  if ( !hapd->conf->wpa )
    goto LABEL_23;
  v16 = v13 == 0;
  if ( v13 )
    v16 = v12 == 0;
  if ( v16 )
  {
    wpa_printf(2, fmtb);
    v21 = 13;
    goto fail;
  }
  v17 = v15->wpa_sm;
  if ( !v17 )
  {
    v17 = wpa_auth_sta_init(hapd->wpa_auth, v15->addr, 0);
    v15->wpa_sm = v17;
    if ( !v17 )
    {
      wpa_printf(5, fmtb);
      return -1;
    }
  }
  v18 = wpa_validate_wpa_ie(
          hapd->wpa_auth,
          v17,
          hapd->iface->freq,
          v12,
          v13,
          elems.mdie,
          elems.mdie_len,
          elems.owe_dh,
          elems.owe_dh_len);
  if ( v18 )
  {
    wpa_printf(2, fmtc);
    wpa_hexdump(2, (const unsigned __int8 *)"IE", v12, v13);
    switch ( v18 )
    {
      case 2:
        v21 = 18;
        break;
      case 3:
        v21 = 19;
        break;
      case 4:
        v21 = 20;
        break;
      case 8:
        v21 = 24;
        break;
      default:
        v21 = 13;
        break;
    }
    goto fail;
  }
  if ( (~v15->flags & 0x402) == 0 )
  {
    v10 = v15->sa_query_timed_out;
    if ( !v10 )
    {
      if ( v15->sa_query_count <= 0
        || (ap_check_sa_query_timeout(hapd, v15), (~v15->flags & 0x402) == 0) && !v15->sa_query_timed_out )
      {
        if ( v15->auth_alg != 2 )
        {
          if ( !v15->sa_query_count )
            ap_sta_start_sa_query(hapd, v15);
          v22 = hostapd_eid_assoc_comeback_time(hapd, v15, buf);
          hostapd_sta_assoc(hapd, addr, reassoc, 0x1Eu, buf, v22 - buf);
          return v10;
        }
      }
    }
  }
  if ( wpa_auth_uses_mfp(v15->wpa_sm) )
    v15->flags |= 0x400u;
  else
    v15->flags &= 0xFFFFFBFF;
LABEL_23:
  v19 = v15->flags & 2;
  v15->flags = v15->flags & 0xFFF7FFFF | 3;
  hostapd_set_sta_flags(hapd, v15);
  if ( reassoc && v15->auth_alg == 2 )
    wpa_auth_sm_event(v15->wpa_sm, WPA_ASSOC_FT);
  else
    wpa_auth_sm_event(v15->wpa_sm, WPA_ASSOC);
  v20 = v19;
  if ( v19 )
    v20 = 1;
  hostapd_new_assoc_sta(hapd, v15, v20);
  ieee802_1x_notify_port_enabled(v15->eapol_sm, 1);
  return 0;
}
