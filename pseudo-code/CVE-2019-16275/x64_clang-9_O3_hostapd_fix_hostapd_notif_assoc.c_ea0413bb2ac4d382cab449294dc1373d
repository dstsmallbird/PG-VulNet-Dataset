int __fastcall hostapd_notif_assoc(hostapd_data *hapd, const u8 *addr, const u8 *req_ies, size_t req_ies_len, int reassoc)
{
  __int64 v8; // rcx
  __int64 v9; // r8
  u8 v12; // si
  u8 v13; // di
  u8 v14; // bl
  u8 v15; // al
  const u8 *v16; // r12
  size_t v17; // rbx
  int v18; // ebx
  __int64 v19; // r11
  sta_info *v21; // rax
  sta_info *v22; // r15
  sta_info *v23; // rax
  wpa_state_machine *v24; // rsi
  __int64 v25; // rdx
  __int64 v26; // rcx
  __int64 v27; // r8
  unsigned int v28; // eax
  unsigned int v29; // ebp
  unsigned int v30; // ebp
  int v31; // edx
  unsigned int v32; // ebx
  wpa_event v33; // esi
  u32 v34; // eax
  int v35; // eax
  u32 v36; // ebx
  u8 *v37; // rax
  int v38; // [rsp+4h] [rbp-6E4h]
  ieee802_11_elems elems; // [rsp+8h] [rbp-6E0h] BYREF
  u8 eid[1112]; // [rsp+290h] [rbp-458h] BYREF

  if ( addr )
  {
    v8 = *addr;
    v9 = addr[1];
    if ( (v8 & 1) != 0 )
    {
      v12 = addr[2];
      v13 = addr[3];
      v14 = addr[4];
      v15 = addr[5];
    }
    else
    {
      v12 = addr[2];
      v13 = addr[3];
      v14 = addr[4];
      v15 = addr[5];
      if ( v15 | (unsigned __int8)(v14 | v8 | v9 | v13 | v12)
        && *(_DWORD *)hapd->own_addr ^ *(_DWORD *)addr | (unsigned __int16)(*(_WORD *)&hapd->own_addr[4] ^ *((_WORD *)addr + 2)) )
      {
        v38 = reassoc;
        random_add_randomness(addr, 6uLL);
        hostapd_logger(hapd, addr, 1u, 2, "associated");
        ieee802_11_parse_elems(req_ies, req_ies_len, &elems, 0);
        if ( elems.wps_ie )
        {
          v16 = elems.wps_ie - 2;
          v17 = elems.wps_ie_len + 2LL;
          wpa_printf(2, "STA included WPS IE in (Re)AssocReq");
        }
        else if ( elems.rsn_ie )
        {
          v16 = elems.rsn_ie - 2;
          v17 = elems.rsn_ie_len + 2LL;
          wpa_printf(2, "STA included RSN IE in (Re)AssocReq");
        }
        else if ( elems.wpa_ie )
        {
          v16 = elems.wpa_ie - 2;
          v17 = elems.wpa_ie_len + 2LL;
          wpa_printf(2, "STA included WPA IE in (Re)AssocReq");
        }
        else
        {
          v16 = 0LL;
          v17 = 0LL;
          wpa_printf(2, "STA did not include WPS/RSN/WPA IE in (Re)AssocReq");
        }
        v21 = ap_get_sta(hapd, addr);
        if ( v21 )
        {
          v22 = v21;
          ap_sta_no_session_timeout(hapd, v21);
          accounting_sta_stop(hapd, v22);
          v22->timeout_next = STA_NULLFUNC;
          v22->flags &= 0xFFFECFFF;
          if ( hapd->iface->drv_max_acl_mac_addrs )
            goto LABEL_23;
        }
        else
        {
          v23 = ap_sta_add(hapd, addr);
          v22 = v23;
          if ( !v23 )
          {
            hostapd_drv_sta_disassoc(hapd, addr, 5);
            return -1;
          }
          v23->flags &= 0xFFFECFFF;
          if ( hapd->iface->drv_max_acl_mac_addrs )
            goto LABEL_23;
        }
        if ( hostapd_check_acl(hapd, addr, 0LL) != 1 )
        {
          wpa_printf(
            3,
            "STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect",
            *addr,
            addr[1],
            addr[2],
            addr[3],
            addr[4],
            addr[5]);
          v31 = 1;
          goto fail;
        }
LABEL_23:
        ap_copy_sta_supp_op_classes(v22, elems.supp_op_classes, elems.supp_op_classes_len);
        if ( !hapd->conf->wpa )
        {
          v32 = v22->flags;
          goto LABEL_32;
        }
        if ( v16 && v17 )
        {
          v24 = v22->wpa_sm;
          if ( v24 || (v24 = wpa_auth_sta_init(hapd->wpa_auth, v22->addr, 0LL), (v22->wpa_sm = v24) != 0LL) )
          {
            v28 = wpa_validate_wpa_ie(
                    hapd->wpa_auth,
                    v24,
                    hapd->iface->freq,
                    v16,
                    v17,
                    elems.mdie,
                    elems.mdie_len,
                    elems.owe_dh,
                    elems.owe_dh_len);
            if ( v28 )
            {
              v29 = v28;
              wpa_printf(2, "WPA/RSN information element rejected? (res %u)", v28);
              wpa_hexdump(2, "IE", v16, v17);
              v30 = v29 - 2;
              v31 = 13;
              if ( v30 < 7 )
                v31 = dword_48BA80[v30];
              goto fail;
            }
            v34 = v22->flags;
            if ( (v34 & 0x402) == 1026 && !v22->sa_query_timed_out && v22->sa_query_count > 0 )
            {
              ap_check_sa_query_timeout(hapd, v22);
              v34 = v22->flags;
            }
            if ( (v34 & 0x402) == 1026 && !v22->sa_query_timed_out && v22->auth_alg != 2 )
            {
              if ( !v22->sa_query_count )
                ap_sta_start_sa_query(hapd, v22);
              v37 = hostapd_eid_assoc_comeback_time(hapd, v22, eid);
              hostapd_sta_assoc(hapd, addr, v38, 0x1Eu, eid, v37 - eid);
              return 0;
            }
            v35 = wpa_auth_uses_mfp(v22->wpa_sm);
            v36 = v22->flags;
            if ( v35 )
              v32 = v36 | 0x400;
            else
              v32 = v36 & 0xFFFFFBFF;
            v22->flags = v32;
LABEL_32:
            v22->flags = v32 & 0xFFF7FFFC | 3;
            hostapd_set_sta_flags(hapd, v22);
            if ( !v38 || (v33 = WPA_ASSOC_FT, v22->auth_alg != 2) )
              v33 = WPA_ASSOC;
            wpa_auth_sm_event(v22->wpa_sm, v33);
            hostapd_new_assoc_sta(hapd, v22, (v32 >> 1) & 1);
            ieee802_1x_notify_port_enabled(v22->eapol_sm, 1);
            return 0;
          }
          wpa_printf(5, "Failed to initialize WPA state machine", v25, v26, v27);
          return -1;
        }
        wpa_printf(2, "No WPA/RSN IE from STA");
        v31 = 13;
fail:
        hostapd_drv_sta_disassoc(hapd, v22->addr, v31);
        ap_free_sta(hapd, v22);
        return -1;
      }
    }
    v19 = v14;
    v18 = 0;
    wpa_printf(
      2,
      "%s: Invalid SA=%02x:%02x:%02x:%02x:%02x:%02x in received indication - ignore this indication silently",
      "hostapd_notif_assoc",
      v8,
      v9,
      v12,
      v13,
      v19,
      v15);
    return v18;
  }
  wpa_printf(2, "hostapd_notif_assoc: Skip event with no address", req_ies, req_ies_len, reassoc);
  return -1;
}
