int __fastcall hostapd_notif_assoc(hostapd_data *hapd, const u8 *addr, const u8 *req_ies, size_t req_ies_len, int reassoc)
{
  int v5; // $a0
  const char *v6; // $a1
  size_t v9; // $s3
  const u8 *v11; // $s3
  size_t v12; // $s4
  sta_info *v13; // $v0
  sta_info *v14; // $s0
  int v15; // $a2
  int v16; // $a2
  int v17; // $a3
  int v18; // $s3
  wpa_state_machine *v19; // $a1
  int v20; // $v0
  int v21; // $s5
  int v22; // $v0
  u32 v23; // $v1
  unsigned int v24; // $v1
  int v25; // $s2
  wpa_event v26; // $a1
  u8 *v27; // $v0
  ieee802_11_elems elems; // [sp+30h] [-58Ch] BYREF
  u8 buf[1064]; // [sp+18Ch] [-430h] BYREF

  if ( !addr )
  {
    v5 = 2;
    v6 = "hostapd_notif_assoc: Skip event with no address";
LABEL_3:
    wpa_printf(v5, v6, req_ies, req_ies_len);
    return -1;
  }
  v9 = req_ies_len;
  random_add_randomness(addr, 6u);
  hostapd_logger(hapd, addr, 1u, 2, "associated");
  ieee802_11_parse_elems(req_ies, v9, &elems, 0);
  if ( elems.wps_ie )
  {
    v11 = elems.wps_ie - 2;
    v12 = elems.wps_ie_len + 2;
    wpa_printf(2, "STA included WPS IE in (Re)AssocReq");
  }
  else if ( elems.rsn_ie )
  {
    v11 = elems.rsn_ie - 2;
    v12 = elems.rsn_ie_len + 2;
    wpa_printf(2, "STA included RSN IE in (Re)AssocReq");
  }
  else
  {
    v11 = elems.wpa_ie;
    if ( elems.wpa_ie )
    {
      v11 = elems.wpa_ie - 2;
      v12 = elems.wpa_ie_len + 2;
      wpa_printf(2, "STA included WPA IE in (Re)AssocReq");
    }
    else
    {
      v12 = 0;
      wpa_printf(2, "STA did not include WPS/RSN/WPA IE in (Re)AssocReq");
    }
  }
  v13 = ap_get_sta(hapd, addr);
  v14 = v13;
  if ( v13 )
  {
    ap_sta_no_session_timeout(hapd, v13);
    accounting_sta_stop(hapd, v14);
    v14->timeout_next = STA_NULLFUNC;
  }
  else
  {
    v14 = ap_sta_add(hapd, addr);
    if ( !v14 )
    {
      hostapd_drv_sta_disassoc(hapd, addr, 5);
      return -1;
    }
  }
  v14->flags &= 0xFFFECFFF;
  if ( !hapd->iface->drv_max_acl_mac_addrs && hostapd_check_acl(hapd, addr, 0) != 1 )
  {
    wpa_printf(
      3,
      "STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect",
      *addr,
      addr[1],
      addr[2],
      addr[3],
      addr[4],
      addr[5]);
    v15 = 1;
fail:
    hostapd_drv_sta_disassoc(hapd, v14->addr, v15);
    ((void (__fastcall *)(hostapd_data *, sta_info *, int, int))ap_free_sta)(hapd, v14, v16, v17);
    return -1;
  }
  ap_copy_sta_supp_op_classes(v14, elems.supp_op_classes, elems.supp_op_classes_len);
  if ( hapd->conf->wpa )
  {
    if ( !v11 || !v12 )
    {
      wpa_printf(2, "No WPA/RSN IE from STA");
      v15 = 13;
      goto fail;
    }
    if ( !v14->wpa_sm )
      v14->wpa_sm = wpa_auth_sta_init(hapd->wpa_auth, v14->addr, 0);
    v19 = v14->wpa_sm;
    req_ies_len = (size_t)v11;
    if ( !v19 )
    {
      v5 = 5;
      v6 = "Failed to initialize WPA state machine";
      goto LABEL_3;
    }
    v20 = wpa_validate_wpa_ie(
            hapd->wpa_auth,
            v19,
            hapd->iface->freq,
            v11,
            v12,
            elems.mdie,
            elems.mdie_len,
            elems.owe_dh,
            elems.owe_dh_len);
    v21 = v20;
    if ( v20 )
    {
      wpa_printf(2, "WPA/RSN information element rejected? (res %u)", v20);
      wpa_hexdump(2, "IE", v11, v12);
      v15 = 18;
      if ( v21 != 2 )
      {
        v15 = 19;
        if ( v21 != 3 )
        {
          v15 = 20;
          if ( v21 != 4 )
          {
            v15 = 24;
            if ( v21 != 8 )
              v15 = 13;
          }
        }
      }
      goto fail;
    }
    if ( (v14->flags & 0x402) == 1026 )
    {
      v18 = v14->sa_query_timed_out;
      if ( !v18 )
      {
        if ( v14->sa_query_count <= 0
          || (ap_check_sa_query_timeout(hapd, v14), (v14->flags & 0x402) == 1026) && !v14->sa_query_timed_out )
        {
          if ( v14->auth_alg != 2 )
          {
            if ( !v14->sa_query_count )
              ap_sta_start_sa_query(hapd, v14);
            v27 = hostapd_eid_assoc_comeback_time(hapd, v14, buf);
            hostapd_sta_assoc(hapd, addr, reassoc, 0x1Eu, buf, v27 - buf);
            return v18;
          }
        }
      }
    }
    v22 = wpa_auth_uses_mfp(v14->wpa_sm);
    v23 = v14->flags;
    if ( v22 )
      v24 = v23 | 0x400;
    else
      v24 = v23 & 0xFFFFFBFF;
    v14->flags = v24;
  }
  v25 = v14->flags & 2;
  v14->flags = v14->flags & 0xFFF7FFFF | 3;
  hostapd_set_sta_flags(hapd, v14);
  if ( !reassoc || (v26 = WPA_ASSOC_FT, v14->auth_alg != 2) )
    v26 = WPA_ASSOC;
  v18 = 0;
  wpa_auth_sm_event(v14->wpa_sm, v26);
  hostapd_new_assoc_sta(hapd, v14, v25 != 0);
  ieee802_1x_notify_port_enabled(v14->eapol_sm, 1);
  return v18;
}
