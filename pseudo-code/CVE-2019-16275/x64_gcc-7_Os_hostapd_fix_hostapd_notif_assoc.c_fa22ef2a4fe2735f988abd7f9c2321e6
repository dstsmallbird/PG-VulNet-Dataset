int __fastcall hostapd_notif_assoc(hostapd_data *hapd, const u8 *addr, const u8 *req_ies, size_t req_ies_len, int reassoc)
{
  u8 v5; // bl
  u8 v7; // r13
  u8 v8; // r15
  __int64 v9; // r10
  __int64 v10; // r11
  int v12; // eax
  const u8 *v13; // r13
  size_t v14; // r15
  sta_info *v15; // rax
  sta_info *v16; // rbx
  hostapd_iface *v17; // rax
  int v18; // edx
  __int64 v19; // rdx
  __int64 v20; // rcx
  __int64 v21; // r8
  wpa_state_machine *v22; // rsi
  unsigned int v23; // eax
  int v24; // er13
  u8 *v25; // rax
  int v26; // er12
  wpa_event v27; // esi
  u8 v29; // [rsp+0h] [rbp-718h]
  unsigned int v30; // [rsp+0h] [rbp-718h]
  u8 v33; // [rsp+1Eh] [rbp-6FAh]
  u8 v34; // [rsp+1Fh] [rbp-6F9h]
  ieee802_11_elems elems; // [rsp+28h] [rbp-6F0h] BYREF
  u8 buf[1064]; // [rsp+2B0h] [rbp-468h] BYREF
  unsigned __int64 v37; // [rsp+6D8h] [rbp-40h]

  v37 = __readfsqword(0x28u);
  if ( !addr )
  {
    wpa_printf(2, "hostapd_notif_assoc: Skip event with no address", req_ies, req_ies_len, reassoc);
    return -1;
  }
  v5 = *addr;
  v7 = addr[1];
  v8 = addr[2];
  v9 = addr[3];
  v10 = addr[4];
  v29 = addr[5];
  if ( (*addr & 1) != 0
    || !(v29 | (unsigned __int8)(v10 | v9 | v8 | v7 | v5))
    || (v34 = addr[4], v33 = addr[3], v12 = memcmp(addr, hapd->own_addr, 6uLL), v9 = v33, v10 = v34, !v12) )
  {
    wpa_printf(
      2,
      "%s: Invalid SA=%02x:%02x:%02x:%02x:%02x:%02x in received indication - ignore this indication silently",
      "hostapd_notif_assoc",
      v5,
      v7,
      v8,
      v9,
      v10,
      v29);
    return 0;
  }
  random_add_randomness(addr, 6uLL);
  hostapd_logger(hapd, addr, 1u, 2, "associated");
  ieee802_11_parse_elems(req_ies, req_ies_len, &elems, 0);
  if ( elems.wps_ie )
  {
    v13 = elems.wps_ie - 2;
    v14 = elems.wps_ie_len + 2LL;
    wpa_printf(2, "STA included WPS IE in (Re)AssocReq");
  }
  else if ( elems.rsn_ie )
  {
    v13 = elems.rsn_ie - 2;
    v14 = elems.rsn_ie_len + 2LL;
    wpa_printf(2, "STA included RSN IE in (Re)AssocReq");
  }
  else
  {
    v13 = elems.wpa_ie;
    if ( elems.wpa_ie )
    {
      v13 = elems.wpa_ie - 2;
      v14 = elems.wpa_ie_len + 2LL;
      wpa_printf(2, "STA included WPA IE in (Re)AssocReq");
    }
    else
    {
      v14 = 0LL;
      wpa_printf(2, "STA did not include WPS/RSN/WPA IE in (Re)AssocReq");
    }
  }
  v15 = ap_get_sta(hapd, addr);
  v16 = v15;
  if ( v15 )
  {
    ap_sta_no_session_timeout(hapd, v15);
    accounting_sta_stop(hapd, v16);
    v16->timeout_next = STA_NULLFUNC;
  }
  else
  {
    v16 = ap_sta_add(hapd, addr);
    if ( !v16 )
    {
      hostapd_drv_sta_disassoc(hapd, addr, 5);
      return -1;
    }
  }
  v17 = hapd->iface;
  v16->flags &= 0xFFFECFFF;
  if ( !v17->drv_max_acl_mac_addrs && hostapd_check_acl(hapd, addr, 0LL) != 1 )
  {
    wpa_printf(
      3,
      "STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect",
      *addr,
      addr[1],
      addr[2],
      addr[3],
      addr[4],
      addr[5]);
    v18 = 1;
fail:
    hostapd_drv_sta_disassoc(hapd, v16->addr, v18);
    ap_free_sta(hapd, v16);
    return -1;
  }
  ap_copy_sta_supp_op_classes(v16, elems.supp_op_classes, elems.supp_op_classes_len);
  if ( !hapd->conf->wpa )
  {
LABEL_51:
    v26 = v16->flags & 2;
    v16->flags = v16->flags & 0xFFF7FFFF | 3;
    hostapd_set_sta_flags(hapd, v16);
    if ( !reassoc || (v27 = WPA_ASSOC_FT, v16->auth_alg != 2) )
      v27 = WPA_ASSOC;
    wpa_auth_sm_event(v16->wpa_sm, v27);
    hostapd_new_assoc_sta(hapd, v16, v26 != 0);
    ieee802_1x_notify_port_enabled(v16->eapol_sm, 1);
    return 0;
  }
  if ( !v13 || !v14 )
  {
    wpa_printf(2, "No WPA/RSN IE from STA");
    v18 = 13;
    goto fail;
  }
  if ( !v16->wpa_sm )
    v16->wpa_sm = wpa_auth_sta_init(hapd->wpa_auth, v16->addr, 0LL);
  v22 = v16->wpa_sm;
  if ( !v22 )
  {
    wpa_printf(5, "Failed to initialize WPA state machine", v19, v20, v21);
    return -1;
  }
  v23 = wpa_validate_wpa_ie(
          hapd->wpa_auth,
          v22,
          hapd->iface->freq,
          v13,
          v14,
          elems.mdie,
          elems.mdie_len,
          elems.owe_dh,
          elems.owe_dh_len);
  if ( v23 )
  {
    v30 = v23;
    wpa_printf(2, "WPA/RSN information element rejected? (res %u)", v23);
    wpa_hexdump(2, "IE", v13, v14);
    v18 = 18;
    if ( v30 != 2 )
    {
      v18 = 19;
      if ( v30 != 3 )
      {
        v18 = 20;
        if ( v30 != 4 )
        {
          v18 = 13;
          if ( v30 == 8 )
            v18 = 24;
        }
      }
    }
    goto fail;
  }
  if ( (v16->flags & 0x402) == 1026 && !v16->sa_query_timed_out && v16->sa_query_count > 0 )
    ap_check_sa_query_timeout(hapd, v16);
  if ( (v16->flags & 0x402) != 1026 || (v24 = v16->sa_query_timed_out) != 0 || v16->auth_alg == 2 )
  {
    if ( wpa_auth_uses_mfp(v16->wpa_sm) )
      v16->flags |= 0x400u;
    else
      v16->flags &= 0xFFFFFBFF;
    goto LABEL_51;
  }
  if ( !v16->sa_query_count )
    ap_sta_start_sa_query(hapd, v16);
  v25 = hostapd_eid_assoc_comeback_time(hapd, v16, buf);
  hostapd_sta_assoc(hapd, addr, reassoc, 0x1Eu, buf, v25 - buf);
  return v24;
}
