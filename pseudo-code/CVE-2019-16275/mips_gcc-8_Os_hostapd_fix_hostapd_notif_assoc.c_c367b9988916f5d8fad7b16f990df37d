int __fastcall hostapd_notif_assoc(hostapd_data *hapd, const u8 *addr, const u8 *req_ies, size_t req_ies_len, int reassoc)
{
  int v6; // $a0
  const char *v7; // $a1
  int v8; // $s4
  size_t v9; // $s3
  int v10; // $s7
  int v11; // $fp
  int v12; // $s6
  int v13; // $a3
  int v14; // $t0
  int v17; // $v0
  int v18; // $s3
  const u8 *v19; // $s3
  size_t v20; // $s4
  sta_info *v21; // $v0
  sta_info *v22; // $s0
  int v23; // $a2
  int v24; // $a3
  int v25; // $a2
  wpa_state_machine *v26; // $a1
  int v27; // $v0
  int v28; // $s7
  int v29; // $v0
  u32 v30; // $v1
  unsigned int v31; // $v1
  int v32; // $s2
  wpa_event v33; // $a1
  u8 *v34; // $v0
  int v36; // [sp+30h] [-590h]
  int v37; // [sp+34h] [-58Ch]
  ieee802_11_elems elems; // [sp+38h] [-588h] BYREF
  u8 buf[1064]; // [sp+194h] [-42Ch] BYREF

  if ( !addr )
  {
    v6 = 2;
    v7 = "hostapd_notif_assoc: Skip event with no address";
LABEL_3:
    wpa_printf(v6, v7, req_ies, req_ies_len);
    return -1;
  }
  v8 = *addr;
  v9 = req_ies_len;
  v10 = addr[1];
  v11 = addr[2];
  v12 = addr[3];
  v13 = addr[4];
  v14 = addr[5];
  if ( (v8 & 1) != 0
    || !(v14 | v13 | v12 | v11 | v8 | v10)
    || (v37 = addr[4], v36 = addr[5], v17 = memcmp(addr, hapd->own_addr, 6u), v14 = v36, v13 = v37, !v17) )
  {
    wpa_printf(
      2,
      "%s: Invalid SA=%02x:%02x:%02x:%02x:%02x:%02x in received indication - ignore this indication silently",
      "hostapd_notif_assoc",
      v8,
      v10,
      v11,
      v12,
      v13,
      v14);
    return 0;
  }
  random_add_randomness(addr, 6u);
  hostapd_logger(hapd, addr, 1u, 2, "associated");
  ieee802_11_parse_elems(req_ies, v9, &elems, 0);
  if ( elems.wps_ie )
  {
    v19 = elems.wps_ie - 2;
    v20 = elems.wps_ie_len + 2;
    wpa_printf(2, "STA included WPS IE in (Re)AssocReq");
  }
  else if ( elems.rsn_ie )
  {
    v19 = elems.rsn_ie - 2;
    v20 = elems.rsn_ie_len + 2;
    wpa_printf(2, "STA included RSN IE in (Re)AssocReq");
  }
  else
  {
    v19 = elems.wpa_ie;
    if ( elems.wpa_ie )
    {
      v19 = elems.wpa_ie - 2;
      v20 = elems.wpa_ie_len + 2;
      wpa_printf(2, "STA included WPA IE in (Re)AssocReq");
    }
    else
    {
      v20 = 0;
      wpa_printf(2, "STA did not include WPS/RSN/WPA IE in (Re)AssocReq");
    }
  }
  v21 = ap_get_sta(hapd, addr);
  v22 = v21;
  if ( v21 )
  {
    ap_sta_no_session_timeout(hapd, v21);
    accounting_sta_stop(hapd, v22);
    v22->timeout_next = STA_NULLFUNC;
  }
  else
  {
    v22 = ap_sta_add(hapd, addr);
    if ( !v22 )
    {
      hostapd_drv_sta_disassoc(hapd, addr, 5);
      return -1;
    }
  }
  v22->flags &= 0xFFFECFFF;
  if ( !hapd->iface->drv_max_acl_mac_addrs && hostapd_check_acl(hapd, addr, 0) != 1 )
  {
    wpa_printf(
      3,
      "STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect",
      *addr,
      addr[1],
      addr[2],
      addr[3],
      addr[4],
      addr[5]);
    v23 = 1;
fail:
    hostapd_drv_sta_disassoc(hapd, v22->addr, v23);
    ((void (__fastcall *)(hostapd_data *, sta_info *, int, int))ap_free_sta)(hapd, v22, v25, v24);
    return -1;
  }
  ap_copy_sta_supp_op_classes(v22, elems.supp_op_classes, elems.supp_op_classes_len);
  if ( !hapd->conf->wpa )
  {
LABEL_45:
    v32 = v22->flags & 2;
    v22->flags = v22->flags & 0xFFF7FFFF | 3;
    hostapd_set_sta_flags(hapd, v22);
    if ( !reassoc || (v33 = WPA_ASSOC_FT, v22->auth_alg != 2) )
      v33 = WPA_ASSOC;
    wpa_auth_sm_event(v22->wpa_sm, v33);
    hostapd_new_assoc_sta(hapd, v22, v32 != 0);
    ieee802_1x_notify_port_enabled(v22->eapol_sm, 1);
    return 0;
  }
  if ( !v19 || !v20 )
  {
    wpa_printf(2, "No WPA/RSN IE from STA");
    v23 = 13;
    goto fail;
  }
  if ( !v22->wpa_sm )
    v22->wpa_sm = wpa_auth_sta_init(hapd->wpa_auth, v22->addr, 0);
  v26 = v22->wpa_sm;
  req_ies_len = (size_t)v19;
  if ( !v26 )
  {
    v6 = 5;
    v7 = "Failed to initialize WPA state machine";
    goto LABEL_3;
  }
  v27 = wpa_validate_wpa_ie(
          hapd->wpa_auth,
          v26,
          hapd->iface->freq,
          v19,
          v20,
          elems.mdie,
          elems.mdie_len,
          elems.owe_dh,
          elems.owe_dh_len);
  v28 = v27;
  if ( v27 )
  {
    wpa_printf(2, "WPA/RSN information element rejected? (res %u)", v27);
    wpa_hexdump(2, "IE", v19, v20);
    v23 = 18;
    if ( v28 != 2 )
    {
      v23 = 19;
      if ( v28 != 3 )
      {
        v23 = 20;
        if ( v28 != 4 )
        {
          v23 = 24;
          if ( v28 != 8 )
            v23 = 13;
        }
      }
    }
    goto fail;
  }
  if ( (v22->flags & 0x402) != 1026
    || (v18 = v22->sa_query_timed_out) != 0
    || v22->sa_query_count > 0
    && ((ap_check_sa_query_timeout(hapd, v22), (v22->flags & 0x402) != 1026) || v22->sa_query_timed_out)
    || v22->auth_alg == 2 )
  {
    v29 = wpa_auth_uses_mfp(v22->wpa_sm);
    v30 = v22->flags;
    if ( v29 )
      v31 = v30 | 0x400;
    else
      v31 = v30 & 0xFFFFFBFF;
    v22->flags = v31;
    goto LABEL_45;
  }
  if ( !v22->sa_query_count )
    ap_sta_start_sa_query(hapd, v22);
  v34 = hostapd_eid_assoc_comeback_time(hapd, v22, buf);
  hostapd_sta_assoc(hapd, addr, reassoc, 0x1Eu, buf, v34 - buf);
  return v18;
}
