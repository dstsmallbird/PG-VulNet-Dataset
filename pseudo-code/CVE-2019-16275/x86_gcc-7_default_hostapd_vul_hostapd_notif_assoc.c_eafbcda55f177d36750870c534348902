int __cdecl hostapd_notif_assoc(hostapd_data *hapd, const u8 *addr, const u8 *req_ies, size_t req_ies_len, int reassoc)
{
  const u8 *v5; // edi
  sta_info *v6; // eax
  sta_info *v7; // ebp
  hostapd_iface *v8; // eax
  wpa_state_machine *v9; // eax
  wpa_authenticator *v10; // edx
  int v11; // eax
  bool v12; // zf
  u32 v13; // eax
  int v14; // edi
  wpa_state_machine *v15; // eax
  int v16; // eax
  int v17; // edi
  int v19; // ecx
  u8 *v20; // eax
  int res; // [esp+18h] [ebp-5B4h]
  u8 *p; // [esp+1Ch] [ebp-5B0h]
  ieee802_11_elems elems; // [esp+28h] [ebp-5A4h] BYREF
  u8 buf[1064]; // [esp+184h] [ebp-448h] BYREF
  unsigned int v25; // [esp+5ACh] [ebp-20h]

  v25 = __readgsdword(0x14u);
  if ( !addr )
  {
    v17 = -1;
    wpa_printf(2, "hostapd_notif_assoc: Skip event with no address");
    return v17;
  }
  random_add_randomness(addr, 6u);
  hostapd_logger(hapd, addr, 1u, 2, "associated");
  ieee802_11_parse_elems(req_ies, req_ies_len, &elems, 0);
  if ( elems.wps_ie )
  {
    v5 = elems.wps_ie - 2;
    p = (u8 *)(elems.wps_ie_len + 2);
    wpa_printf(2, "STA included WPS IE in (Re)AssocReq");
  }
  else if ( elems.rsn_ie )
  {
    v5 = elems.rsn_ie - 2;
    p = (u8 *)(elems.rsn_ie_len + 2);
    wpa_printf(2, "STA included RSN IE in (Re)AssocReq");
  }
  else
  {
    v5 = elems.wpa_ie;
    if ( elems.wpa_ie )
    {
      v5 = elems.wpa_ie - 2;
      p = (u8 *)(elems.wpa_ie_len + 2);
      wpa_printf(2, "STA included WPA IE in (Re)AssocReq");
    }
    else
    {
      wpa_printf(2, "STA did not include WPS/RSN/WPA IE in (Re)AssocReq");
      p = 0;
    }
  }
  v6 = ap_get_sta(hapd, addr);
  v7 = v6;
  if ( v6 )
  {
    ap_sta_no_session_timeout(hapd, v6);
    accounting_sta_stop(hapd, v7);
    v7->timeout_next = STA_NULLFUNC;
  }
  else
  {
    v7 = ap_sta_add(hapd, addr);
    if ( !v7 )
    {
      v17 = -1;
      hostapd_drv_sta_disassoc(hapd, addr, 5);
      return v17;
    }
  }
  v8 = hapd->iface;
  v7->flags &= 0xFFFECFFF;
  if ( !v8->drv_max_acl_mac_addrs && hostapd_check_acl(hapd, addr, 0) != 1 )
  {
    wpa_printf(
      3,
      "STA %02x:%02x:%02x:%02x:%02x:%02x not allowed to connect",
      *addr,
      addr[1],
      addr[2],
      addr[3],
      addr[4],
      addr[5]);
    v19 = 1;
fail:
    v17 = -1;
    hostapd_drv_sta_disassoc(hapd, v7->addr, v19);
    ap_free_sta(hapd, v7);
    return v17;
  }
  ap_copy_sta_supp_op_classes(v7, elems.supp_op_classes, elems.supp_op_classes_len);
  if ( !hapd->conf->wpa )
  {
    v13 = v7->flags;
LABEL_15:
    v14 = v13 & 2;
    v7->flags = v13 & 0xFFF7FFFF | 3;
    hostapd_set_sta_flags(hapd, v7);
    v15 = v7->wpa_sm;
    if ( reassoc && v7->auth_alg == 2 )
      wpa_auth_sm_event(v15, WPA_ASSOC_FT);
    else
      wpa_auth_sm_event(v15, WPA_ASSOC);
    v16 = v14 != 0;
    v17 = 0;
    hostapd_new_assoc_sta(hapd, v7, v16);
    ieee802_1x_notify_port_enabled(v7->eapol_sm, 1);
    return v17;
  }
  if ( !v5 || !p )
  {
    wpa_printf(2, "No WPA/RSN IE from STA");
    v19 = 13;
    goto fail;
  }
  v9 = v7->wpa_sm;
  v10 = hapd->wpa_auth;
  if ( !v9 )
  {
    v9 = wpa_auth_sta_init(v10, v7->addr, 0);
    v7->wpa_sm = v9;
    if ( !v9 )
    {
      v17 = -1;
      wpa_printf(5, "Failed to initialize WPA state machine");
      return v17;
    }
    v10 = hapd->wpa_auth;
  }
  v11 = wpa_validate_wpa_ie(
          v10,
          v9,
          hapd->iface->freq,
          v5,
          (size_t)p,
          elems.mdie,
          elems.mdie_len,
          elems.owe_dh,
          elems.owe_dh_len);
  if ( v11 )
  {
    res = v11;
    wpa_printf(2, "WPA/RSN information element rejected? (res %u)", v11);
    wpa_hexdump(2, "IE", v5, (size_t)p);
    v19 = 18;
    if ( res != 2 )
    {
      v19 = 19;
      if ( res != 3 )
      {
        v19 = 20;
        if ( res != 4 )
        {
          v19 = 13;
          if ( res == 8 )
            v19 = 24;
        }
      }
    }
    goto fail;
  }
  if ( (v7->flags & 0x402) != 1026
    || (v17 = v7->sa_query_timed_out) != 0
    || v7->sa_query_count > 0
    && ((ap_check_sa_query_timeout(hapd, v7), (v7->flags & 0x402) != 1026) || v7->sa_query_timed_out)
    || v7->auth_alg == 2 )
  {
    v12 = wpa_auth_uses_mfp(v7->wpa_sm) == 0;
    v13 = v7->flags;
    if ( v12 )
      BYTE1(v13) &= 0xFBu;
    else
      BYTE1(v13) |= 4u;
    goto LABEL_15;
  }
  if ( !v7->sa_query_count )
    ap_sta_start_sa_query(hapd, v7);
  v20 = hostapd_eid_assoc_comeback_time(hapd, v7, buf);
  hostapd_sta_assoc(hapd, addr, reassoc, 0x1Eu, buf, v20 - buf);
  return v17;
}
