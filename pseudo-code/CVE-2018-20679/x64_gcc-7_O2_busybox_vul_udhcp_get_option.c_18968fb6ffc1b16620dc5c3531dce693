unsigned __int8 *__fastcall udhcp_get_option(unsigned __int8 *a1, int a2, __int64 a3, __int64 a4, __int64 a5, int a6)
{
  unsigned __int8 *v6; // rbx
  __int64 v7; // r8
  __int64 v8; // rdx
  __int64 v9; // rcx
  int v10; // eax
  __int64 v11; // rbx

  v6 = a1 + 240;
  v7 = 0LL;
  for ( LODWORD(v8) = 388; ; LODWORD(v8) = 64 )
  {
    while ( 1 )
    {
      while ( 1 )
      {
        v9 = *v6;
        if ( !(_BYTE)v9 )
        {
          LODWORD(v8) = v8 - 1;
          ++v6;
          goto LABEL_11;
        }
        if ( (_BYTE)v9 == 0xFF )
          break;
        if ( (_DWORD)v8 == 1 || (v10 = v6[1] + 2, v8 = (unsigned int)(v8 - v10), (int)v8 < 0) )
        {
LABEL_12:
          v11 = 0LL;
          bb_error_msg((unsigned int)"bad packet, malformed option field", a2, v8, v9, v7, a6);
          return (unsigned __int8 *)v11;
        }
        a6 = (unsigned __int8)v9;
        if ( (unsigned __int8)v9 == a2 )
        {
          if ( (unsigned int)dhcp_verbose > 1 )
            log_option_part_0("option found", v6, v8, v9, v7);
          return v6 + 2;
        }
        if ( v6[1] )
        {
          if ( (_BYTE)v9 == 52 )
          {
            LODWORD(v9) = v6[2];
            v7 = (unsigned int)v9 | (unsigned int)v7;
          }
        }
        v6 += v10;
LABEL_11:
        if ( !(_DWORD)v8 )
          goto LABEL_12;
      }
      if ( (v7 & 0x101) != 1 )
        break;
      v7 = (unsigned int)v7 | 0x101;
      v6 = a1 + 108;
      LODWORD(v8) = 128;
    }
    if ( (v7 & 0x202) != 2 )
      break;
    v7 = (unsigned int)v7 | 0x202;
    v6 = a1 + 44;
  }
  v11 = 0LL;
  if ( (unsigned int)dhcp_verbose <= 2 )
    return (unsigned __int8 *)v11;
  bb_error_msg((unsigned int)"option 0x%02x not found", a2, v8, v9, v7, a6);
  return 0LL;
}
