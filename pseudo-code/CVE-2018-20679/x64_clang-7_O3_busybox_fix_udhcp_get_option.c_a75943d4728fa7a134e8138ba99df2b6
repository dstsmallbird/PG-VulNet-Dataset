__int64 __fastcall udhcp_get_option(__int64 a1, int a2)
{
  __int64 v2; // r12
  __int64 v3; // r9
  __int64 v4; // r8
  __int64 v5; // rcx
  int v6; // er11
  __int64 v7; // rdx
  __int64 v8; // rbx
  int v9; // eax
  __int64 v10; // r15
  int v11; // er8
  int v12; // er9
  char v14[552]; // [rsp+0h] [rbp-228h] BYREF

  v2 = a1 + 240;
  v3 = a1 + 108;
  v4 = a1 + 44;
  LODWORD(v5) = 388;
  v6 = 0;
  while ( 1 )
  {
    LODWORD(v7) = 1;
    v8 = 0LL;
    while ( 1 )
    {
      v9 = *(unsigned __int8 *)(v2 + v8);
      if ( *(_BYTE *)(v2 + v8) )
        break;
      ++v8;
      LODWORD(v7) = v7 - 1;
      if ( (int)v7 + (int)v5 < 2 )
        goto LABEL_22;
    }
    if ( (_BYTE)v9 == 0xFF )
    {
      if ( (v6 & 0x101) == 1 )
      {
        v6 |= 0x101u;
        LODWORD(v5) = 128;
        v2 = a1 + 108;
        continue;
      }
      if ( (v6 & 0x202) == 2 )
      {
        v6 |= 0x202u;
        LODWORD(v5) = 64;
        v2 = a1 + 44;
        continue;
      }
      v10 = 0LL;
      if ( (unsigned int)dhcp_verbose >= 3 )
        bb_error_msg((unsigned int)"option 0x%02x not found", a2, v7, v5, v4, v3, v14[0]);
      return v10;
    }
    LODWORD(v7) = v5 - v8;
    if ( (int)v5 - (int)v8 < 2 )
      goto LABEL_22;
    v7 = *(unsigned __int8 *)(v2 + v8 + 1);
    v5 = (unsigned int)-*(unsigned __int8 *)(v2 + v8 + 1) + (unsigned __int64)(unsigned int)(v5 - 2) - v8;
    if ( (int)v5 < 0 )
      goto LABEL_22;
    if ( v9 == a2 )
      break;
    if ( (_BYTE)v9 == 52 && (_BYTE)v7 )
      v6 |= *(unsigned __int8 *)(v2 + v8 + 2);
    v2 += v8 + v7 + 2;
    if ( (int)v5 <= 0 )
      goto LABEL_22;
  }
  if ( !(_BYTE)v7 )
  {
LABEL_22:
    v10 = 0LL;
    bb_error_msg((unsigned int)"bad packet, malformed option field", a2, v7, v5, v4, v3, v14[0]);
    return v10;
  }
  v10 = v2 + v8 + 2;
  if ( (unsigned int)dhcp_verbose > 1 )
  {
    *(_BYTE *)bin2hex(v14, v2 + v8 + 2, v7, v5, v4, v3) = 0;
    bb_error_msg(
      (unsigned int)"%s: 0x%02x %s",
      (unsigned int)"option found",
      *(unsigned __int8 *)(v2 + v8),
      (unsigned int)v14,
      v11,
      v12,
      v14[0]);
  }
  return v10;
}
