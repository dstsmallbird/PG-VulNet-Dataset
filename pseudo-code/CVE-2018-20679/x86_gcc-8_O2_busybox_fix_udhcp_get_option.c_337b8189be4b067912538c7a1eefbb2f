unsigned __int8 *__usercall udhcp_get_option(unsigned __int8 *a1, int a2)
{
  int v3; // edx
  unsigned __int8 *v4; // ebx
  unsigned int v5; // esi
  unsigned __int8 v6; // al
  int v7; // ecx
  unsigned __int8 *result; // eax
  unsigned __int8 v9; // [esp+0h] [ebp-28h]

  v3 = 388;
  v4 = a1 + 240;
  v5 = (unsigned int)&dword_0;
  while ( 1 )
  {
    while ( 1 )
    {
      v6 = *v4;
      if ( *v4 )
        break;
      --v3;
      ++v4;
LABEL_11:
      if ( !v3 )
        goto LABEL_12;
    }
    if ( v6 != 0xFF )
      break;
    if ( (v5 & 0x101) == 1 )
    {
      v5 |= 0x101u;
      v3 = 128;
      v4 = a1 + 108;
    }
    else
    {
      if ( (v5 & 0x202) != 2 )
      {
        result = 0;
        if ( (unsigned int)dhcp_verbose > 2 )
        {
          bb_error_msg((char *)&GLOBAL_OFFSET_TABLE_ - 365431);
          result = 0;
        }
        return result;
      }
      v5 |= 0x202u;
      v3 = 64;
      v4 = a1 + 44;
    }
  }
  if ( v3 == 1 )
    goto LABEL_12;
  v9 = v4[1];
  v7 = v9 + 2;
  v3 -= v7;
  if ( v3 < 0 )
    goto LABEL_12;
  if ( v6 != a2 )
  {
    if ( v6 == 52 )
    {
      if ( v9 )
        v5 |= v4[2];
    }
    v4 += v7;
    goto LABEL_11;
  }
  if ( !v9 )
  {
LABEL_12:
    bb_error_msg((char *)&GLOBAL_OFFSET_TABLE_ - 456796);
    return 0;
  }
  if ( *((_DWORD *)&GLOBAL_OFFSET_TABLE_ + 857) > 1u )
    log_option_part_0();
  return v4 + 2;
}
