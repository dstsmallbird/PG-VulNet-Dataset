unsigned __int8 *__usercall udhcp_get_option(unsigned __int8 *a1, int a2)
{
  unsigned __int8 *v3; // ebx
  int v4; // esi
  int v5; // eax
  unsigned __int8 v6; // dl
  int v7; // ecx
  unsigned __int8 *result; // eax
  unsigned __int8 v9; // [esp+4h] [ebp-24h]

  v3 = a1 + 240;
  v4 = 0;
  v5 = 388;
  while ( 1 )
  {
    while ( 1 )
    {
      v6 = *v3;
      if ( *v3 )
        break;
      --v5;
      ++v3;
LABEL_11:
      if ( !v5 )
        goto LABEL_12;
    }
    if ( v6 != 0xFF )
      break;
    if ( (v4 & 0x101) == 1 )
    {
      v4 |= 0x101u;
      v3 = a1 + 108;
      v5 = 128;
    }
    else
    {
      if ( (v4 & 0x202) != 2 )
      {
        result = 0;
        if ( (unsigned int)dhcp_verbose > 2 )
        {
          bb_error_msg((char *)&GLOBAL_OFFSET_TABLE_ - 362731);
          result = 0;
        }
        return result;
      }
      v4 |= 0x202u;
      v3 = a1 + 44;
      v5 = 64;
    }
  }
  if ( v5 == 1 )
    goto LABEL_12;
  v9 = v3[1];
  v7 = v9 + 2;
  v5 -= v7;
  if ( v5 < 0 )
    goto LABEL_12;
  if ( v6 != a2 )
  {
    if ( v9 )
    {
      if ( v6 == 52 )
        v4 |= v3[2];
    }
    v3 += v7;
    goto LABEL_11;
  }
  if ( !v9 )
  {
LABEL_12:
    bb_error_msg(&(&GLOBAL_OFFSET_TABLE_)[-14189] + 1);
    return 0;
  }
  if ( (unsigned int)*(&GLOBAL_OFFSET_TABLE_ + 857) > 1 )
    log_option_part_0();
  return v3 + 2;
}
