int __fastcall IGDstartelt(_DWORD *a1, _QWORD *a2, int a3)
{
  _DWORD *v3; // rax
  unsigned __int64 v4; // rdi
  _BYTE *v5; // rbx
  unsigned __int64 v6; // rdi

  v3 = a1;
  if ( a3 > 127 )
  {
    v6 = (unsigned __int64)(a1 + 2);
    *(_QWORD *)(v6 - 8) = *a2;
    *(_QWORD *)(v6 + 111) = *(_QWORD *)((char *)a2 + 119);
    qmemcpy(
      (void *)(v6 & 0xFFFFFFFFFFFFFFF8LL),
      (const void *)((char *)a2 - ((char *)v3 - (v6 & 0xFFFFFFFFFFFFFFF8LL))),
      8 * (((unsigned int)v3 - (v6 & 0xFFFFFFF8) + 127) >> 3));
    *((_BYTE *)v3 + 127) = 0;
    ++v3[96];
  }
  else
  {
    if ( (unsigned __int64)a3 < 8 )
    {
      if ( (a3 & 4) != 0 )
      {
        *a1 = *(_DWORD *)a2;
        *(_DWORD *)((char *)a1 + a3 - 4) = *(_DWORD *)((char *)a2 + a3 - 4);
      }
      else if ( a3 )
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        if ( (a3 & 2) != 0 )
          *(_WORD *)((char *)a1 + a3 - 2) = *(_WORD *)((char *)a2 + a3 - 2);
      }
    }
    else
    {
      v4 = (unsigned __int64)(a1 + 2);
      *(_QWORD *)(v4 - 8) = *a2;
      *(_QWORD *)(v4 + a3 - 16) = *(_QWORD *)((char *)a2 + a3 - 8);
      qmemcpy(
        (void *)(v4 & 0xFFFFFFFFFFFFFFF8LL),
        (const void *)((char *)a2 - ((char *)v3 - (v4 & 0xFFFFFFFFFFFFFFF8LL))),
        8 * (((unsigned __int64)v3 + a3 - (v4 & 0xFFFFFFFFFFFFFFF8LL)) >> 3));
    }
    *((_BYTE *)v3 + a3) = 0;
    ++v3[96];
    if ( a3 == 7 )
    {
      v5 = v3;
      LODWORD(v3) = memcmp(a2, "service", 7uLL);
      if ( !(_DWORD)v3 )
      {
        v5[2436] = 0;
        v5[2564] = 0;
        v5[2692] = 0;
        v5[2820] = 0;
      }
    }
  }
  return (int)v3;
}
