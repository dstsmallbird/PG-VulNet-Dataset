int __fastcall IGDstartelt(_BYTE *a1, char *a2, signed int a3)
{
  _BYTE *v3; // $s2
  char *v4; // $s0
  int result; // $v0
  char *v7; // $t1
  _DWORD *v8; // $v0
  int v9; // $t0
  int v10; // $a3
  int v11; // $a2
  int v12; // $a0
  int v13; // $a2
  int v14; // $a0

  v3 = a1;
  v4 = a2;
  if ( a3 >= 128 )
  {
    v7 = a2 + 112;
    v8 = a1;
    do
    {
      v9 = *(_DWORD *)a2;
      v10 = *((_DWORD *)a2 + 1);
      v11 = *((_DWORD *)a2 + 2);
      v12 = *((_DWORD *)a2 + 3);
      a2 += 16;
      *v8 = v9;
      v8[1] = v10;
      v8[2] = v11;
      v8[3] = v12;
      v8 += 4;
    }
    while ( a2 != v7 );
    v13 = *((_DWORD *)a2 + 1);
    v14 = *((_DWORD *)a2 + 2);
    *v8 = *(_DWORD *)a2;
    v8[1] = v13;
    v8[2] = v14;
    *((_BYTE *)v8 + 12) = a2[12];
    *((_BYTE *)v8 + 13) = a2[13];
    *((_BYTE *)v8 + 14) = a2[14];
    v3[127] = 0;
    result = *((_DWORD *)v3 + 96) + 1;
    *((_DWORD *)v3 + 96) = result;
  }
  else
  {
    memcpy(a1, a2, a3);
    v3[a3] = 0;
    result = *((_DWORD *)v3 + 96) + 1;
    *((_DWORD *)v3 + 96) = result;
    if ( a3 == 7 )
    {
      result = memcmp(v4, "service", 7u);
      if ( !result )
      {
        v3[2436] = 0;
        v3[2564] = 0;
        v3[2692] = 0;
        v3[2820] = 0;
      }
    }
  }
  return result;
}
