__m128i *__fastcall IGDstartelt(__m128i *a1, const __m128i *a2, int a3)
{
  __m128i *result; // rax
  unsigned __int64 v4; // rdi
  __int8 v5; // dl

  result = a1;
  if ( a3 > 127 )
  {
    *a1 = _mm_loadu_si128(a2);
    a1[1] = _mm_loadu_si128(a2 + 1);
    a1[2] = _mm_loadu_si128(a2 + 2);
    a1[3] = _mm_loadu_si128(a2 + 3);
    a1[4] = _mm_loadu_si128(a2 + 4);
    a1[5] = _mm_loadu_si128(a2 + 5);
    a1[6] = _mm_loadu_si128(a2 + 6);
    a1[7].m128i_i64[0] = a2[7].m128i_i64[0];
    a1[7].m128i_i32[2] = a2[7].m128i_i32[2];
    a1[7].m128i_i16[6] = a2[7].m128i_i16[6];
    v5 = a2[7].m128i_i8[14];
    a1[7].m128i_i8[15] = 0;
    ++a1[24].m128i_i32[0];
    a1[7].m128i_i8[14] = v5;
  }
  else
  {
    if ( (unsigned __int64)a3 < 8 )
    {
      if ( (a3 & 4) != 0 )
      {
        a1->m128i_i32[0] = a2->m128i_i32[0];
        *(__int32 *)((char *)&a1->m128i_i32[-1] + a3) = *(__int32 *)((char *)&a2->m128i_i32[-1] + a3);
      }
      else if ( a3 )
      {
        a1->m128i_i8[0] = a2->m128i_i8[0];
        if ( (a3 & 2) != 0 )
          *(__int16 *)((char *)&a1->m128i_i16[-1] + a3) = *(__int16 *)((char *)&a2->m128i_i16[-1] + a3);
      }
    }
    else
    {
      v4 = (unsigned __int64)&a1->m128i_u64[1];
      *(_QWORD *)(v4 - 8) = a2->m128i_i64[0];
      *(_QWORD *)(v4 + a3 - 16) = *(__int64 *)((char *)&a2->m128i_i64[-1] + a3);
      qmemcpy(
        (void *)(v4 & 0xFFFFFFFFFFFFFFF8LL),
        (const void *)((char *)a2 - ((char *)result - (v4 & 0xFFFFFFFFFFFFFFF8LL))),
        8 * (((unsigned __int64)result->m128i_u64 + a3 - (v4 & 0xFFFFFFFFFFFFFFF8LL)) >> 3));
    }
    result->m128i_i8[a3] = 0;
    ++result[24].m128i_i32[0];
    if ( a3 == 7 && a2->m128i_i32[0] == 1987208563 && a2->m128i_i16[2] == 25449 && a2->m128i_i8[6] == 101 )
    {
      result[152].m128i_i8[4] = 0;
      result[160].m128i_i8[4] = 0;
      result[168].m128i_i8[4] = 0;
      result[176].m128i_i8[4] = 0;
    }
  }
  return result;
}
