__int64 __fastcall cache_insert(const char *a1, _DWORD *a2, __int64 a3, unsigned __int64 a4, int a5)
{
  unsigned __int16 v5; // r13
  unsigned __int64 v8; // rcx
  unsigned __int64 v9; // rdx
  __int64 v10; // rax
  __int64 v11; // rbx
  int v12; // er14
  int v13; // ebp
  __int64 v14; // rcx
  _QWORD *v15; // rbx
  __int64 v16; // rax
  _OWORD *v18; // r14
  __int64 v19; // rdx
  __int64 *v20; // rcx
  bool v21; // zf
  __int64 *v22; // rdx
  char *v23; // rdi
  __int128 v25[4]; // [rsp+10h] [rbp-48h] BYREF

  v5 = a5;
  if ( (a5 & 0x980) != 0 )
  {
    log_query((unsigned int)(a5 + 0x10000), a1, a2, 0LL);
    v8 = *(_QWORD *)(dnsmasq_daemon + 456);
    v9 = a4;
    if ( v8 < a4 )
      v9 = *(_QWORD *)(dnsmasq_daemon + 456);
    if ( !v8 )
      v9 = a4;
    if ( *(_QWORD *)(dnsmasq_daemon + 448) > v9 )
      v9 = *(_QWORD *)(dnsmasq_daemon + 448);
    a4 = v9;
  }
  if ( insert_error )
    return 0LL;
  v10 = cache_scan_free(a1, a2, a3, v5);
  if ( v10 )
  {
    if ( (v5 & 0x180) == 0 )
      goto LABEL_42;
    v11 = v10;
    if ( (v5 & 8) == 0 )
      goto LABEL_42;
    if ( ((v5 & 0x80u) == 0 || *(char *)(v10 + 52) >= 0 || *(_DWORD *)(v10 + 24) != *a2)
      && ((v5 & 0x100) == 0
       || (*(_BYTE *)(v10 + 53) & 1) == 0
       || *(_DWORD *)(v10 + 24) != *a2
       || *(_DWORD *)(v10 + 28) != a2[1]
       || *(_DWORD *)(v10 + 32) != a2[2]
       || *(_DWORD *)(v10 + 36) != a2[3]) )
    {
      goto LABEL_42;
    }
    return v11;
  }
  v11 = cache_tail;
  if ( !cache_tail )
    goto LABEL_42;
  v12 = v5 & 4;
  v13 = 0;
  while ( 1 )
  {
    v14 = *(unsigned __int16 *)(v11 + 52);
    if ( (v14 & 0xC) == 0 )
    {
      if ( a1 && strlen(a1) >= 0x32 )
      {
        v16 = big_free;
        if ( !big_free )
        {
          if ( !(bignames_left | v5 & 0x5000) )
            goto LABEL_42;
          v16 = whine_malloc(1032LL);
          if ( !v16 )
            goto LABEL_42;
          v18 = a2;
          if ( bignames_left )
            --bignames_left;
LABEL_47:
          v19 = *(_QWORD *)v11;
          v20 = *(__int64 **)(v11 + 8);
          if ( v20 )
          {
            *v20 = v19;
            v19 = *(_QWORD *)v11;
          }
          else
          {
            cache_head = *(_QWORD *)v11;
          }
          v21 = v19 == 0;
          v22 = (__int64 *)(v19 + 8);
          if ( v21 )
            v22 = &cache_tail;
          *v22 = (__int64)v20;
          *(_WORD *)(v11 + 52) = v5;
          if ( v16 )
          {
            *(_QWORD *)(v11 + 56) = v16;
            v5 |= 0x200u;
            *(_WORD *)(v11 + 52) = v5;
          }
          if ( (v5 & 0x200) != 0 )
          {
            v23 = *(char **)(v11 + 56);
          }
          else
          {
            v23 = (char *)(v11 + 56);
            if ( (v5 & 2) != 0 )
            {
              v23 = *(char **)v23;
              if ( !a1 )
                goto LABEL_57;
              goto LABEL_61;
            }
          }
          if ( !a1 )
          {
LABEL_57:
            *v23 = 0;
            if ( !v18 )
              goto LABEL_63;
            goto LABEL_62;
          }
LABEL_61:
          strcpy(v23, a1);
          if ( !v18 )
          {
LABEL_63:
            *(_QWORD *)(v11 + 40) = a3 + a4;
            *(_QWORD *)v11 = new_chain;
            new_chain = v11;
            return v11;
          }
LABEL_62:
          *(_OWORD *)(v11 + 24) = *v18;
          goto LABEL_63;
        }
        big_free = *(_QWORD *)big_free;
      }
      else
      {
        v16 = 0LL;
      }
      v18 = a2;
      goto LABEL_47;
    }
    if ( v13 )
      break;
    if ( v12 )
    {
      v25[0] = *(_OWORD *)(v11 + 24);
      if ( (v14 & 0x200) != 0 )
      {
        v15 = *(_QWORD **)(v11 + 56);
      }
      else
      {
        v15 = (_QWORD *)(v11 + 56);
        if ( (v14 & 2) != 0 )
          v15 = (_QWORD *)*v15;
      }
      cache_scan_free(v15, v25, a3, v14);
      ++cache_live_freed;
      v13 = 1;
    }
    else
    {
      v13 = 0;
      cache_scan_free(0LL, 0LL, a3, 0LL);
      v12 = 1;
    }
    v11 = cache_tail;
    if ( !cache_tail )
      goto LABEL_42;
  }
  if ( !cache_insert_warned )
  {
    my_syslog(3LL, "Internal error in cache.");
    cache_insert_warned = 1;
  }
LABEL_42:
  insert_error = 1;
  return 0LL;
}
