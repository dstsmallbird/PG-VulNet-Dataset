int __cdecl cache_insert(char *s, int cp, time_t time1, int a4, __int16 a5)
{
  int v5; // ebx
  __int16 v6; // si
  _DWORD *v7; // ebp
  unsigned int v8; // eax
  unsigned int v9; // edx
  int v10; // edi
  int v11; // eax
  int v12; // ebp
  int v13; // esi
  __int16 v14; // bx
  char *src; // ebp
  int v16; // ebp
  int *v17; // esi
  char *v18; // eax
  int v20; // eax
  int v21; // eax
  __int16 v22; // [esp+10h] [ebp-2Ch]
  int v23; // [esp+14h] [ebp-28h]

  v5 = a4;
  if ( (a5 & 0x980) != 0 )
  {
    v6 = a5;
    v7 = (_DWORD *)cp;
    log_query((unsigned __int16)a5 + 0x10000, (int)s, (void *)cp, 0);
    v8 = *(_DWORD *)(dnsmasq_daemon + 252);
    v9 = a4;
    if ( v8 < a4 )
      v9 = *(_DWORD *)(dnsmasq_daemon + 252);
    if ( !v8 )
      v9 = a4;
    if ( *(_DWORD *)(dnsmasq_daemon + 248) > v9 )
      v9 = *(_DWORD *)(dnsmasq_daemon + 248);
    v5 = v9;
  }
  else
  {
    v7 = (_DWORD *)cp;
    v6 = a5;
  }
  v10 = 0;
  if ( !insert_error )
  {
    v11 = cache_scan_free(time1, v6);
    if ( v11 )
    {
      if ( (v6 & 0x180) != 0 )
      {
        if ( v7 )
        {
          v10 = v11;
          if ( (v6 & 8) != 0
            && ((a5 & 0x80u) != 0 && *(char *)(v11 + 36) < 0 && *(_DWORD *)(v11 + 12) == *v7
             || (v6 & 0x100) != 0
             && (*(_BYTE *)(v11 + 37) & 1) != 0
             && *(_DWORD *)(v11 + 12) == *v7
             && *(_DWORD *)(v11 + 16) == v7[1]
             && *(_DWORD *)(v11 + 20) == v7[2]
             && *(_DWORD *)(v11 + 24) == v7[3]) )
          {
            return v10;
          }
        }
      }
LABEL_40:
      insert_error = 1;
      return 0;
    }
    v22 = v6;
    v23 = v5;
    v10 = cache_tail;
    if ( !cache_tail )
      goto LABEL_40;
    v12 = v6 & 4;
    v13 = 0;
    while ( 1 )
    {
      v14 = *(_WORD *)(v10 + 36);
      if ( (v14 & 0xC) == 0 )
        break;
      if ( v13 )
      {
        if ( !cache_insert_warned )
        {
          my_syslog(3, "Internal error in cache.");
          cache_insert_warned = 1;
        }
        goto LABEL_40;
      }
      if ( v12 )
      {
        cache_get_name(v10);
        cache_scan_free(time1, v14);
        ++cache_live_freed;
        v13 = 1;
      }
      else
      {
        v13 = 0;
        cache_scan_free(time1, 0);
        v12 = 1;
      }
      v10 = cache_tail;
      if ( !cache_tail )
        goto LABEL_40;
    }
    src = s;
    if ( s && strlen(s) >= 0x32 )
    {
      v16 = big_free;
      if ( big_free )
      {
        big_free = *(_DWORD *)big_free;
      }
      else
      {
        if ( !(bignames_left | v22 & 0x5000) )
          goto LABEL_40;
        v21 = whine_malloc(0x404u);
        if ( !v21 )
          goto LABEL_40;
        v16 = v21;
        if ( bignames_left )
          --bignames_left;
      }
      v17 = (int *)cp;
      cache_unlink(v10);
      *(_DWORD *)(v10 + 40) = v16;
      *(_WORD *)(v10 + 36) = a5 | 0x200;
      v18 = (char *)cache_get_name(v10);
      src = s;
    }
    else
    {
      cache_unlink(v10);
      *(_WORD *)(v10 + 36) = a5;
      v18 = (char *)cache_get_name(v10);
      if ( !s )
      {
        *v18 = 0;
        v17 = (int *)cp;
        goto LABEL_46;
      }
      v17 = (int *)cp;
    }
    strcpy(v18, src);
LABEL_46:
    if ( v17 )
    {
      *(_DWORD *)(v10 + 24) = v17[3];
      *(_DWORD *)(v10 + 20) = v17[2];
      v20 = *v17;
      *(_DWORD *)(v10 + 16) = v17[1];
      *(_DWORD *)(v10 + 12) = v20;
    }
    *(_DWORD *)(v10 + 28) = time1 + v23;
    *(_DWORD *)v10 = new_chain;
    new_chain = v10;
  }
  return v10;
}
