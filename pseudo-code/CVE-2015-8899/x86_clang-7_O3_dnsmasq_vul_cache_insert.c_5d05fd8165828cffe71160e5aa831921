int __cdecl cache_insert(char *s, int cp, time_t time1, int a4, __int16 a5)
{
  __int16 v5; // bx
  unsigned int v6; // edx
  unsigned int v7; // eax
  int v8; // edi
  int v9; // eax
  __int16 v10; // ax
  int v11; // ebx
  int v12; // ebp
  __int16 v13; // ax
  int v14; // ebp
  int *v15; // eax
  int v16; // ecx
  int v18; // eax
  bool v19; // zf
  int *v20; // ecx
  __int16 v21; // ax
  char v22; // cl
  __int64 *v23; // ebx
  char *v24; // eax
  char *v25; // ecx
  time_t v26; // eax
  __int64 v27; // xmm0_8
  __int16 v28; // [esp+0h] [ebp-2Ch]
  int v29; // [esp+4h] [ebp-28h]

  if ( (a5 & 0x980) != 0 )
  {
    v5 = a5;
    log_query((unsigned __int16)a5 + 0x10000, (int)s, (void *)cp, 0);
    v6 = a4;
    v7 = *(_DWORD *)(dnsmasq_daemon + 252);
    if ( v7 < a4 )
      v6 = *(_DWORD *)(dnsmasq_daemon + 252);
    if ( !v7 )
      v6 = a4;
    if ( *(_DWORD *)(dnsmasq_daemon + 248) > v6 )
      v6 = *(_DWORD *)(dnsmasq_daemon + 248);
    v29 = v6;
    v8 = 0;
    if ( insert_error )
      return v8;
  }
  else
  {
    v29 = a4;
    v5 = a5;
    v8 = 0;
    if ( insert_error )
      return v8;
  }
  v9 = cache_scan_free(time1, a5);
  if ( v9 )
  {
    if ( (v5 & 0x180) == 0 )
      goto LABEL_41;
    v8 = v9;
    if ( (v5 & 8) == 0 )
      goto LABEL_41;
    v10 = v5;
    if ( (a5 & 0x80u) == 0 || *(char *)(v8 + 36) >= 0 || (v10 = v5, *(_DWORD *)(v8 + 12) != *(_DWORD *)cp) )
    {
      if ( (v10 & 0x100) == 0
        || (*(_BYTE *)(v8 + 37) & 1) == 0
        || *(_DWORD *)(v8 + 12) != *(_DWORD *)cp
        || *(_DWORD *)(v8 + 16) != *(_DWORD *)(cp + 4)
        || *(_DWORD *)(v8 + 20) != *(_DWORD *)(cp + 8)
        || *(_DWORD *)(v8 + 24) != *(_DWORD *)(cp + 12) )
      {
        goto LABEL_41;
      }
    }
    return v8;
  }
  v8 = cache_tail;
  if ( !cache_tail )
    goto LABEL_41;
  v28 = v5;
  v11 = v5 & 4;
  v12 = 0;
  while ( 1 )
  {
    v13 = *(_WORD *)(v8 + 36);
    if ( (v13 & 0xC) == 0 )
    {
      v14 = 0;
      if ( s && strlen(s) >= 0x32 )
      {
        v14 = big_free;
        if ( big_free )
        {
          big_free = *(_DWORD *)big_free;
        }
        else
        {
          if ( !(bignames_left | v28 & 0x5000) )
            goto LABEL_41;
          v18 = whine_malloc(0x404u);
          if ( !v18 )
            goto LABEL_41;
          v14 = v18;
          if ( bignames_left )
          {
            --bignames_left;
            v15 = *(int **)(v8 + 4);
            v16 = *(_DWORD *)v8;
            if ( v15 )
              goto LABEL_38;
            goto LABEL_47;
          }
        }
      }
      v15 = *(int **)(v8 + 4);
      v16 = *(_DWORD *)v8;
      if ( v15 )
      {
LABEL_38:
        *v15 = v16;
        v16 = *(_DWORD *)v8;
        goto LABEL_48;
      }
LABEL_47:
      cache_head = v16;
LABEL_48:
      v19 = v16 == 0;
      v20 = (int *)(v16 + 4);
      if ( v19 )
        v20 = &cache_tail;
      *v20 = (int)v15;
      v21 = v28;
      *(_WORD *)(v8 + 36) = a5;
      if ( v14 )
      {
        *(_DWORD *)(v8 + 40) = v14;
        v21 = a5 | 0x200;
        *(_WORD *)(v8 + 36) = a5 | 0x200;
      }
      if ( (v21 & 0x200) != 0 )
      {
        v24 = *(char **)(v8 + 40);
        v23 = (__int64 *)cp;
        v25 = s;
      }
      else
      {
        v22 = v21;
        v23 = (__int64 *)cp;
        v24 = (char *)(v8 + 40);
        v19 = (v22 & 2) == 0;
        v25 = s;
        if ( !v19 )
        {
          v24 = *(char **)v24;
          if ( !s )
          {
LABEL_60:
            *v24 = 0;
            v26 = time1;
            if ( !v23 )
            {
LABEL_62:
              *(_DWORD *)(v8 + 28) = v26 + v29;
              *(_DWORD *)v8 = new_chain;
              new_chain = v8;
              return v8;
            }
LABEL_61:
            v27 = *v23;
            *(_QWORD *)(v8 + 20) = v23[1];
            *(_QWORD *)(v8 + 12) = v27;
            goto LABEL_62;
          }
LABEL_58:
          strcpy(v24, v25);
          v26 = time1;
          if ( !v23 )
            goto LABEL_62;
          goto LABEL_61;
        }
      }
      if ( !v25 )
        goto LABEL_60;
      goto LABEL_58;
    }
    if ( v12 )
      break;
    if ( v11 )
    {
      cache_scan_free(time1, v13);
      ++cache_live_freed;
      v12 = 1;
      v8 = cache_tail;
      if ( !cache_tail )
        goto LABEL_41;
    }
    else
    {
      v12 = 0;
      cache_scan_free(time1, 0);
      v11 = 1;
      v8 = cache_tail;
      if ( !cache_tail )
        goto LABEL_41;
    }
  }
  if ( !cache_insert_warned )
  {
    my_syslog(3, "Internal error in cache.");
    cache_insert_warned = 1;
  }
LABEL_41:
  insert_error = 1;
  return 0;
}
