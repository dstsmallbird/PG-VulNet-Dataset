_BYTE *__fastcall do_rfc1035_name(_BYTE *result, char *a2, unsigned int a3)
{
  char v3; // r12
  int i; // lr
  char *v5; // r3
  bool v6; // zf
  _BYTE *v7; // r3
  int v8; // t1
  _BYTE *v9; // r12
  char v10; // r0
  int v11; // r3
  bool v12; // zf
  char *v13; // r0
  bool v14; // zf
  int v15; // t1

  if ( a2 )
  {
    if ( a3 )
    {
      while ( 1 )
      {
        v3 = *a2;
        if ( !*a2 || (unsigned int)(result + 1) > a3 )
          break;
        for ( i = 0; ; ++i )
        {
          v6 = v3 == 0;
          v7 = &result[i];
          if ( v3 )
            v6 = v3 == 46;
          if ( v6 )
            break;
          if ( (unsigned int)(v7 + 2) > a3 )
            return v7 + 1;
          v7[1] = v3;
          v5 = &a2[i];
          v3 = v5[1];
        }
        *result = i;
        v8 = (unsigned __int8)a2[i];
        a2 += i;
        result += i + 1;
        if ( v8 )
          ++a2;
        if ( !a2 )
          return v7 + 1;
      }
    }
    else
    {
      while ( 1 )
      {
        v9 = result;
        v10 = *a2;
        if ( !*a2 )
          break;
        v11 = 0;
        v12 = v10 == 0;
        if ( v10 )
          v12 = v10 == 46;
        if ( !v12 )
        {
          do
          {
            v9[v11 + 1] = v10;
            v13 = &a2[v11++];
            v10 = v13[1];
            v14 = v10 == 0;
            if ( v10 )
              v14 = v10 == 46;
          }
          while ( !v14 );
        }
        *v9 = v11;
        v15 = (unsigned __int8)a2[v11];
        a2 += v11;
        result = &v9[v11 + 1];
        if ( v15 )
          ++a2;
        if ( !a2 )
          return &v9[v11 + 1];
      }
      result = v9;
    }
  }
  return result;
}
