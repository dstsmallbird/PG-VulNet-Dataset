_BYTE *__fastcall do_rfc1035_name(_BYTE *a1, _BYTE *a2, unsigned int a3)
{
  int v4; // r4
  _BYTE *v5; // r5
  _BYTE *result; // r0
  char v7; // r6
  unsigned __int8 *v8; // r1
  int v9; // t1
  bool v10; // zf
  _BYTE *v11; // r3
  unsigned __int8 *v12; // r7
  int v13; // t1
  bool v14; // zf

  if ( !a2 )
    return a1;
  v4 = (unsigned __int8)*a2;
  if ( !*a2 )
    return a1;
  while ( !a3 )
  {
    v11 = a1 + 1;
    if ( v4 == 46 )
    {
      v5 = a2;
      result = a1 + 1;
      v7 = 0;
    }
    else
    {
      v12 = a2 + 1;
      do
      {
        *v11++ = v4;
        v5 = v12;
        v7 = (_BYTE)v12 - (_BYTE)a2;
        v13 = *v12++;
        v4 = v13;
        v14 = v13 == 0;
        if ( v13 )
          v14 = v4 == 46;
      }
      while ( !v14 );
LABEL_20:
      result = v11;
    }
LABEL_21:
    *a1 = v7;
    if ( !*v5 )
      return result;
    a2 = v5 + 1;
    if ( v5 == (_BYTE *)-1 )
      return result;
    v4 = (unsigned __int8)v5[1];
    if ( !v5[1] )
      return result;
    a1 = result;
  }
  if ( a3 < (unsigned int)(a1 + 1) )
    return a1;
  if ( v4 == 46 )
  {
    v5 = a2;
    result = a1 + 1;
    v7 = 0;
    goto LABEL_21;
  }
  v8 = a2 + 1;
  result = a1 + 1;
  while ( 1 )
  {
    v11 = result + 1;
    v5 = v8;
    v7 = (_BYTE)result - (_BYTE)a1;
    if ( a3 < (unsigned int)(result + 1) )
      return result;
    *result++ = v4;
    v9 = *v8++;
    v4 = v9;
    v10 = v9 == 0;
    if ( v9 )
      v10 = v4 == 46;
    if ( v10 )
      goto LABEL_20;
  }
}
