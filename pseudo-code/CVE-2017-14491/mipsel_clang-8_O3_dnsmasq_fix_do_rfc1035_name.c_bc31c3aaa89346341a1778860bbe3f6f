_BYTE *__fastcall do_rfc1035_name(_BYTE *a1, unsigned __int8 *a2, unsigned int a3)
{
  unsigned __int8 v3; // $v1
  int v4; // $a3
  int v5; // $t1
  _BYTE *v6; // $t0
  unsigned __int8 *v7; // $at
  unsigned __int8 *v8; // $at
  int v9; // $v1
  unsigned __int8 v11; // $a2
  int v12; // $t0
  int v13; // $v1
  unsigned __int8 *v14; // $at
  _BYTE *v15; // $v1

  if ( a2 )
  {
    if ( a3 )
    {
      while ( 1 )
      {
        v3 = *a2;
        if ( !*a2 || a3 < (unsigned int)(a1 + 1) )
          break;
        v4 = 0;
        v5 = *a2;
        v6 = a1;
        if ( *a2 )
        {
          while ( v5 != 46 )
          {
            if ( a3 < (unsigned int)(v6 + 2) )
              return v6 + 1;
            v7 = &a2[v4];
            v6[1] = v3;
            ++v4;
            v3 = v7[1];
            v5 = v3;
            v6 = &a1[v4];
            if ( !v3 )
              break;
          }
        }
        v8 = &a2[v4];
        *a1 = v4;
        v9 = a2[v4];
        a2 += v4 + 1;
        if ( !v9 )
          a2 = v8;
        a1 = v6 + 1;
        if ( !a2 )
          return v6 + 1;
      }
    }
    else
    {
      while ( 1 )
      {
        v11 = *a2;
        if ( !*a2 )
          break;
        v12 = *a2;
        v13 = 0;
        if ( *a2 )
        {
          do
          {
            if ( v12 == 46 )
              break;
            a1[v13 + 1] = v11;
            v11 = a2[v13 + 1];
            v12 = v11;
            ++v13;
          }
          while ( v11 );
        }
        v14 = &a2[v13];
        *a1 = v13;
        v15 = &a1[v13];
        a2 = v14 + 1;
        if ( !*v14 )
          a2 = v14;
        a1 = v15 + 1;
        if ( !a2 )
          return v15 + 1;
      }
    }
  }
  return a1;
}
